{"version":3,"file":"6008-13bcc3241c7bed6957c2.js","mappings":"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","sources":["webpack://analytics-1.4-apis/./node_modules/penpal/lib/enums.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/createDestructor.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/parent/getOriginFromSrc.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/errorSerialization.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/generateId.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/methodSerialization.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/connectCallSender.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/parent/handleAckMessageFactory.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/connectCallReceiver.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/parent/connectToChild.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/createLogger.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/parent/validateIframeHasSrcOrSrcDoc.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/parent/handleSynMessageFactory.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/startConnectionTimeout.js","webpack://analytics-1.4-apis/./node_modules/penpal/lib/parent/monitorIframeRemoval.js","webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Frame/index.js"],"sourcesContent":["export var MessageType;\n(function (MessageType) {\n  MessageType[\"Call\"] = \"call\";\n  MessageType[\"Reply\"] = \"reply\";\n  MessageType[\"Syn\"] = \"syn\";\n  MessageType[\"SynAck\"] = \"synAck\";\n  MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\nexport var Resolution;\n(function (Resolution) {\n  Resolution[\"Fulfilled\"] = \"fulfilled\";\n  Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n  ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n  ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\nexport var NativeErrorName;\n(function (NativeErrorName) {\n  NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\nexport var NativeEventType;\n(function (NativeEventType) {\n  NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));","export default (function (localName, log) {\n  var callbacks = [];\n  var destroyed = false;\n  return {\n    destroy: function destroy(error) {\n      if (!destroyed) {\n        destroyed = true;\n        log(\"\".concat(localName, \": Destroying connection\"));\n        callbacks.forEach(function (callback) {\n          callback(error);\n        });\n      }\n    },\n    onDestroy: function onDestroy(callback) {\n      destroyed ? callback() : callbacks.push(callback);\n    }\n  };\n});","var DEFAULT_PORT_BY_PROTOCOL = {\n  'http:': '80',\n  'https:': '443'\n};\nvar URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nvar opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n */\nexport default (function (src) {\n  if (src && opaqueOriginSchemes.find(function (scheme) {\n    return src.startsWith(scheme);\n  })) {\n    // The origin of the child document is an opaque origin and its\n    // serialization is \"null\"\n    // https://html.spec.whatwg.org/multipage/origin.html#origin\n    return 'null';\n  }\n  // Note that if src is undefined, then srcdoc is being used instead of src\n  // and we can follow this same logic below to get the origin of the parent,\n  // which is the origin that we will need to use.\n  var location = document.location;\n  var regexResult = URL_REGEX.exec(src);\n  var protocol;\n  var hostname;\n  var port;\n  if (regexResult) {\n    // It's an absolute URL. Use the parsed info.\n    // regexResult[1] will be undefined if the URL starts with //\n    protocol = regexResult[1] ? regexResult[1] : location.protocol;\n    hostname = regexResult[2];\n    port = regexResult[4];\n  } else {\n    // It's a relative path. Use the current location's info.\n    protocol = location.protocol;\n    hostname = location.hostname;\n    port = location.port;\n  }\n  // If the port is the default for the protocol, we don't want to add it to the origin string\n  // or it won't match the message's event.origin.\n  var portSuffix = port && port !== DEFAULT_PORT_BY_PROTOCOL[protocol] ? \":\".concat(port) : '';\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(portSuffix);\n});","/**\n * Converts an error object into a plain object.\n */\nexport var serializeError = function serializeError(_ref) {\n  var name = _ref.name,\n    message = _ref.message,\n    stack = _ref.stack;\n  return {\n    name: name,\n    message: message,\n    stack: stack\n  };\n};\n/**\n * Converts a plain object into an error object.\n */\nexport var deserializeError = function deserializeError(obj) {\n  var deserializedError = new Error();\n  // @ts-ignore\n  Object.keys(obj).forEach(function (key) {\n    return deserializedError[key] = obj[key];\n  });\n  return deserializedError;\n};","var id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\nexport default (function () {\n  return ++id;\n});","var KEY_PATH_DELIMITER = '.';\nvar keyPathToSegments = function keyPathToSegments(keyPath) {\n  return keyPath ? keyPath.split(KEY_PATH_DELIMITER) : [];\n};\nvar segmentsToKeyPath = function segmentsToKeyPath(segments) {\n  return segments.join(KEY_PATH_DELIMITER);\n};\nvar createKeyPath = function createKeyPath(key, prefix) {\n  var segments = keyPathToSegments(prefix || '');\n  segments.push(key);\n  return segmentsToKeyPath(segments);\n};\n/**\n * Given a `keyPath`, set it to be `value` on `subject`, creating any intermediate\n * objects along the way.\n *\n * @param {Object} subject The object on which to set value.\n * @param {string} keyPath The key path at which to set value.\n * @param {Object} value The value to store at the given key path.\n * @returns {Object} Updated subject.\n */\nexport var setAtKeyPath = function setAtKeyPath(subject, keyPath, value) {\n  var segments = keyPathToSegments(keyPath);\n  segments.reduce(function (prevSubject, key, idx) {\n    if (typeof prevSubject[key] === 'undefined') {\n      prevSubject[key] = {};\n    }\n    if (idx === segments.length - 1) {\n      prevSubject[key] = value;\n    }\n    return prevSubject[key];\n  }, subject);\n  return subject;\n};\n/**\n * Given a dictionary of (nested) keys to function, flatten them to a map\n * from key path to function.\n *\n * @param {Object} methods The (potentially nested) object to serialize.\n * @param {string} prefix A string with which to prefix entries. Typically not intended to be used by consumers.\n * @returns {Object} An map from key path in `methods` to functions.\n */\nexport var serializeMethods = function serializeMethods(methods, prefix) {\n  var flattenedMethods = {};\n  Object.keys(methods).forEach(function (key) {\n    var value = methods[key];\n    var keyPath = createKeyPath(key, prefix);\n    if (typeof value === 'object') {\n      // Recurse into any nested children.\n      Object.assign(flattenedMethods, serializeMethods(value, keyPath));\n    }\n    if (typeof value === 'function') {\n      // If we've found a method, expose it.\n      flattenedMethods[keyPath] = value;\n    }\n  });\n  return flattenedMethods;\n};\n/**\n * Given a map of key paths to functions, unpack the key paths to an object.\n *\n * @param {Object} flattenedMethods A map of key paths to functions to unpack.\n * @returns {Object} A (potentially nested) map of functions.\n */\nexport var deserializeMethods = function deserializeMethods(flattenedMethods) {\n  var methods = {};\n  for (var keyPath in flattenedMethods) {\n    setAtKeyPath(methods, keyPath, flattenedMethods[keyPath]);\n  }\n  return methods;\n};","import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { deserializeMethods } from './methodSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodKeyPaths Key paths of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nexport default (function (callSender, info, methodKeyPaths, destroyConnection, log) {\n  var localName = info.localName,\n    local = info.local,\n    remote = info.remote,\n    originForSending = info.originForSending,\n    originForReceiving = info.originForReceiving;\n  var destroyed = false;\n  log(\"\".concat(localName, \": Connecting call sender\"));\n  var createMethodProxy = function createMethodProxy(methodName) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      log(\"\".concat(localName, \": Sending \").concat(methodName, \"() call\"));\n      // This handles the case where the iframe has been removed from the DOM\n      // (and therefore its window closed), the consumer has not yet\n      // called destroy(), and the user calls a method exposed by\n      // the remote. We detect the iframe has been removed and force\n      // a destroy() immediately so that the consumer sees the error saying\n      // the connection has been destroyed. We wrap this check in a try catch\n      // because Edge throws an \"Object expected\" error when accessing\n      // contentWindow.closed on a contentWindow from an iframe that's been\n      // removed from the DOM.\n      var iframeRemoved;\n      try {\n        if (remote.closed) {\n          iframeRemoved = true;\n        }\n      } catch (e) {\n        iframeRemoved = true;\n      }\n      if (iframeRemoved) {\n        destroyConnection();\n      }\n      if (destroyed) {\n        var error = new Error(\"Unable to send \".concat(methodName, \"() call due \") + \"to destroyed connection\");\n        error.code = ErrorCode.ConnectionDestroyed;\n        throw error;\n      }\n      return new Promise(function (resolve, reject) {\n        var id = generateId();\n        var handleMessageEvent = function handleMessageEvent(event) {\n          if (event.source !== remote || event.data.penpal !== MessageType.Reply || event.data.id !== id) {\n            return;\n          }\n          if (originForReceiving !== '*' && event.origin !== originForReceiving) {\n            log(\"\".concat(localName, \" received message from origin \").concat(event.origin, \" which did not match expected origin \").concat(originForReceiving));\n            return;\n          }\n          var replyMessage = event.data;\n          log(\"\".concat(localName, \": Received \").concat(methodName, \"() reply\"));\n          local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n          var returnValue = replyMessage.returnValue;\n          if (replyMessage.returnValueIsError) {\n            returnValue = deserializeError(returnValue);\n          }\n          (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n        };\n        local.addEventListener(NativeEventType.Message, handleMessageEvent);\n        var callMessage = {\n          penpal: MessageType.Call,\n          id: id,\n          methodName: methodName,\n          args: args\n        };\n        remote.postMessage(callMessage, originForSending);\n      });\n    };\n  };\n  // Wrap each method in a proxy which sends it to the corresponding receiver.\n  var flattenedMethods = methodKeyPaths.reduce(function (api, name) {\n    api[name] = createMethodProxy(name);\n    return api;\n  }, {});\n  // Unpack the structure of the provided methods object onto the CallSender, exposing\n  // the methods in the same shape they were provided.\n  Object.assign(callSender, deserializeMethods(flattenedMethods));\n  return function () {\n    destroyed = true;\n  };\n});","import connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles an ACK handshake message.\n */\nexport default (function (serializedMethods, childOrigin, originForSending, destructor, log) {\n  var destroy = destructor.destroy,\n    onDestroy = destructor.onDestroy;\n  var destroyCallReceiver;\n  var receiverMethodNames;\n  // We resolve the promise with the call sender. If the child reconnects\n  // (for example, after refreshing or navigating to another page that\n  // uses Penpal, we'll update the call sender with methods that match the\n  // latest provided by the child.\n  var callSender = {};\n  return function (event) {\n    if (childOrigin !== '*' && event.origin !== childOrigin) {\n      log(\"Parent: Handshake - Received ACK message from origin \".concat(event.origin, \" which did not match expected origin \").concat(childOrigin));\n      return;\n    }\n    log('Parent: Handshake - Received ACK');\n    var info = {\n      localName: 'Parent',\n      local: window,\n      remote: event.source,\n      originForSending: originForSending,\n      originForReceiving: childOrigin\n    };\n    // If the child reconnected, we need to destroy the prior call receiver\n    // before setting up a new one.\n    if (destroyCallReceiver) {\n      destroyCallReceiver();\n    }\n    destroyCallReceiver = connectCallReceiver(info, serializedMethods, log);\n    onDestroy(destroyCallReceiver);\n    // If the child reconnected, we need to remove the methods from the\n    // previous call receiver off the sender.\n    if (receiverMethodNames) {\n      receiverMethodNames.forEach(function (receiverMethodName) {\n        delete callSender[receiverMethodName];\n      });\n    }\n    receiverMethodNames = event.data.methodNames;\n    var destroyCallSender = connectCallSender(callSender, info, receiverMethodNames, destroy, log);\n    onDestroy(destroyCallSender);\n    return callSender;\n  };\n});","import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\nexport default (function (info, serializedMethods, log) {\n  var localName = info.localName,\n    local = info.local,\n    remote = info.remote,\n    originForSending = info.originForSending,\n    originForReceiving = info.originForReceiving;\n  var destroyed = false;\n  var handleMessageEvent = function handleMessageEvent(event) {\n    if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n      return;\n    }\n    if (originForReceiving !== '*' && event.origin !== originForReceiving) {\n      log(\"\".concat(localName, \" received message from origin \").concat(event.origin, \" which did not match expected origin \").concat(originForReceiving));\n      return;\n    }\n    var callMessage = event.data;\n    var methodName = callMessage.methodName,\n      args = callMessage.args,\n      id = callMessage.id;\n    log(\"\".concat(localName, \": Received \").concat(methodName, \"() call\"));\n    var createPromiseHandler = function createPromiseHandler(resolution) {\n      return function (returnValue) {\n        log(\"\".concat(localName, \": Sending \").concat(methodName, \"() reply\"));\n        if (destroyed) {\n          // It's possible to throw an error here, but it would need to be thrown asynchronously\n          // and would only be catchable using window.onerror. This is because the consumer\n          // is merely returning a value from their method and not calling any function\n          // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n          // the value of doing so is questionable. Instead, we'll just log a message.\n          log(\"\".concat(localName, \": Unable to send \").concat(methodName, \"() reply due to destroyed connection\"));\n          return;\n        }\n        var message = {\n          penpal: MessageType.Reply,\n          id: id,\n          resolution: resolution,\n          returnValue: returnValue\n        };\n        if (resolution === Resolution.Rejected && returnValue instanceof Error) {\n          message.returnValue = serializeError(returnValue);\n          message.returnValueIsError = true;\n        }\n        try {\n          remote.postMessage(message, originForSending);\n        } catch (err) {\n          // If a consumer attempts to send an object that's not cloneable (e.g., window),\n          // we want to ensure the receiver's promise gets rejected.\n          if (err.name === NativeErrorName.DataCloneError) {\n            var errorReplyMessage = {\n              penpal: MessageType.Reply,\n              id: id,\n              resolution: Resolution.Rejected,\n              returnValue: serializeError(err),\n              returnValueIsError: true\n            };\n            remote.postMessage(errorReplyMessage, originForSending);\n          }\n          throw err;\n        }\n      };\n    };\n    new Promise(function (resolve) {\n      return resolve(serializedMethods[methodName].apply(serializedMethods, args));\n    }).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n  };\n  local.addEventListener(NativeEventType.Message, handleMessageEvent);\n  return function () {\n    destroyed = true;\n    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n  };\n});","import { MessageType, NativeEventType } from '../enums';\nimport createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport getOriginFromSrc from './getOriginFromSrc';\nimport handleAckMessageFactory from './handleAckMessageFactory';\nimport handleSynMessageFactory from './handleSynMessageFactory';\nimport { serializeMethods } from '../methodSerialization';\nimport monitorIframeRemoval from './monitorIframeRemoval';\nimport startConnectionTimeout from '../startConnectionTimeout';\nimport validateIframeHasSrcOrSrcDoc from './validateIframeHasSrcOrSrcDoc';\n/**\n * Attempts to establish communication with an iframe.\n */\nexport default (function (options) {\n  var iframe = options.iframe,\n    _options$methods = options.methods,\n    methods = _options$methods === void 0 ? {} : _options$methods,\n    childOrigin = options.childOrigin,\n    timeout = options.timeout,\n    _options$debug = options.debug,\n    debug = _options$debug === void 0 ? false : _options$debug;\n  var log = createLogger(debug);\n  var destructor = createDestructor('Parent', log);\n  var onDestroy = destructor.onDestroy,\n    _destroy = destructor.destroy;\n  if (!childOrigin) {\n    validateIframeHasSrcOrSrcDoc(iframe);\n    childOrigin = getOriginFromSrc(iframe.src);\n  }\n  // If event.origin is \"null\", the remote protocol is file: or data: and we\n  // must post messages with \"*\" as targetOrigin when sending messages.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n  var originForSending = childOrigin === 'null' ? '*' : childOrigin;\n  var serializedMethods = serializeMethods(methods);\n  var handleSynMessage = handleSynMessageFactory(log, serializedMethods, childOrigin, originForSending);\n  var handleAckMessage = handleAckMessageFactory(serializedMethods, childOrigin, originForSending, destructor, log);\n  var promise = new Promise(function (resolve, reject) {\n    var stopConnectionTimeout = startConnectionTimeout(timeout, _destroy);\n    var handleMessage = function handleMessage(event) {\n      if (event.source !== iframe.contentWindow || !event.data) {\n        return;\n      }\n      if (event.data.penpal === MessageType.Syn) {\n        handleSynMessage(event);\n        return;\n      }\n      if (event.data.penpal === MessageType.Ack) {\n        var callSender = handleAckMessage(event);\n        if (callSender) {\n          stopConnectionTimeout();\n          resolve(callSender);\n        }\n        return;\n      }\n    };\n    window.addEventListener(NativeEventType.Message, handleMessage);\n    log('Parent: Awaiting handshake');\n    monitorIframeRemoval(iframe, destructor);\n    onDestroy(function (error) {\n      window.removeEventListener(NativeEventType.Message, handleMessage);\n      if (error) {\n        reject(error);\n      }\n    });\n  });\n  return {\n    promise: promise,\n    destroy: function destroy() {\n      // Don't allow consumer to pass an error into destroy.\n      _destroy();\n    }\n  };\n});","export default (function (debug) {\n  /**\n   * Logs a message if debug is enabled.\n   */\n  return function () {\n    if (debug) {\n      var _console;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_console = console).log.apply(_console, ['[Penpal]'].concat(args)); // eslint-disable-line no-console\n    }\n  };\n});","import { ErrorCode } from '../enums';\nexport default (function (iframe) {\n  if (!iframe.src && !iframe.srcdoc) {\n    var error = new Error('Iframe must have src or srcdoc property defined.');\n    error.code = ErrorCode.NoIframeSrc;\n    throw error;\n  }\n});","import { MessageType } from '../enums';\n/**\n * Handles a SYN handshake message.\n */\nexport default (function (log, serializedMethods, childOrigin, originForSending) {\n  return function (event) {\n    // Under specific timing circumstances, we can receive an event\n    // whose source is null. This seems to happen when the child iframe is\n    // removed from the DOM about the same time it has sent the SYN event.\n    // https://github.com/Aaronius/penpal/issues/85\n    if (!event.source) {\n      return;\n    }\n    if (childOrigin !== '*' && event.origin !== childOrigin) {\n      log(\"Parent: Handshake - Received SYN message from origin \".concat(event.origin, \" which did not match expected origin \").concat(childOrigin));\n      return;\n    }\n    log('Parent: Handshake - Received SYN, responding with SYN-ACK');\n    var synAckMessage = {\n      penpal: MessageType.SynAck,\n      methodNames: Object.keys(serializedMethods)\n    };\n    event.source.postMessage(synAckMessage, originForSending);\n  };\n});","import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\nexport default (function (timeout, callback) {\n  var timeoutId;\n  if (timeout !== undefined) {\n    timeoutId = window.setTimeout(function () {\n      var error = new Error(\"Connection timed out after \".concat(timeout, \"ms\"));\n      error.code = ErrorCode.ConnectionTimeout;\n      callback(error);\n    }, timeout);\n  }\n  return function () {\n    clearTimeout(timeoutId);\n  };\n});","var CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\n/**\n * Monitors for iframe removal and destroys connection if iframe\n * is found to have been removed from DOM. This is to prevent memory\n * leaks when the iframe is removed from the document and the consumer\n * hasn't called destroy(). Without this, event listeners attached to\n * the window would stick around and since the event handlers have a\n * reference to the iframe in their closures, the iframe would stick\n * around too.\n */\nexport default (function (iframe, destructor) {\n  var destroy = destructor.destroy,\n    onDestroy = destructor.onDestroy;\n  var checkIframeInDocIntervalId = setInterval(function () {\n    if (!iframe.isConnected) {\n      clearInterval(checkIframeInDocIntervalId);\n      destroy();\n    }\n  }, CHECK_IFRAME_IN_DOC_INTERVAL);\n  onDestroy(function () {\n    clearInterval(checkIframeInDocIntervalId);\n  });\n});","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport { withPrefix } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { connectToChild } from 'penpal';\nimport { Footer } from '../Footer';\nimport PropTypes from 'prop-types';\nimport Context from '../Context';\nimport { isExternalLink } from '../../utils';\n\nconst Frame = ({ src, height = 'calc(100vh - var(--spectrum-global-dimension-size-800))', location }) => {\n  const iframe = useRef(null);\n  const { ims, isLoadingIms } = useContext(Context);\n  const [child, setChild] = useState(null);\n  // ensures connectToChild is called before the child calls connectToParent\n  const [connectionReady, setConnectionReady] = useState(false);\n\n  useEffect(() => {\n    if (child) {\n      if (iframe.current.clientHeight === 0) {\n        child.onHide();\n      } else {\n        child.onShow();\n      }\n    }\n  }, [location.pathname]);\n\n  useEffect(() => {\n    setConnectionReady(false);\n    if (iframe != null && !isLoadingIms) {\n      const connection = createConnection();\n      return () => {\n        connection.destroy();\n      };\n    }\n  }, [iframe, isLoadingIms]);\n\n  const iframeSrc = isExternalLink(src) ? src : withPrefix(src);\n\n  const createConnection = () => {\n    const connection = connectToChild({\n      // The iframe to which a connection should be made\n      iframe: iframe.current,\n      // Manually set origin as auto-detection may fail, as the src of the iframe is set later\n      childOrigin: isExternalLink(src) ? new URL(src).origin : window.origin,\n      // Methods the parent is exposing to the child\n      methods: {\n        scrollTop(position = 0) {\n          if (document?.scrollingElement) {\n            document.scrollingElement.scrollTop = position;\n          }\n        },\n        getURL() {\n          return window?.location?.href;\n        },\n        setURL(url) {\n          if (window?.location) {\n            window.location = url;\n          }\n        },\n        setHeight(height) {\n          iframe.current.style.height = height;\n        },\n        getIMSAccessToken() {\n          if (ims?.isSignedInUser()) {\n            return ims.getAccessToken();\n          }\n\n          return null;\n        },\n        getIMSProfile() {\n          if (ims?.isSignedInUser()) {\n            return ims.getProfile();\n          }\n\n          return null;\n        },\n        signIn() {\n          if (ims && !ims.isSignedInUser()) {\n            ims.signIn();\n          }\n        },\n        signOut() {\n          if (ims && ims.isSignedInUser()) {\n            ims.signOut();\n          }\n        },\n        getIMSClientId() {\n          if (ims) {\n            return ims.adobeIdData.client_id;\n          } else {\n            return null;\n          }\n        }\n      }\n    });\n\n    connection.promise.then((child) => {\n      if (iframe.current.clientHeight === 0) {\n        child.onHide();\n      } else {\n        child.onShow();\n      }\n      setChild(child);\n    });\n\n    // Notify that the connection is ready and the iframe src may be set\n    setConnectionReady(true);\n\n    return connection;\n  };\n\n  return (\n    <>\n      <iframe\n        title=\"Main content\"\n        ref={iframe}\n        src={connectionReady ? iframeSrc : ''}\n        css={css`\n          display: block;\n          height: ${height};\n          width: 100%;\n          border: none;\n        `}\n      />\n      <Footer />\n    </>\n  );\n};\n\nFrame.propTypes = {\n  src: PropTypes.string,\n  height: PropTypes.string,\n  location: PropTypes.object\n};\n\nexport default Frame;\n"],"names":["Resolution","ErrorCode","NativeErrorName","MessageType","NativeEventType","DEFAULT_PORT_BY_PROTOCOL","URL_REGEX","opaqueOriginSchemes","serializeError","_ref","name","message","stack","id","keyPathToSegments","keyPath","split","setAtKeyPath","subject","value","segments","reduce","prevSubject","key","idx","length","serializeMethods","methods","prefix","flattenedMethods","Object","keys","forEach","push","join","segmentsToKeyPath","createKeyPath","assign","callSender","info","methodKeyPaths","destroyConnection","log","localName","local","remote","originForSending","originForReceiving","destroyed","concat","createMethodProxy","methodName","_len","arguments","args","Array","_key","iframeRemoved","closed","e","error","Error","code","ConnectionDestroyed","Promise","resolve","reject","generateId","addEventListener","handleMessageEvent","event","source","data","penpal","origin","replyMessage","removeEventListener","obj","deserializedError","returnValue","returnValueIsError","resolution","Fulfilled","callMessage","postMessage","api","deserializeMethods","serializedMethods","childOrigin","destructor","destroyCallReceiver","receiverMethodNames","destroy","onDestroy","window","createPromiseHandler","Rejected","err","DataCloneError","errorReplyMessage","apply","then","receiverMethodName","methodNames","destroyCallSender","options","iframe","_options$methods","timeout","_options$debug","debug","_console","console","callbacks","callback","_destroy","src","srcdoc","NoIframeSrc","validateIframeHasSrcOrSrcDoc","find","scheme","startsWith","protocol","hostname","port","location","document","regexResult","exec","portSuffix","getOriginFromSrc","handleSynMessage","synAckMessage","handleSynMessageFactory","handleAckMessage","handleAckMessageFactory","promise","stopConnectionTimeout","timeoutId","undefined","setTimeout","ConnectionTimeout","clearTimeout","handleMessage","contentWindow","checkIframeInDocIntervalId","setInterval","isConnected","clearInterval","monitorIframeRemoval","_ref$height","height","useRef","_useContext","useContext","Context","ims","isLoadingIms","_useState","useState","child","setChild","_useState2","connectionReady","setConnectionReady","useEffect","current","clientHeight","onHide","onShow","pathname","connection","createConnection","iframeSrc","isExternalLink","withPrefix","connectToChild","URL","scrollTop","position","_document","scrollingElement","getURL","_window","_window$location","href","setURL","url","_window2","setHeight","style","getIMSAccessToken","isSignedInUser","getAccessToken","getIMSProfile","getProfile","signIn","signOut","getIMSClientId","adobeIdData","client_id","___EmotionJSX","React","title","ref","css","Footer"],"sourceRoot":""}