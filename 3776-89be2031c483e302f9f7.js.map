{"version":3,"sources":["webpack://dev-site-documentation-template/./node_modules/penpal/lib/enums.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/createDestructor.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/parent/getOriginFromSrc.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/errorSerialization.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/generateId.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/connectCallSender.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/parent/handleAckMessageFactory.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/connectCallReceiver.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/parent/connectToChild.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/createLogger.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/parent/validateIframeHasSrcOrSrcDoc.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/parent/handleSynMessageFactory.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/startConnectionTimeout.js","webpack://dev-site-documentation-template/./node_modules/penpal/lib/parent/monitorIframeRemoval.js","webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/Frame/index.js"],"names":["Resolution","NativeErrorName","MessageType","ErrorCode","NativeEventType","DEFAULT_PORT_BY_PROTOCOL","URL_REGEX","opaqueOriginSchemes","serializeError","_ref","name","message","stack","deserializeError","obj","deserializedError","Error","Object","keys","forEach","key","id","callSender","info","methodNames","destroyConnection","log","localName","local","remote","originForSending","originForReceiving","destroyed","concat","reduce","api","methodName","_len","arguments","length","args","Array","_key","iframeRemoved","closed","e","error","code","Promise","resolve","reject","generateId","addEventListener","handleMessageEvent","event","source","data","penpal","origin","replyMessage","removeEventListener","returnValue","returnValueIsError","resolution","Fulfilled","callMessage","postMessage","createMethodProxy","methods","childOrigin","destructor","destroyCallReceiver","receiverMethodNames","destroy","onDestroy","window","createPromiseHandler","Rejected","err","DataCloneError","errorReplyMessage","apply","then","receiverMethodName","destroyCallSender","options","callbacks","iframe","_options$methods","timeout","_options$debug","debug","_console","console","callback","push","_destroy","src","srcdoc","validateIframeHasSrcOrSrcDoc","find","scheme","startsWith","protocol","hostname","port","location","document","regexResult","exec","portSuffix","getOriginFromSrc","handleSynMessage","synAckMessage","handleSynMessageFactory","handleAckMessage","handleAckMessageFactory","promise","stopConnectionTimeout","timeoutId","undefined","setTimeout","clearTimeout","handleMessage","contentWindow","checkIframeInDocIntervalId","setInterval","isConnected","clearInterval","monitorIframeRemoval","height","useRef","ims","useContext","Context","useState","child","setChild","useEffect","current","clientHeight","onHide","onShow","pathname","title","ref","isExternalLink","withPrefix","onLoad","connectToChild","scrollTop","position","scrollingElement","getURL","href","setURL","url","setHeight","style","getIMSAccessToken","isSignedInUser","getAccessToken","getIMSProfile","getProfile","signIn","signOut","css","Footer"],"mappings":"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","file":"3776-89be2031c483e302f9f7.js","sourcesContent":["export var MessageType;\n\n(function (MessageType) {\n  MessageType[\"Call\"] = \"call\";\n  MessageType[\"Reply\"] = \"reply\";\n  MessageType[\"Syn\"] = \"syn\";\n  MessageType[\"SynAck\"] = \"synAck\";\n  MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\n\nexport var Resolution;\n\n(function (Resolution) {\n  Resolution[\"Fulfilled\"] = \"fulfilled\";\n  Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n  ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n  ErrorCode[\"NotInIframe\"] = \"NotInIframe\";\n  ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\n\nexport var NativeErrorName;\n\n(function (NativeErrorName) {\n  NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\n\nexport var NativeEventType;\n\n(function (NativeEventType) {\n  NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));","export default (function () {\n  var callbacks = [];\n  var destroyed = false;\n  return {\n    destroy: function destroy(error) {\n      destroyed = true;\n      callbacks.forEach(function (callback) {\n        callback(error);\n      });\n    },\n    onDestroy: function onDestroy(callback) {\n      destroyed ? callback() : callbacks.push(callback);\n    }\n  };\n});","var DEFAULT_PORT_BY_PROTOCOL = {\n  'http:': '80',\n  'https:': '443'\n};\nvar URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nvar opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n */\n\nexport default (function (src) {\n  if (src && opaqueOriginSchemes.find(function (scheme) {\n    return src.startsWith(scheme);\n  })) {\n    // The origin of the child document is an opaque origin and its\n    // serialization is \"null\"\n    // https://html.spec.whatwg.org/multipage/origin.html#origin\n    return 'null';\n  } // Note that if src is undefined, then srcdoc is being used instead of src\n  // and we can follow this same logic below to get the origin of the parent,\n  // which is the origin that we will need to use.\n\n\n  var location = document.location;\n  var regexResult = URL_REGEX.exec(src);\n  var protocol;\n  var hostname;\n  var port;\n\n  if (regexResult) {\n    // It's an absolute URL. Use the parsed info.\n    // regexResult[1] will be undefined if the URL starts with //\n    protocol = regexResult[1] ? regexResult[1] : location.protocol;\n    hostname = regexResult[2];\n    port = regexResult[4];\n  } else {\n    // It's a relative path. Use the current location's info.\n    protocol = location.protocol;\n    hostname = location.hostname;\n    port = location.port;\n  } // If the port is the default for the protocol, we don't want to add it to the origin string\n  // or it won't match the message's event.origin.\n\n\n  var portSuffix = port && port !== DEFAULT_PORT_BY_PROTOCOL[protocol] ? \":\".concat(port) : '';\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(portSuffix);\n});","/**\n * Converts an error object into a plain object.\n */\nexport var serializeError = function serializeError(_ref) {\n  var name = _ref.name,\n      message = _ref.message,\n      stack = _ref.stack;\n  return {\n    name: name,\n    message: message,\n    stack: stack\n  };\n};\n/**\n * Converts a plain object into an error object.\n */\n\nexport var deserializeError = function deserializeError(obj) {\n  var deserializedError = new Error(); // @ts-ignore\n\n  Object.keys(obj).forEach(function (key) {\n    return deserializedError[key] = obj[key];\n  });\n  return deserializedError;\n};","var id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\n\nexport default (function () {\n  return ++id;\n});","import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodNames Names of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\n\nexport default (function (callSender, info, methodNames, destroyConnection, log) {\n  var localName = info.localName,\n      local = info.local,\n      remote = info.remote,\n      originForSending = info.originForSending,\n      originForReceiving = info.originForReceiving;\n  var destroyed = false;\n  log(\"\".concat(localName, \": Connecting call sender\"));\n\n  var createMethodProxy = function createMethodProxy(methodName) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      log(\"\".concat(localName, \": Sending \").concat(methodName, \"() call\")); // This handles the case where the iframe has been removed from the DOM\n      // (and therefore its window closed), the consumer has not yet\n      // called destroy(), and the user calls a method exposed by\n      // the remote. We detect the iframe has been removed and force\n      // a destroy() immediately so that the consumer sees the error saying\n      // the connection has been destroyed. We wrap this check in a try catch\n      // because Edge throws an \"Object expected\" error when accessing\n      // contentWindow.closed on a contentWindow from an iframe that's been\n      // removed from the DOM.\n\n      var iframeRemoved;\n\n      try {\n        if (remote.closed) {\n          iframeRemoved = true;\n        }\n      } catch (e) {\n        iframeRemoved = true;\n      }\n\n      if (iframeRemoved) {\n        destroyConnection();\n      }\n\n      if (destroyed) {\n        var error = new Error(\"Unable to send \".concat(methodName, \"() call due \") + \"to destroyed connection\");\n        error.code = ErrorCode.ConnectionDestroyed;\n        throw error;\n      }\n\n      return new Promise(function (resolve, reject) {\n        var id = generateId();\n\n        var handleMessageEvent = function handleMessageEvent(event) {\n          if (event.source !== remote || event.data.penpal !== MessageType.Reply || event.data.id !== id) {\n            return;\n          }\n\n          if (event.origin !== originForReceiving) {\n            log(\"\".concat(localName, \" received message from origin \").concat(event.origin, \" which did not match expected origin \").concat(originForReceiving));\n            return;\n          }\n\n          var replyMessage = event.data;\n          log(\"\".concat(localName, \": Received \").concat(methodName, \"() reply\"));\n          local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n          var returnValue = replyMessage.returnValue;\n\n          if (replyMessage.returnValueIsError) {\n            returnValue = deserializeError(returnValue);\n          }\n\n          (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n        };\n\n        local.addEventListener(NativeEventType.Message, handleMessageEvent);\n        var callMessage = {\n          penpal: MessageType.Call,\n          id: id,\n          methodName: methodName,\n          args: args\n        };\n        remote.postMessage(callMessage, originForSending);\n      });\n    };\n  };\n\n  methodNames.reduce(function (api, methodName) {\n    api[methodName] = createMethodProxy(methodName);\n    return api;\n  }, callSender);\n  return function () {\n    destroyed = true;\n  };\n});","import connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles an ACK handshake message.\n */\n\nexport default (function (methods, childOrigin, originForSending, destructor, log) {\n  var destroy = destructor.destroy,\n      onDestroy = destructor.onDestroy;\n  var destroyCallReceiver;\n  var receiverMethodNames; // We resolve the promise with the call sender. If the child reconnects\n  // (for example, after refreshing or navigating to another page that\n  // uses Penpal, we'll update the call sender with methods that match the\n  // latest provided by the child.\n\n  var callSender = {};\n  return function (event) {\n    if (event.origin !== childOrigin) {\n      log(\"Parent: Handshake - Received ACK message from origin \".concat(event.origin, \" which did not match expected origin \").concat(childOrigin));\n      return;\n    }\n\n    log('Parent: Handshake - Received ACK');\n    var info = {\n      localName: 'Parent',\n      local: window,\n      remote: event.source,\n      originForSending: originForSending,\n      originForReceiving: childOrigin\n    }; // If the child reconnected, we need to destroy the prior call receiver\n    // before setting up a new one.\n\n    if (destroyCallReceiver) {\n      destroyCallReceiver();\n    }\n\n    destroyCallReceiver = connectCallReceiver(info, methods, log);\n    onDestroy(destroyCallReceiver); // If the child reconnected, we need to remove the methods from the\n    // previous call receiver off the sender.\n\n    if (receiverMethodNames) {\n      receiverMethodNames.forEach(function (receiverMethodName) {\n        delete callSender[receiverMethodName];\n      });\n    }\n\n    receiverMethodNames = event.data.methodNames;\n    var destroyCallSender = connectCallSender(callSender, info, receiverMethodNames, destroy, log);\n    onDestroy(destroyCallSender);\n    return callSender;\n  };\n});","import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\n\nexport default (function (info, methods, log) {\n  var localName = info.localName,\n      local = info.local,\n      remote = info.remote,\n      originForSending = info.originForSending,\n      originForReceiving = info.originForReceiving;\n  var destroyed = false;\n\n  var handleMessageEvent = function handleMessageEvent(event) {\n    if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n      return;\n    }\n\n    if (event.origin !== originForReceiving) {\n      log(\"\".concat(localName, \" received message from origin \").concat(event.origin, \" which did not match expected origin \").concat(originForReceiving));\n      return;\n    }\n\n    var callMessage = event.data;\n    var methodName = callMessage.methodName,\n        args = callMessage.args,\n        id = callMessage.id;\n    log(\"\".concat(localName, \": Received \").concat(methodName, \"() call\"));\n\n    var createPromiseHandler = function createPromiseHandler(resolution) {\n      return function (returnValue) {\n        log(\"\".concat(localName, \": Sending \").concat(methodName, \"() reply\"));\n\n        if (destroyed) {\n          // It's possible to throw an error here, but it would need to be thrown asynchronously\n          // and would only be catchable using window.onerror. This is because the consumer\n          // is merely returning a value from their method and not calling any function\n          // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n          // the value of doing so is questionable. Instead, we'll just log a message.\n          log(\"\".concat(localName, \": Unable to send \").concat(methodName, \"() reply due to destroyed connection\"));\n          return;\n        }\n\n        var message = {\n          penpal: MessageType.Reply,\n          id: id,\n          resolution: resolution,\n          returnValue: returnValue\n        };\n\n        if (resolution === Resolution.Rejected && returnValue instanceof Error) {\n          message.returnValue = serializeError(returnValue);\n          message.returnValueIsError = true;\n        }\n\n        try {\n          remote.postMessage(message, originForSending);\n        } catch (err) {\n          // If a consumer attempts to send an object that's not cloneable (e.g., window),\n          // we want to ensure the receiver's promise gets rejected.\n          if (err.name === NativeErrorName.DataCloneError) {\n            var errorReplyMessage = {\n              penpal: MessageType.Reply,\n              id: id,\n              resolution: Resolution.Rejected,\n              returnValue: serializeError(err),\n              returnValueIsError: true\n            };\n            remote.postMessage(errorReplyMessage, originForSending);\n          }\n\n          throw err;\n        }\n      };\n    };\n\n    new Promise(function (resolve) {\n      return resolve(methods[methodName].apply(methods, args));\n    }).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n  };\n\n  local.addEventListener(NativeEventType.Message, handleMessageEvent);\n  return function () {\n    destroyed = true;\n    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n  };\n});","import { ErrorCode, MessageType, NativeEventType } from '../enums';\nimport createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport getOriginFromSrc from './getOriginFromSrc';\nimport handleAckMessageFactory from './handleAckMessageFactory';\nimport handleSynMessageFactory from './handleSynMessageFactory';\nimport monitorIframeRemoval from './monitorIframeRemoval';\nimport startConnectionTimeout from '../startConnectionTimeout';\nimport validateIframeHasSrcOrSrcDoc from './validateIframeHasSrcOrSrcDoc';\n/**\n * Attempts to establish communication with an iframe.\n */\n\nexport default (function (options) {\n  var iframe = options.iframe,\n      _options$methods = options.methods,\n      methods = _options$methods === void 0 ? {} : _options$methods,\n      childOrigin = options.childOrigin,\n      timeout = options.timeout,\n      _options$debug = options.debug,\n      debug = _options$debug === void 0 ? false : _options$debug;\n  var log = createLogger(debug);\n  var destructor = createDestructor();\n  var onDestroy = destructor.onDestroy,\n      _destroy = destructor.destroy;\n\n  if (!childOrigin) {\n    validateIframeHasSrcOrSrcDoc(iframe);\n    childOrigin = getOriginFromSrc(iframe.src);\n  } // If event.origin is \"null\", the remote protocol is file: or data: and we\n  // must post messages with \"*\" as targetOrigin when sending messages.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n\n\n  var originForSending = childOrigin === 'null' ? '*' : childOrigin;\n  var handleSynMessage = handleSynMessageFactory(log, methods, childOrigin, originForSending);\n  var handleAckMessage = handleAckMessageFactory(methods, childOrigin, originForSending, destructor, log);\n  var promise = new Promise(function (resolve, reject) {\n    var stopConnectionTimeout = startConnectionTimeout(timeout, _destroy);\n\n    var handleMessage = function handleMessage(event) {\n      if (event.source !== iframe.contentWindow || !event.data) {\n        return;\n      }\n\n      if (event.data.penpal === MessageType.Syn) {\n        handleSynMessage(event);\n        return;\n      }\n\n      if (event.data.penpal === MessageType.Ack) {\n        var callSender = handleAckMessage(event);\n\n        if (callSender) {\n          stopConnectionTimeout();\n          resolve(callSender);\n        }\n\n        return;\n      }\n    };\n\n    window.addEventListener(NativeEventType.Message, handleMessage);\n    log('Parent: Awaiting handshake');\n    monitorIframeRemoval(iframe, destructor);\n    onDestroy(function (error) {\n      window.removeEventListener(NativeEventType.Message, handleMessage);\n\n      if (!error) {\n        error = new Error('Connection destroyed');\n        error.code = ErrorCode.ConnectionDestroyed;\n      }\n\n      reject(error);\n    });\n  });\n  return {\n    promise: promise,\n    destroy: function destroy() {\n      // Don't allow consumer to pass an error into destroy.\n      _destroy();\n    }\n  };\n});","export default (function (debug) {\n  /**\n   * Logs a message if debug is enabled.\n   */\n  return function () {\n    if (debug) {\n      var _console;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      (_console = console).log.apply(_console, ['[Penpal]'].concat(args)); // eslint-disable-line no-console\n\n    }\n  };\n});","import { ErrorCode } from '../enums';\nexport default (function (iframe) {\n  if (!iframe.src && !iframe.srcdoc) {\n    var error = new Error('Iframe must have src or srcdoc property defined.');\n    error.code = ErrorCode.NoIframeSrc;\n    throw error;\n  }\n});","import { MessageType } from '../enums';\n/**\n * Handles a SYN handshake message.\n */\n\nexport default (function (log, methods, childOrigin, originForSending) {\n  return function (event) {\n    if (event.origin !== childOrigin) {\n      log(\"Parent: Handshake - Received SYN message from origin \".concat(event.origin, \" which did not match expected origin \").concat(childOrigin));\n      return;\n    }\n\n    log('Parent: Handshake - Received SYN, responding with SYN-ACK');\n    var synAckMessage = {\n      penpal: MessageType.SynAck,\n      methodNames: Object.keys(methods)\n    };\n    event.source.postMessage(synAckMessage, originForSending);\n  };\n});","import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\n\nexport default (function (timeout, callback) {\n  var timeoutId;\n\n  if (timeout !== undefined) {\n    timeoutId = window.setTimeout(function () {\n      var error = new Error(\"Connection timed out after \".concat(timeout, \"ms\"));\n      error.code = ErrorCode.ConnectionTimeout;\n      callback(error);\n    }, timeout);\n  }\n\n  return function () {\n    clearTimeout(timeoutId);\n  };\n});","var CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\n/**\n * Monitors for iframe removal and destroys connection if iframe\n * is found to have been removed from DOM. This is to prevent memory\n * leaks when the iframe is removed from the document and the consumer\n * hasn't called destroy(). Without this, event listeners attached to\n * the window would stick around and since the event handlers have a\n * reference to the iframe in their closures, the iframe would stick\n * around too.\n */\n\nexport default (function (iframe, destructor) {\n  var destroy = destructor.destroy,\n      onDestroy = destructor.onDestroy;\n  var checkIframeInDocIntervalId = setInterval(function () {\n    if (!iframe.isConnected) {\n      clearInterval(checkIframeInDocIntervalId);\n      destroy();\n    }\n  }, CHECK_IFRAME_IN_DOC_INTERVAL);\n  onDestroy(function () {\n    clearInterval(checkIframeInDocIntervalId);\n  });\n});","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport { withPrefix } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { connectToChild } from 'penpal';\nimport { Footer } from '../Footer';\nimport PropTypes from 'prop-types';\nimport Context from '../Context';\nimport { isExternalLink } from '../../utils';\n\nconst Frame = ({ src, height = 'calc(100vh - var(--spectrum-global-dimension-size-800))', location }) => {\n  const iframe = useRef(null);\n  const { ims } = useContext(Context);\n  const [child, setChild] = useState(null);\n\n  useEffect(() => {\n    if (child) {\n      if (iframe.current.clientHeight === 0) {\n        child.onHide();\n      } else {\n        child.onShow();\n      }\n    }\n  }, [location.pathname]);\n\n  return (\n    <>\n      <iframe\n        title=\"Main content\"\n        ref={iframe}\n        src={isExternalLink(src) ? src : withPrefix(src)}\n        onLoad={() => {\n          const connection = connectToChild({\n            // The iframe to which a connection should be made\n            iframe: iframe.current,\n            // Methods the parent is exposing to the child\n            methods: {\n              scrollTop(position = 0) {\n                if (document?.scrollingElement) {\n                  document.scrollingElement.scrollTop = position;\n                }\n              },\n              getURL() {\n                return window?.location?.href;\n              },\n              setURL(url) {\n                if (window?.location) {\n                  window.location = url;\n                }\n              },\n              setHeight(height) {\n                iframe.current.style.height = height;\n              },\n              getIMSAccessToken() {\n                if (ims?.isSignedInUser()) {\n                  return ims.getAccessToken();\n                }\n\n                return null;\n              },\n              getIMSProfile() {\n                if (ims?.isSignedInUser()) {\n                  return ims.getProfile();\n                }\n\n                return null;\n              },\n              signIn() {\n                if (ims && !ims.isSignedInUser()) {\n                  ims.signIn();\n                }\n              },\n              signOut() {\n                if (ims && ims.isSignedInUser()) {\n                  ims.signOut();\n                }\n              }\n            }\n          });\n\n          connection.promise.then((child) => {\n            if (iframe.current.clientHeight === 0) {\n              child.onHide();\n            } else {\n              child.onShow();\n            }\n\n            setChild(child);\n          });\n        }}\n        css={css`\n          display: block;\n          height: ${height};\n          width: 100%;\n          border: none;\n        `}\n      />\n\n      <Footer />\n    </>\n  );\n};\n\nFrame.propTypes = {\n  src: PropTypes.string,\n  height: PropTypes.string,\n  location: PropTypes.object\n};\n\nexport default Frame;\n"],"sourceRoot":""}