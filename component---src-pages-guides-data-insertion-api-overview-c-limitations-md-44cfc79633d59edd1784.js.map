{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/data-insertion-api/overview/c_limitations.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,eADR,gBAGA,+IACA,oBACE,eAAIC,WAAW,MAAf,+EACA,eAAIA,WAAW,MAAf,8DACA,eAAIA,WAAW,MAAf,4PACA,eAAIA,WAAW,MAAf,0LACA,eAAIA,WAAW,MAAf,wQACA,eAAIA,WAAW,MAAf,oWACA,eAAIA,WAAW,MAAf,sHAA0I,uBAAYA,WAAW,MAAvB,eAA1I,2LAA6X,uBAAYA,WAAW,MAAvB,eAA7X,MACA,eAAIA,WAAW,MAAf,iVAMNJ,EAAWK,gBAAiB","file":"component---src-pages-guides-data-insertion-api-overview-c-limitations-md-44cfc79633d59edd1784.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"limitations\"\n    }}>{`Limitations`}</h1>\n    <p>{`There are some limitations to server-side data collection when compared to client-side data collection using JavaScript.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Server-side data collection cannot collect Web browser configuration data.`}</li>\n      <li parentName=\"ul\">{`Server-side data collection cannot collect ClickMap data.`}</li>\n      <li parentName=\"ul\">{`Server-side data collection loses cached page navigation data because using a Web browser's back button or reloading a cached page does not generate additional server requests or responses. This limits pathing data available for Analytics reports.`}</li>\n      <li parentName=\"ul\">{`Some bots do not run JavaScript when requesting a page, and do not request the page's image tags. However, server-side data collection includes requests from those bots and spiders.`}</li>\n      <li parentName=\"ul\">{`You must have control over the servers from which you want to collect data. If you use a Content Delivery Network `}{`(`}{`CDN`}{`)`}{` such as Akamai`}{`*`}{` to deliver web pages, the server-side data collection described here cannot collect data for those pages.`}</li>\n      <li parentName=\"ul\">{`If you control most of your Web site pages, but use some third-party services `}{`(`}{`for example, surveys or shopping cart systems`}{`)`}{`, server-side data collection cannot collect data from the third-party pages. You should use JavaScript tagging on third-party pages that request content from your Web servers to gain visibility into those systems.`}</li>\n      <li parentName=\"ul\">{`Server-side data collection alone cannot provide cross-domain tracking of site visitors. However, you can use the `}<inlineCode parentName=\"li\">{`<visitorID>`}</inlineCode>{` tag in conjunction with client-side JavaScript data collection to pass additional information to the server. This is the only way that cross-domain tracking is possible when using a `}<inlineCode parentName=\"li\">{`<visitorID>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Server-side data collection can co-exist with a client-side `}{`(`}{`JavaScript`}{`)`}{` implementation only if clients submit server-side data in near real-time. If clients have a JavaScript beacon implementation, and want to collect server-side data and submit it in batches, they should use Data Sources, not the Data Insertion API.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}