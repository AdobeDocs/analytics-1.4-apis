{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_Clean_up_XML_for_integration_specific_elements.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,yDADR,2DAGA,qMAAsL,mBAAQC,WAAW,KAAnB,QAAtL,MAAoO,mBAAQA,WAAW,KAAnB,QAApO,MAAkR,mBAAQA,WAAW,KAAnB,gBAAlR,MAAwU,mBAAQA,WAAW,KAAnB,QAAxU,UAA0X,mBAAQA,WAAW,KAAnB,gBAA1X,uEACA,mBAAG,mBAAQA,WAAW,KAAnB,SAAH,4HACA,4EAA6D,mBAAQA,WAAW,KAAnB,eAA7D,+BAA2I,mBAAQA,WAAW,KAAnB,SAA3I,QAA4L,mBAAQA,WAAW,KAAnB,WAA5L,wGACA,oBACE,eAAIA,WAAW,MAAf,YAAgC,mBAAQA,WAAW,MAAnB,YAAhC,SAAsF,mBAAQA,WAAW,MAAnB,UAAtF,mCAAoK,mBAAQA,WAAW,MAAnB,cAApK,SAA4N,mBAAQA,WAAW,MAAnB,YAA5N,4BAAqS,mBAAQA,WAAW,MAAnB,eAArS,+BAAoX,mBAAQA,WAAW,MAAnB,SAApX,MACA,eAAIA,WAAW,MAAf,YAAgC,mBAAQA,WAAW,MAAnB,UAAhC,2BAAsG,mBAAQA,WAAW,MAAnB,wBAAtG,iBAAkL,mBAAQA,WAAW,MAAnB,eAAlL,+BAAiQ,mBAAQA,WAAW,MAAnB,WAAjQ,MACA,eAAIA,WAAW,MAAf,gBAAoC,mBAAQA,WAAW,MAAnB,UAApC,2BAA0G,mBAAQA,WAAW,MAAnB,2BAA1G,iBAAyL,mBAAQA,WAAW,MAAnB,eAAzL,+BAAwQ,mBAAQA,WAAW,MAAnB,WAAxQ,OAEF,qBAAK,iBAAMA,WAAW,OAAjB,sxBA0BL,2BAAY,mBAAQA,WAAW,KAAnB,4BAAZ,sEAA8I,mBAAQA,WAAW,MAAI,cAAGA,WAAW,SAC7K,KAAQ,wEADuJ,kDAArK,8CAGA,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,+BAD6C,yCAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-clean-up-xml-for-integration-specific-elements-md-a83bae9cbb495c7c2acc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-6-clean-up-xml-for-integration-specific-elements\"\n    }}>{`Step 6: Clean up XML for Integration Specific Elements`}</h1>\n    <p>{`Since Partners have to use this code for multiple different Customers, report suites, and variable mappings, several of these variables cannot be hard coded. You must replace `}<strong parentName=\"p\">{`eVar`}</strong>{`, `}<strong parentName=\"p\">{`prop`}</strong>{`, `}<strong parentName=\"p\">{`custom event`}</strong>{`, `}<strong parentName=\"p\">{`date`}</strong>{`, and `}<strong parentName=\"p\">{`report suite`}</strong>{` values with references to variables from the Partner integration.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` The variable names that you use in this XML code must match the variable names that you use in the Integration Wizard.`}</p>\n    <p>{`In each of the variable definitions, you will use the `}<strong parentName=\"p\">{`replaceWith`}</strong>{` attribute with a value of `}<strong parentName=\"p\">{`param`}</strong>{` or `}<strong parentName=\"p\">{`mapping`}</strong>{` to define a Partner.Runscript call at runtime or a variable mapping within the Integration wizard.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Set the `}<strong parentName=\"li\">{`dateFrom`}</strong>{` and `}<strong parentName=\"li\">{`dateTo`}</strong>{` XML elements to the variables `}<strong parentName=\"li\">{`myDateFrom`}</strong>{` and `}<strong parentName=\"li\">{`myDateTo`}</strong>{`, respectively. Use the `}<strong parentName=\"li\">{`replaceWith`}</strong>{` attribute with a value of `}<strong parentName=\"li\">{`param`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Replace `}<strong parentName=\"li\">{`eVar44`}</strong>{` with the reference to `}<strong parentName=\"li\">{`twitter`}{`_`}{`handle`}</strong>{` and use the `}<strong parentName=\"li\">{`replaceWith`}</strong>{` attribute with a value of `}<strong parentName=\"li\">{`mapping`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Replace the `}<strong parentName=\"li\">{`event3`}</strong>{` with the reference to `}<strong parentName=\"li\">{`twitter`}{`_`}{`followers`}</strong>{` and use the `}<strong parentName=\"li\">{`replaceWith`}</strong>{` attribute with a value of `}<strong parentName=\"li\">{`mapping`}</strong>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`Wizard script name: followers_per_twitter_handle\n \n<genesis>\n  <Report.QueueRanked>\n      <reportDescription>\n      <reportSuiteID replaceWith=\"client\">RSID</reportSuiteID>\n      <dateFrom replaceWith=\"param\">myDateFrom</dateFrom>\n      <dateTo replaceWith=\"param\">myDateTo</dateTo>\n      <Type>ranked</Type>\n      <sortBy replaceWith=\"mapping\">twitter_followers </sortBy>\n      <metrics>\n        <item>\n                 <id replaceWith=\"mapping\">twitter_followers </id>\n        </item>\n      </metrics>\n            <elements>\n      <Item>\n            <id replaceWith=\"mapping\">twitter_handle</id>\n            <top>10</top>\n            <startingWith>1</startingWith>\n      </Item>\n      </elements>\n    </reportDescription>\n  </Report.QueueRanked>\n</genesis>\n`}</code></pre>\n    <p>{`This `}<strong parentName=\"p\">{`Create Request On Demand`}</strong>{` script is now complete and you will use it in the next tutorial, `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"c_Partner_Application_Configuration_for_Data_Connectors_Tutorial.md#\"\n        }}>{`2. Partner Application Configuration Tutorial`}</a></strong>{`, when you create the Integration Wizard.`}</p>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_define_report_requests.md\"\n      }}>{`Script for Defining Report Requests`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}