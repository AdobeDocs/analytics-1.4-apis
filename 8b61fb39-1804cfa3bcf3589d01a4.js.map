{"version":3,"file":"8b61fb39-1804cfa3bcf3589d01a4.js","mappings":"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","sources":["webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/TextBlock/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, useEffect, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { HeroButtons } from \"../Hero\";\nimport { Media } from \"../Media\";\nimport PropTypes from \"prop-types\";\nimport {\n  layoutColumns,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH\n} from \"../../utils\";\nimport classNames from \"classnames\";\nimport \"@spectrum-css/typography\";\n\nconst counter = {\n  2: 0,\n  3: 0,\n  4: 0,\n};\n\nconst MIN_TABLET_SCREEN_WIDTH = '1023px'\nconst alignMapping = [\"margin-left: 0;\", \"margin-right: 0;\"];\n\nconst mediaCSS = css`\n  & {\n    display: inline;\n    width: ${layoutColumns(6)};\n    box-sizing: border-box;\n    padding: var(--spectrum-global-dimension-size-200);\n\n    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n      display: block;\n      width: 100%;\n    }\n  }\n`;\n\nconst Icons = ({ icons, isCentered }) =>\n  icons\n    ? cloneElement(icons, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-400) !important;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n\n          & li {\n            display: flex;\n            border-right: 1px solid var(--spectrum-global-color-gray-300);\n            height: var(--spectrum-global-dimension-size-600);\n            margin-right: var(--spectrum-global-dimension-size-150);\n          }\n\n          & li:last-of-type {\n            padding-right: 0;\n            border-right: none;\n          }\n\n          .gatsby-resp-image-wrapper {\n            position: relative;\n            width: var(--spectrum-global-dimension-size-800) !important;\n          }\n\n          .gatsby-resp-image-image {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            object-fit: contain;\n          }\n        `,\n      })\n    : null;\n\nconst Texts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith(\"text\"));\n  return textKeys.map((textKey) => texts[textKey]);\n};\n\nconst Links = ({ links, isCentered, isLinksGroups=false }) =>\n  links\n    ? cloneElement(links, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n          ${!isLinksGroups? \"\" : \"flex-wrap: wrap;\"}\n          margin-top: ${isCentered || isLinksGroups\n            ? \"var(--spectrum-global-dimension-size-200) !important;\"\n            : \"var(--spectrum-global-dimension-size-600) !important;\"};\n          & li {\n            display: flex;\n            align-items: center;\n            ${isLinksGroups \n              ? `border-radius: 10px; \n                border:solid 1.8px;\n                margin-right: var(--spectrum-global-dimension-size-200);\n                height: var(--spectrum-global-dimension-size-300);\n                margin-top: var(--spectrum-global-dimension-size-100);\n                background-color: #F7F7F7;\n                `\n              : \"height: var(--spectrum-global-dimension-size-400)\"};\n          }\n\n          & li a {\n            white-space: nowrap;           \n            ${isLinksGroups \n              ? `margin: var(--spectrum-global-dimension-size-100); \n              color: currentColor;\n              text-decoration: none;\n              font-size: var(--spectrum-global-dimension-size-175);` \n              : \"margin-right: var(--spectrum-global-dimension-size-600);\"};\n          }\n\n          & li:last-of-type a {\n            margin-right: ${isLinksGroups ? \"var(--spectrum-global-dimension-size-100)\": \"0\"}\n          }\n\n          & li:hover{\n            ${isLinksGroups  ?\n            `background-color: var(--spectrum-button-primary-m-background-color-hover, var(--spectrum-global-color-gray-800));\n            border-color: var(--spectrum-button-primary-m-border-color-hover, var(--spectrum-global-color-gray-800));            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));`\n            : \"\"}\n          }        \n          & li:hover a{\n            ${isLinksGroups  ? `\n            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));\n            text-decoration: none;`\n            : \"\"}\n          }\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-wrapper {\n            width: var(--spectrum-global-dimension-size-400) !important;\n            margin-left: 0 !important;\n            margin-right: var(--spectrum-global-dimension-size-150) !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: contain;\n          }\n          \n          @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n            flex-direction: ${isLinksGroups ? \"initial\" : \"column\"};\n            align-items: ${isCentered ? \"center\" : \"left\"};          \n\n            li {\n              margin-top: var(--spectrum-global-dimension-size-100);              \n            }\n\n            li a {\n              ${isLinksGroups  \n                ? \"font-size: var(--spectrum-global-dimension-size-130);` \" \n                : `margin-right: 0;`\n              }\n            }\n          }\n\n          @media screen and (max-width: 767px) {\n            ${isLinksGroups  ? `width: min-content` : \"\" }\n          }\n        `,\n      })\n    : null;\n\nconst TextBlock = ({\n  className,\n  heading,\n  subHeading,\n  links,\n  buttons,\n  linksGroups,\n  icons,\n  image,\n  assetImg,\n  video,\n  theme = \"lightest\",\n  width = \"100%\",\n  isCentered = false,\n  primaryOutline = false,\n  headerElementType = \"h3\",\n  imageOnly = false,\n  imgWidth = \"50%\",\n  isPrimaryBtn=false,\n  variantsTypePrimary='accent',\n  variantsTypeSecondary='secondary',\n  variantStyleFill = \"fill\",\n  variantStyleOutline = \"outline\",\n  hasCodeBlock = false,\n  homeZigZag = false,\n  isbuttonGroups = false,\n  ...props\n}) => {\n  const Element = headerElementType;\n\n  let initColumns = 100 / parseFloat(width);\n\n  if (width === \"33%\") {\n    width = `${(100 / 3).toFixed(2)}%`;\n    initColumns = 3;\n  }\n\n  const [columns] = useState(initColumns);\n\n  useEffect(() => {\n    return () => {\n      if (typeof counter[columns] !== \"undefined\") {\n        counter[columns]--;\n      }\n    };\n  }, [columns]);\n\n  if (width !== \"100%\") {\n    isCentered = true;\n  }\n\n  if (isCentered) {\n    let blockWidth = \"\";\n    let extraMargin = \"\";\n\n    if (typeof counter[columns] !== \"undefined\") {\n      counter[columns]++;\n    }\n\n    if (columns === 1) {\n      blockWidth = `max-width: ${layoutColumns(6)};`;\n    } else if (columns > 3) {\n      blockWidth = \"max-width: var(--spectrum-global-dimension-size-3600);\";\n    } else {\n      blockWidth = \"max-width: var(--spectrum-global-dimension-size-4600);\";\n      extraMargin = alignMapping[counter[columns] % columns];\n    }\n    return (\n      <>\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            display: table-cell;\n            width: ${width.replace(\"%\", \"vw\")};\n            background: var(--spectrum-global-color-gray-100);\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              display: block;\n              width: 100%;\n            }\n          `}\n        >\n          <div\n            css={css`\n              ${blockWidth}\n              padding: 0 var(--spectrum-global-dimension-size-400);\n              margin: auto;\n              ${extraMargin}\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                max-width: none;\n                margin: auto;\n              }\n            `}\n          >\n            <Icons icons={icons} isCentered={isCentered} />\n\n            {image &&\n              cloneElement(image, {\n                css: css`\n                  height: var(--spectrum-global-dimension-size-1000);\n                  margin-top: 0;\n                  margin-bottom: var(--spectrum-global-dimension-size-300);\n\n                  .gatsby-resp-image-wrapper {\n                    position: relative;\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `,\n              })}\n            {assetImg &&\n                <div className={assetImg?.props?.children}/>}\n\n            {heading && (\n              <Element\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {heading.props.children}\n              </Element>\n            )}\n            {subHeading && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n            <Texts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              styles={[variantStyleFill, variantStyleOutline]}\n              variants={[variantsTypePrimary,variantsTypeSecondary]}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-150);\n                margin-bottom: var(--spectrum-global-dimension-size-150);\n                justify-content: center;\n              `}\n            />\n\n            <Links links={links} isCentered={isCentered} />\n\n            <Media css={mediaCSS} video={video} />\n          </div>\n        </section>\n        {width === \"100%\" ||\n        (typeof counter[columns] !== \"undefined\" &&\n          counter[columns] % columns === 0) ? (\n          <div aria-hidden=\"true\" />\n        ) : null}\n      </>\n    );\n  } else {\n    const isReversed =\n      props.slots.endsWith(\"image\") || props.slots.endsWith(\"video\");\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          width: 100%;\n          background: var(--spectrum-global-color-gray-100);\n        `}\n      >\n        <div\n          css={css`\n            width: ${DESKTOP_SCREEN_WIDTH};\n            box-sizing: border-box;\n            margin: auto;\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              width: 100%;\n\n              // & > div {\n              //   flex-direction: column !important;\n              // }\n            }\n          `}\n        >\n          <div\n            css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: ${imageOnly\n                ? \"column\"\n                : isReversed\n                ? \"row-reverse\"\n                : \"row\"};\n\n              @media screen and (max-width: ${MIN_TABLET_SCREEN_WIDTH}) {\n                flex-direction: column;\n              }\n            `}\n          >\n            {image &&\n              cloneElement(image, {\n                css: css`\n                  display: flex;\n                  align-items: center;\n                  justify-content: center;\n                  width: ${imgWidth};\n                  // we need to modify the height\n                  // height: calc(\n                  //   var(--spectrum-global-dimension-size-4600) -\n                  //     var(--spectrum-global-dimension-size-225)\n                  // );\n                  box-sizing: border-box;\n                  padding: var(--spectrum-global-dimension-size-200);\n                  margin-top: 0;\n\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    object-fit: contain;\n                  }\n\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    height: auto;\n                    width: 100%;\n                  }\n                `,\n              })}\n             {assetImg &&\n                <div className={assetImg?.props?.children}/>}\n\n            <Media css={mediaCSS} video={video} />\n            {!imageOnly && <div\n              css={css`\n                ${hasCodeBlock ?`width: 70%;` : `width: 50%;`}\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                text-align: left;\n                box-sizing: border-box;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: var(--spectrum-global-dimension-size-400) 0;\n                }\n              `}\n            >\n              <Icons icons={icons} isCentered={isCentered} />\n\n              {heading && (\n                <Element\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                    margin-top: 0 !important;\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n\n                    & + p {\n                      margin-top: 0 !important;\n                    }\n                  `}\n                >\n                  {heading.props.children}\n                </Element>\n              )}\n              {subHeading && !linksGroups && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                font-size: var(\n                  --spectrum-global-dimension-size-225\n                ) !important;\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n              <Texts texts={props} />\n\n              {subHeading && linksGroups && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;                  \n                  margin-top: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n              {linksGroups && (\n                <Links links={linksGroups} isCentered={isCentered} isLinksGroups />\n              )}\n\n              <HeroButtons\n                buttons={buttons}\n                styles={[variantStyleFill, variantStyleOutline]}\n                variants={[variantsTypePrimary,variantsTypeSecondary]}\n                heading={homeZigZag ? heading?.props?.children : ''}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n\n              <Links links={links} isCentered={isCentered} />\n            </div> }\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n\nTextBlock.propTypes = {\n  heading: PropTypes.element,\n  links: PropTypes.element,\n  icons: PropTypes.element,\n  buttons: PropTypes.element,\n  linksGroups: PropTypes.element,\n  image: PropTypes.element,\n  video: PropTypes.element,\n  theme: PropTypes.string,\n  width: PropTypes.oneOf([\"100%\", \"50%\", \"33%\", \"25%\"]),\n  isCentered: PropTypes.bool,\n  headerElementType: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n  imageOnly: PropTypes.bool,\n  primaryOutline: PropTypes.bool,\n  hasCodeBlock: PropTypes.bool,\n  imgWidth: PropTypes.string,\n  homeZigZag: PropTypes.bool,\n  isbuttonGroups: PropTypes.bool,\n};\n\nexport { TextBlock };\n"],"names":["counter","alignMapping","mediaCSS","css","layoutColumns","TABLET_SCREEN_WIDTH","Icons","_ref10","icons","isCentered","cloneElement","Texts","_ref11","texts","Object","keys","filter","key","startsWith","map","textKey","Links","_ref12","links","_ref12$isLinksGroups","isLinksGroups","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","TextBlock","_ref13","className","heading","subHeading","buttons","linksGroups","image","assetImg","video","_ref13$theme","theme","_ref13$width","width","_ref13$isCentered","_ref13$headerElementT","primaryOutline","headerElementType","_ref13$imageOnly","imageOnly","_ref13$imgWidth","imgWidth","_ref13$variantsTypePr","isPrimaryBtn","variantsTypePrimary","_ref13$variantsTypeSe","variantsTypeSecondary","_ref13$variantStyleFi","variantStyleFill","_ref13$variantStyleOu","variantStyleOutline","_ref13$hasCodeBlock","hasCodeBlock","_ref13$homeZigZag","homeZigZag","props","isbuttonGroups","_objectWithoutPropertiesLoose","_excluded","Element","initColumns","parseFloat","toFixed","columns","useState","useEffect","_assetImg$props","blockWidth","extraMargin","___EmotionJSX","React","classNames","replace","children","HeroButtons","variants","Media","_assetImg$props2","_heading$props","isReversed","slots","endsWith","DESKTOP_SCREEN_WIDTH"],"sourceRoot":""}