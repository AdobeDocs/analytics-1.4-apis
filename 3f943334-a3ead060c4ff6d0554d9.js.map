{"version":3,"sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/Tabs/index.js"],"names":["positionIndicator","indicator","selectedTab","current","style","transform","offsetLeft","width","offsetWidth","animateIndicator","animate","transition","mobileMinWidth","setImageLoading","child","props","mdxType","cloneElement","loading","IconImage","image","styles","children","cloneChildren","css","Icons","icon","alt","Tabs","forwardRef","ref","orientation","isQuiet","className","onFontsReady","useEffect","document","fonts","ready","then","role","classNames","Item","elementType","isSelected","label","Element","id","nextId","TabItemIcon","Label","iconSize","setTabItemIcon","TabsIndicator","TabView","isHidden","hidden","TabsBlock","theme","tabs","useState","selectedTabIndicator","useRef","tab","selectedIndex","setSelectedIndex","menuItems","Object","keys","filter","key","startsWith","map","menu","_","index","heading","content","positionSelectedTabIndicator","TABLET_SCREEN_WIDTH","layoutColumns","MOBILE_SCREEN_WIDTH","length","data","createRef","push","itemPopoverId","tabIndex","onClick"],"mappings":"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","file":"3f943334-a3ead060c4ff6d0554d9.js","sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useState, useRef, createRef, forwardRef, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\nimport '@spectrum-css/tabs';\nimport nextId from 'react-id-generator';\n\nimport {\n  cloneChildren,\n  MOBILE_SCREEN_WIDTH,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH,\n  layoutColumns\n} from '../../utils';\n\nconst positionIndicator = (indicator, selectedTab) => {\n  indicator.current.style.transform = `translate(${selectedTab.current.offsetLeft}px, 0px)`;\n  indicator.current.style.width = `${selectedTab.current.offsetWidth}px`;\n};\n\nconst animateIndicator = (indicator, animate) => {\n  indicator.current.style.transition = animate ? '' : 'none';\n};\n\nconst setTabItemIcon = (child, className, iconSize) => {\n  if (child?.props?.children?.props?.mdxType === 'img') {\n    return (\n      <IconImage image={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)} />\n    );\n  }\n  return <Icons icon={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)} />;\n};\n\nconst mobileMinWidth = '480px';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n  return child;\n};\n\nconst IconImage = ({ image = '', styles = '' }) => {\n  return image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `\n      })\n    : null;\n};\n\nconst Icons = ({ icon, styles }) => {\n  return icon\n    ? cloneElement(icon, {\n        alt: '',\n        css: css`\n          height: var(--spectrum-global-dimension-size-600);\n          width: var(--spectrum-global-dimension-size-600);\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `\n      })\n    : null;\n};\n\nconst Tabs = forwardRef(\n  ({ orientation = 'horizontal', isQuiet = true, children, className, onFontsReady, ...props }, ref) => {\n    useEffect(() => {\n      // Font affects positioning of the Tab indicator\n      document.fonts.ready.then(() => {\n        onFontsReady && onFontsReady();\n      });\n    }, [onFontsReady]);\n\n    return (\n      <div\n        ref={ref}\n        {...props}\n        role=\"tablist\"\n        aria-orientation={orientation}\n        className={classNames(className, 'spectrum-Tabs', `spectrum-Tabs--${orientation}`, {\n          'spectrum-Tabs--quiet': isQuiet\n        })}>\n        {children}\n      </div>\n    );\n  }\n);\n\nconst Item = forwardRef(\n  ({ elementType = 'div', isSelected = false, className, children, icon, label, ...props }, ref) => {\n    const Element = elementType;\n    const id = nextId();\n    return (\n      <Element\n        {...props}\n        ref={ref}\n        role=\"tab\"\n        aria-selected={isSelected}\n        aria-controls={id}\n        className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected })}>\n        {icon ? <TabItemIcon icon={icon} isSelected={isSelected}></TabItemIcon> : null}\n        {label ? <Label> {label} </Label> : null}\n        {children}\n      </Element>\n    );\n  }\n);\n\nconst TabItemIcon = forwardRef(\n  ({ elementType = 'div', icon, isSelected, className, children, iconSize = 'xl', ...props }, ref) => {\n    const Element = elementType;\n    return (\n      <Element\n        {...props}\n        ref={ref}\n        className={classNames(className, 'spectrum-Icon', { 'is-selected': isSelected })}\n        css={css`\n          height: var(--spectrum-global-dimension-size-600);\n          width: var(--spectrum-global-dimension-size-550);\n          z-index: 1;\n        `}>\n        {icon ? setTabItemIcon(icon, className, iconSize) : null}\n      </Element>\n    );\n  }\n);\n\nconst TabsIndicator = forwardRef(({ className, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator')}\n      css={css`\n        transition-property: transform, width;\n      `}></div>\n  );\n});\n\nconst Label = ({ children }) => <span className=\"spectrum-Tabs-itemLabel\">{children}</span>;\n\nconst TabView = forwardRef(({ elementType = 'div', isHidden, className, children, ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element {...props} ref={ref} hidden={isHidden} className={classNames(className)}>\n      {children}\n    </Element>\n  );\n});\n\nconst TabsBlock = ({ theme = 'light', orientation = 'horizontal', className, ...props }) => {\n  const [tabs] = useState([]);\n  const selectedTabIndicator = useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState({\n    tab: 0\n  });\n\n  const propKeys = Object.keys(props);\n  let filteredMenuProps = propKeys.filter((key) => key.startsWith('heading')).map((menu) => menu);\n\n  let menuItems = filteredMenuProps.map((_, index) => {\n    return {\n      heading: props?.[`heading${index}`]?.props?.children || props?.[`heading`],\n      content: props?.[`content${index}`] || props?.[`content`],\n      image: props?.[`image${index}`] || props?.[`image`]\n    };\n  });\n\n  const positionSelectedTabIndicator = (index = selectedIndex.tab) => {\n    const selectedTab = tabs.filter((tab) => tab?.current)[index];\n    positionIndicator(selectedTabIndicator, selectedTab);\n  };\n  return (\n    <section\n      className={classNames(className, `tabsBlock spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        width: 100%;\n        overflow: hidden !important;\n        margin: 0;\n        padding-bottom: calc(var(--spectrum-global-dimension-size-1250) + var(--spectrum-global-dimension-size-250));\n      `}>\n      <div\n        css={css`\n          display: ${orientation === 'vertical' ? 'inline-flex' : ''};\n          @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n            margin: 0 auto !important;\n          }\n          @media only screen and (max-width: ${mobileMinWidth}) {\n            flex-direction: column;\n          }\n        `}>\n        <div\n          css={css`\n            display: ${orientation === 'vertical' ? 'grid' : 'block'};\n            position: relative;\n            grid-template-columns: 300px calc(100% - 300px);\n            margin-top: ${orientation === 'vertical' ? 'var(--spectrum-global-dimension-size-300)' : ''};\n            width: inherit;\n            @media only screen and (max-width: ${mobileMinWidth}) {\n              display: block !important;\n              width: ${layoutColumns(2.5)} !important;\n            }\n            @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n              width: ${layoutColumns(6.4)} !important;\n            }\n            @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n              width: ${layoutColumns(8)} !important;\n            }\n          `}>\n          {menuItems?.length > 0 ? (\n            <Tabs orientation={orientation} isQuiet={true} onFontsReady={positionSelectedTabIndicator}>\n              {menuItems.map((data, index) => {\n                const ref = createRef();\n                tabs.push(ref);\n                const isSelected = selectedIndex.tab === index;\n                const itemPopoverId = nextId();\n                return (\n                  <Item\n                    className={'tabItem'}\n                    key={`tabItem_${index}`}\n                    tabIndex={0}\n                    ref={ref}\n                    isSelected={isSelected}\n                    aria-controls={itemPopoverId}\n                    label={<b>{data['heading']}</b>}\n                    icon={data['image']}\n                    onClick={() => {\n                      setSelectedIndex({\n                        tab: index\n                      });\n                      positionSelectedTabIndicator(index);\n                    }}\n                    css={css`\n                      text-align: left;\n                      white-space: normal;\n                      width: ${orientation === 'vertical'\n                        ? 'calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-600))'\n                        : 'calc(var(--spectrum-global-dimension-static-grid-fixed-max-width) / var(--spectrum-global-dimension-static-grid-columns))'} !important;\n                      font-size: var(--spectrum-global-dimension-size-200);\n                      margin-bottom: ${orientation === 'vertical' ? '2.4rem !important' : '0rem'};\n                      display: flex !important;\n                      padding: var(--spectrum-global-dimension-size-125) !important;\n                      height: auto !important;\n                      line-height: initial;\n\n                      .spectrum-Tabs-itemLabel {\n                        margin-top: 5px;\n                        margin-bottom: 5px;\n                      }\n                      .spectrum-Icon {\n                        background-size: var(--spectrum-global-dimension-size-225)\n                          var(--spectrum-global-dimension-size-275);\n                        width: var(--spectrum-global-dimension-size-500);\n                        height: var(--spectrum-global-dimension-size-400);\n                      }\n\n                      &.is-disabled {\n                        pointer-events: none;\n                      }\n                      &::before {\n                        left: var(--spectrum-global-dimension-size-0) !important;\n                        right: var(--spectrum-global-dimension-size-0) !important;\n                      }\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-top: var(--spectrum-global-dimension-size-25) !important;\n                        margin-bottom: var(--spectrum-global-dimension-size-25) !important;\n                      }\n                      @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                        left: var(--spectrum-global-dimension-size-250) !important;\n                      }\n                    `}\n                  />\n                );\n              })}\n              <TabsIndicator ref={selectedTabIndicator} />\n            </Tabs>\n          ) : null}\n          {menuItems?.length > 0\n            ? menuItems.map((data, index) => {\n                const isHidden = selectedIndex.tab === index;\n                return (\n                  <TabView\n                    key={`tabView_${index}`}\n                    className={'tabView'}\n                    isHidden={!isHidden}\n                    css={css`\n                      text-align: left;\n                      max-width: 100% !important;\n                      padding: ${orientation === 'vertical' ? \"\" : `${layoutColumns(0.125)} ${layoutColumns(0.25)}`};\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        padding-left: inherit !important;\n                        max-width: ${layoutColumns(3)} !important;\n                      }\n\n                      @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n                        max-width: ${layoutColumns(3.5)} !important;\n                      }\n                      @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n                        max-width: ${layoutColumns(6.5)} !important;\n                        padding-left: var(--spectrum-global-dimension-size-500);\n                      }\n                    `}>\n                    {data['content'] ? data['content'] : null}\n                  </TabView>\n                );\n              })\n            : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  isQuiet: PropTypes.boolean,\n  className: PropTypes.string\n};\n\nItem.propTypes = {\n  isSelected: PropTypes.boolean,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.object\n};\n\nTabItemIcon.propTypes = {\n  elementType: PropTypes.string,\n  icon: PropTypes.element,\n  isSelected: PropTypes.boolean,\n  iconSize: PropTypes.string,\n  className: PropTypes.string\n};\n\nTabView.propTypes = {\n  isHidden: PropTypes.boolean,\n  className: PropTypes.string\n};\n\nTabsBlock.propTypes = {\n  theme: PropTypes.oneOf(['light', 'dark', 'lightest']),\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  heading: PropTypes.string,\n  content: PropTypes.string,\n  image: PropTypes.string,\n  className: PropTypes.string\n};\n\nexport { Tabs, Item, TabView, TabItemIcon, Label, TabsIndicator, positionIndicator, animateIndicator, TabsBlock };\n"],"sourceRoot":""}