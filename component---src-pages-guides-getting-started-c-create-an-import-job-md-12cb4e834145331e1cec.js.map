{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_Create_an_Import_Job.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,+BADR,iCAGA,kLACA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,0BAGA,eAAIA,WAAW,KACb,MAAS,MADX,gHAEmH,uBAAYA,WAAW,MAAvB,KAFnH,8CAE+M,uBAAYA,WAAW,MAAvB,KAF/M,2DAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,gBAGA,eAAIA,WAAW,KACb,MAAS,MADX,sCAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,wBAGA,eAAIA,WAAW,KACb,MAAS,MADX,8CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,yBAGA,eAAIA,WAAW,KACb,MAAS,MADX,+IAEkJ,uBAAYA,WAAW,MAAvB,KAFlJ,0CAE8O,uBAAYA,WAAW,MAAvB,KAF9O,6CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,mDAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,8BAGA,eAAIA,WAAW,KACb,MAAS,MADX,2GAE8G,uBAAYA,WAAW,MAAvB,KAF9G,6DAE6N,uBAAYA,WAAW,MAAvB,KAF7N,mCAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,sBAGA,eAAIA,WAAW,KACb,MAAS,MADX,4DAE+D,cAAGA,WAAW,KACzE,KAAQ,qDADmD,yCAF/D,cAMF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,mCAGA,eAAIA,WAAW,KACb,MAAS,MADX,4DAMN,sFAAuE,uBAAYA,WAAW,KAAvB,OAAvE,sHAA4O,uBAAYA,WAAW,KAAvB,OAA5O,iGACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,2mBAuBL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,gkBAYL,0BAAW,uBAAYA,WAAW,KAAvB,2BAAX,8HACA,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,2BAD6C,wBAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-create-an-import-job-md-12cb4e834145331e1cec.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-4-create-an-import-job\"\n    }}>{`Step 4: Create an Import Job`}</h1>\n    <p>{`The code in this section shows you how to create the import job using the Saint.ImportCreateJob`}{`(`}{`)`}{` method with the parameters specified in Table 1.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`check`}{`_`}{`divisions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean value that specifies whether to check report suites for compatible divisions. Supported values are: `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{`: Do not check report suite compatibility `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`: Check report suite compatibility `}{`(`}{`default`}{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A description of the import job.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`email`}{`_`}{`address`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The email address to receive the report.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`export`}{`_`}{`results`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean value that specifies whether to automatically perform an export when the import job finishes processing. Supported values include: `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{`: Do not export `}{`(`}{`default`}{`)`}{` `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`: Export when the import job completes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`header`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of column values for classification.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`overwrite`}{`_`}{`conflicts`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean value that specifies whether to overwrite data when conflicts occur. Supported values include: `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{`: Do not rewrite data on conflicts `}{`(`}{`default`}{`)`}{` `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`: Overwrite data on conflicts`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`relation`}{`_`}{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The relation ID. You got this ID as a return value from `}<a parentName=\"td\" {...{\n              \"href\": \"../saint-api/methods/r_GetCompatibilityMetrics.md\"\n            }}>{`Saint.GetCompatibilityMetrics`}{`(`}{`)`}</a>{` method.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`report`}{`_`}{`suite`}{`_`}{`array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The list of report suites to receive the import job.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The first header column in the header parameter is always named `}<inlineCode parentName=\"p\">{`Key`}</inlineCode>{`, is mandatory, and must be unique across the entire system. For this articleâ€™s JJ. Esquire demo application, the `}<inlineCode parentName=\"p\">{`Key`}</inlineCode>{` value in each data record is the product SKU collected during Analytics JavaScript tagging.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* Saint.ImportCreateJob */ \n$relation_id = ''; \n$header = array( \n'Key', // This is mandatory \n'Category', \n'Brand' \n); \n$importParams = array( \n'check_divistions'=>0, \n'description'=>'Classifying data for JJEsquire', \n'email_address'=>$notification_email, \n'export_results'=>0, // export_results = 0, meaning do not export following the import\n'header'=>$header, \n'overwrite_conflicts'=>0, \n'relation_id'=>$relation_id, \n'report_suite_array'=>$report_suite_array \n); \n$response = sendRequest('Saint.ImportCreateJob', $importParams ); \n\nvar_dump($response); \n$job_id = (int) $response; \n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* Use Saint.ImportCreateJob to specify the parameters for the Import job and the header columns to be classified */ \nString emailAddress = \"\"; \nint relationId = \"\"; \nString[] header = new String[3]; \n/* Refer to the note of the Key column*/ \nheader[0] = \"Key\"; // This is mandatory \nheader[1] = \"Category\"; \nheader[2] = \"Brand\"; \n\nint importJobID = port.saintImportCreateJob(0, \"Classifying data for JJEsquire\", emailAddress, 0, header, 0, relationId, report_suite_array); \nSystem.out.println(\"Value of reportID from saintImportCreateJob is: \"+importJobID);\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Saint.ImportCreateJob()`}</inlineCode>{` method returns the ID of the newly created import job. You will use this ID to populate the import job in the next step.`}</p>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_SAINT_API_Overview.md\"\n      }}>{`SAINT API Tutorial`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}