{"version":3,"file":"f5cc1685-1e7e65679c889f1c6113.js","mappings":"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","sources":["webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/ProductCardGrid/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from '../AnchorButton';\nimport { Checkbox } from '../Checkbox';\nimport { Picker } from '../Picker';\nimport { Image } from \"../Image\";\nimport classNames from \"classnames\";\nimport { MOBILE_SCREEN_WIDTH,TABLET_SCREEN_WIDTH,layoutColumns} from '../../utils';\n\nimport {  DESKTOP_SCREEN_WIDTH } from \"../../utils\";\n\nimport PropTypes from \"prop-types\";\nimport \"@spectrum-css/typography\";\nimport \"@spectrum-css/card\";\nimport _orderBy from 'lodash/orderBy'\n\nconst filterByClouds = (\n  products,\n  cloudFilter,\n  additionalFilter,\n  setFilteredProducts\n) => {\n  const filteredProducts = products.filter(({ cloud })=>\n    cloudFilter.some((selectedCloud) => cloud === selectedCloud)\n  );\n  // const selectedFilter = additionalFilters.find(\n  //   ({ value }) => value === additionalFilter\n  // );\n\n const orderByProducts = _orderBy(filteredProducts, ['id'],['asc']);\n\n  setFilteredProducts(orderByProducts\n    // selectedFilter.filter(filteredProducts, selectedFilter.ids)\n  );\n};\n\nconst filterByName = (products) =>\n  products.sort(({ name: nameA }, { name: nameB }) =>\n    nameA.localeCompare(nameB)\n  );\n\nconst filterByLastUpdated = (products) =>\n  products.sort(\n    ({ lastUpdated: lastUpdatedA }, { lastUpdated: lastUpdatedB }) => {\n      if (new Date(lastUpdatedB) > new Date(lastUpdatedA)) {\n        return 1;\n      } else if (new Date(lastUpdatedB) < new Date(lastUpdatedA)) {\n        return -1;\n      }\n      return 0;\n    }\n  );\n\nconst filterById = (products, ids = []) => {\n  const filteredProducts = [];\n  ids.forEach((productId) => {\n    const product = products.find(({ id }) => id === productId);\n    if (product) {\n      filteredProducts.push(product);\n    }\n  });\n  return filteredProducts;\n};\n\nconst additionalFilters = [\n  {\n    title: \"Last updated\",\n    value: \"last_updated\",\n    filter: filterByLastUpdated,\n  },\n  {\n    title: \"Name\",\n    value: \"name\",\n    filter: filterByName,\n  },\n  {\n    title: \"Custom\",\n    value: \"id\",\n    filter: filterById,\n  },\n];\n\nconst ProductCardGrid = ({\n  clouds = [],\n  products = [],\n  interaction = false,\n  orderBy = \"last_updated\",\n  filterByCloud = [],\n  filterByIds = [],\n  buttonName = \"Learn more\",\n  showName = true,\n  showDescription = true,\n  showBorder = true,\n  imgHeight = \"1000\",\n  isCentered = false,\n  className,\n  containerWidth=DESKTOP_SCREEN_WIDTH,\n  theme=\"light\",\n  enablePicker=false\n}) => {\n  if (filterByIds.length) {\n    orderBy = \"id\";\n  }\n\n  const defaultFilter = additionalFilters.find(\n    ({ value }) => value === orderBy\n  );\n  defaultFilter.ids = filterByIds;\n\n  const [additionalFilter, setAdditionalFilter] = useState(defaultFilter.value);\n  const [filteredProducts, setFilteredProducts] = useState(\n    defaultFilter.filter(products, defaultFilter.ids)\n  );\n  const [cloudFilter, setCloudFilter] = useState(filterByCloud);\n\n  useEffect(() => {\n    filterByClouds(\n      products,\n      cloudFilter.length ? cloudFilter : clouds,\n      additionalFilter,\n      setFilteredProducts\n    );\n  }, [cloudFilter, additionalFilter, products, clouds]);\n\n  const height =\n    \"calc(var(--spectrum-global-dimension-size-5000) - var(--spectrum-global-dimension-size-600))\";\n  const width =\n    \"calc(var(--spectrum-global-dimension-size-3600) - var(--spectrum-global-dimension-size-900))\";\n\nconst updatePadding = !enablePicker ?  \"padding-top: var(--spectrum-global-dimension-size-1000)\":\"\";\n\n    return (\n    <section\n      className={classNames(className, `spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding-bottom: var(--spectrum-global-dimension-size-500);\n\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          width: ${layoutColumns(2)}  !important;\n          background: var(--spectrum-global-color-gray-100);\n          padding-bottom: 0;\n        }\n\n        @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) and (min-width: ${MOBILE_SCREEN_WIDTH}) {\n          width:100% !important;\n          background: var(--spectrum-global-color-gray-100);;\n          padding-bottom: 0;\n        }\n      `}\n    >\n      <div\n      css={css`\n      max-width: ${containerWidth};\n      margin: auto;\n\n       @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          width: ${layoutColumns(3)} !important;\n          background:var(--spectrum-global-color-gray-100);\n        }\n        ${updatePadding}\n      `}>\n      {interaction && enablePicker && (\n        <div\n          css={css`\n            display: flex;\n            align-items: center;\n            height: var(--spectrum-global-dimension-size-800);\n            justify-content: flex-end;\n            margin-right: var(--spectrum-global-dimension-size-400);\n          `}\n        >\n          <Picker\n            isQuiet\n            items={additionalFilters.slice(0, 2).map((filter) => {\n              return filter.value === orderBy\n                ? {\n                    selected: true,\n                    ...filter,\n                  }\n                : filter;\n            })}\n            aria-label=\"Filter by name or last updated product\"\n            onChange={(index) => {\n              setAdditionalFilter(additionalFilters[index].value);\n            }}\n          />\n        </div>\n      )}\n      <div\n        css={css`\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            align-items: flex-start;\n            flex-wrap: wrap;\n          }\n        `}\n      >\n        {interaction && (\n          <div\n            css={css`\n              display: flex;\n              align-items: flex-end;\n              width: var(--spectrum-global-dimension-size-3000);\n              flex-direction: column;\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n              `}\n            >\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}\n              >\n                Filter by\n              </h4>\n\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  display: flex;\n                  flex-direction: column;\n                `}\n              >\n                {clouds.map((cloud, i) => (\n                  <Checkbox\n                    key={i}\n                    value={cloud}\n                    onChange={(checked) => {\n                      if (checked) {\n                        setCloudFilter([...cloudFilter, cloud]);\n                      } else {\n                        setCloudFilter(\n                          cloudFilter.filter((filter) => filter !== cloud)\n                        );\n                      }\n                    }}\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}\n                  >\n                    {cloud}\n                  </Checkbox>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n        <div\n          css={css`\n            flex: 1;\n          `}\n        >\n          <div\n            css={css`\n              display: grid;\n              grid-template-columns: repeat(auto-fit, ${width});\n              grid-auto-rows: ${height};\n              justify-content: center;\n              gap: var(--spectrum-global-dimension-size-400);\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                margin-top: var(--spectrum-global-dimension-size-400);\n                display: flex;\n                flex-wrap: wrap;\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: hidden;\n                width: ${layoutColumns(3)};\n                background: var(--spectrum-global-color-gray-100);\n             }\n            `}\n          >\n            {filteredProducts.map((product) => (\n              <div\n                key={product.id}\n                className=\"spectrum-Card spectrum-Card--sizeM\"\n                css={css`\n                  width: ${width};\n                  height: ${height};\n                  border: ${showBorder\n                    ? \"none\"\n                    : \"var(--spectrum-global-color-gray-200)\"};\n                    background: var(--spectrum-global-color-gray-100);\n                  align-items: center;\n                  &:hover {\n                    border-color: var(--spectrum-global-color-gray-200);\n                  }\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    width: 0;\n                  }\n                  \n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    height:calc(var(--spectrum-global-dimension-size-5000) - var(--spectrum-global-dimension-size-1700));\n                  }\n                `}\n              >\n                <div\n                  className=\"spectrum-Card-body\"\n                  css={css`\n                    height: var(--spectrum-global-dimension-size-4000);\n                    overflow: auto;\n                    padding-top: 0;\n                    padding-bottom: 0;\n                    align-items: center;\n                    display: flex;\n                    flex-direction: column;\n\n                  `}\n                >\n                  {product.icon && (\n                    <div\n                      css={css`\n                        height: var(\n                          --spectrum-global-dimension-size-${imgHeight}\n                        );\n                        width: 140px;\n                        margin-bottom: var(\n                          --spectrum-global-dimension-size-200\n                        );\n                      `}\n                    >\n                      <Image\n                        src={product.icon}\n                        aria-hidden=\"true\"\n                        alt={\"\"}\n                        title={\"\"}\n                      />\n                    </div>\n                  )}\n                  {showName && (\n                    <div\n                      className=\"spectrum-Card-header spectrum-Heading spectrum-Heading--sizeXS\"\n                      css={css`\n                        height: var(--spectrum-global-dimension-size-600);\n                        justify-content: center;\n                        align-items: center;\n                        margin-top: 0 !important;\n                        margin-bottom: var(\n                          --spectrum-global-dimension-size-100\n                        ) !important;\n                      `}\n                    >\n                      <div\n                        className=\"spectrum-Card-title\"\n                        css={css`\n                          font-size: var(--spectrum-global-dimension-size-200);\n                          padding-right: 0;\n                        `}\n                      >\n                        <strong>{product.name}</strong>\n                      </div>\n                    </div>\n                  )}\n                  {showDescription && (\n                    <div\n                      className=\"spectrum-Card-content spectrum-Body spectrum-Body--sizeS\"\n                      css={css`\n                        height: auto;\n                        margin-bottom: 0 !important;\n                      `}\n                    >\n                      {product.description}\n                    </div>\n                  )}\n                </div>\n                <div\n                  className={showBorder ? \"spectrum-Card-footer\" : \"\"}\n                  css={css`\n                    display: flex;\n                    justify-content: ${isCentered ? \"center\" : \"flex-end\"};\n                    flex-wrap: wrap;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      justify-content: center;\n                    }\n\n                    padding-top: 0;\n                    padding-bottom: 0;\n                  `}\n                >\n                  {product.discover && (\n                    <div\n                      css={css`\n                        margin: var(--gap) 0 0 var(--gap);\n                      `}\n                    >\n                      <AnchorButton\n                        isQuiet\n                        href={product.discover}\n                        variant=\"primary\"\n                        css={css`\n                          border-color: #4b4b4b !important;\n                          border-width: 2px;\n                        `}\n                      >\n                        {buttonName}\n                      </AnchorButton>\n                    </div>\n                  )}\n\n                  {product.docs && (\n                    <div\n                      css={css`\n                        margin: var(--gap) 0 0 var(--gap);\n                      `}\n                    >\n                      <AnchorButton href={product.docs} variant=\"primary\">\n                        View docs\n                      </AnchorButton>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      </div>\n    </section>\n  );\n};\n\nProductCardGrid.propTypes = {\n  clouds: PropTypes.array,\n  products: PropTypes.array,\n  orderBy: PropTypes.string,\n  filterBy: PropTypes.array,\n  interaction: PropTypes.bool,\n  showName: PropTypes.bool,\n  showDescription: PropTypes.bool,\n  isCentered: PropTypes.bool,\n  showBorder: PropTypes.bool,\n  imgHeight: PropTypes.string,\n  enablePicker:PropTypes.bool,\n};\n\nexport { ProductCardGrid };"],"names":["additionalFilters","title","value","filter","products","sort","lastUpdatedA","lastUpdated","lastUpdatedB","Date","nameA","name","nameB","localeCompare","ids","filteredProducts","forEach","productId","product","find","id","push","ProductCardGrid","clouds","interaction","orderBy","filterByCloud","filterByIds","buttonName","showName","showDescription","showBorder","imgHeight","isCentered","className","containerWidth","DESKTOP_SCREEN_WIDTH","theme","enablePicker","length","defaultFilter","useState","additionalFilter","setAdditionalFilter","setFilteredProducts","cloudFilter","setCloudFilter","useEffect","cloud","some","selectedCloud","_orderBy","filterByClouds","height","width","updatePadding","classNames","css","MOBILE_SCREEN_WIDTH","layoutColumns","TABLET_SCREEN_WIDTH","isQuiet","items","slice","map","selected","onChange","index","i","key","checked","icon","src","alt","description","discover","A","href","variant","docs"],"sourceRoot":""}