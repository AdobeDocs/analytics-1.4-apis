"use strict";(self.webpackChunkanalytics_1_4_apis=self.webpackChunkanalytics_1_4_apis||[]).push([[4014],{49546:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return r},default:function(){return x}});var a=n(87462),s=n(63366),o=(n(15007),n(64983)),i=n(91515),d=["components"],r={},l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",t)}},p=l("InlineAlert"),m=l("CodeBlock"),c={_frontmatter:r},u=i.Z;function x(e){var t=e.components,n=(0,s.Z)(e,d);return(0,o.mdx)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"adobe-analytics-data-insertion-api"},"Adobe Analytics Data Insertion API"),(0,o.mdx)("p",null,"The Data Insertion API provides a mechanism for server-side data collection and submission to Adobe data collection servers. Instead of using AppMeasurement installed on each web page, server-side data collection collects data based solely on API requests and responses. While this implementation method cannot capture all data that is available via page-based beacons, it provides valuable insight into user activity without the overhead associated with attaching JavaScript to every page."),(0,o.mdx)(p,{variant:"note",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Data Insertion API and ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/analytics-apis/docs/2.0/guides/endpoints/bulk-data-insertion/"},"Bulk Data Insertion API")," are both methods to submit server-side collection data to Adobe Analytics. Data Insertion API calls are made one event at a time. Bulk Data Insertion API accepts CSV formatted files containing event data, one event per row. If you are working on a new implementation of server-side collection, Adobe recommends using the Bulk Data Insertion API."),(0,o.mdx)("p",null,"The Data Insertion API supports ",(0,o.mdx)("inlineCode",{parentName:"p"},"GET")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"POST")," API calls."),(0,o.mdx)("h2",{id:"http-post"},"HTTP POST"),(0,o.mdx)("p",null,"Sending ",(0,o.mdx)("inlineCode",{parentName:"p"},"POST")," API calls requires an XML body containing the desired variables. JSON body is not yet supported."),(0,o.mdx)(m,{slots:"heading, code",repeat:"2",languages:"CURL,XML",mdxType:"CodeBlock"}),(0,o.mdx)("h4",{id:"request"},"Request"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sh"},'curl -X POST "https://example.sc.omtrdc.net/b/ss//6" \\\n    -H "Accept: application/xml" \\\n    -H "Content-Type: application/xml" \\\n    -d "<?xml version=1.0 encoding=UTF-8?>\n        <request>\n            <pageURL>https://example.com</pageURL>\n            <pageName>Data Insertion API test (POST)</pageName>\n            <visitorID>1286556420966514130</visitorID>\n            <reportSuiteID>examplersid</reportSuiteID>\n        </request>"\n')),(0,o.mdx)("h4",{id:"response"},"Response"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<status>SUCCESS</status>\n')),(0,o.mdx)("h2",{id:"http-get"},"HTTP GET"),(0,o.mdx)("p",null,"Sending ",(0,o.mdx)("inlineCode",{parentName:"p"},"GET")," API calls requires the desired variables in the URL's query string. Sending data via ",(0,o.mdx)("inlineCode",{parentName:"p"},"GET")," reduces bandwidth, but does not provide a detailed response."),(0,o.mdx)(m,{slots:"heading, code",repeat:"2",languages:"CURL,HTTP",mdxType:"CodeBlock"}),(0,o.mdx)("h4",{id:"request-1"},"Request"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sh"},'curl -X GET "https://example.sc.omtrdc.net/b/ss/examplersid/0?g=https%3A%2F%2Fexample%2Ecom&pageName=Data%20Insertion%20API%20test%20%28GET%29&vid=1286556420966514130"\n')),(0,o.mdx)("h4",{id:"response-1"},"Response"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-text"},"200 OK\n")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-data-insertion-index-md-516456e84634bb76d820.js.map