{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/authentication/using_web_service_credentials.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iCADR,kCAGA,+FACA,eACE,GAAM,iCADR,kCAGA,mJACA,mBAAG,mBAAQC,WAAW,KAAnB,0BAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,myBA4BL,mBAAG,mBAAQA,WAAW,KAAnB,yBAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,wpCAmCL,mBAAG,mBAAQA,WAAW,KAAnB,0BAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,0nDAgDL,eACE,GAAM,2CADR,4CAGA,wFACA,qBAAK,iBAAMA,WAAW,OAAjB,qfAiBL,6IACA,4JACA,qBAAK,iBAAMA,WAAW,OAAjB,sIAKL,uEACA,qBAAK,iBAAMA,WAAW,OAAjB,4HAEL,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,0BAD6C,yBAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-authentication-using-web-service-credentials-md-b6d09674917c09a4dcc3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-web-service-credentials\"\n    }}>{`Using Web Service Credentials`}</h1>\n    <p>{`How to generate a valid WSSE header string and use it in an application.`}</p>\n    <h2 {...{\n      \"id\": \"generate-a-wsse-header-string\"\n    }}>{`Generate a WSSE Header String`}</h2>\n    <p>{`This section shows an example function that will generate a valid WSSE header string `}{`(`}{`for REST, SOAP, and JAVA`}{`)`}{`.`}</p>\n    <p><strong parentName=\"p\">{`REST Example Function:`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function generate_wsse_header($username, $secret)\n{\n  date_default_timezone_set('America/Denver');\n  $nonce = UUIDv4();\n  $created = gmdate('c');\n \n  $digest = base64_encode(sha1($nonce.$created.$secret,true));\n  $b64nonce = base64_encode($nonce);\n \n  return sprintf('X-WSSE: UsernameToken Username=\"%s\", PasswordDigest=\"%s\", Nonce=\"%s\", Created=\"%s\"',\n    $username,\n    $digest,\n    $b64nonce,\n    $created\n  );\n}\n \nfunction UUIDv4()\n{\n  return sprintf('%04x%04x-%04x-%03x4-%04x-%04x%04x%04x',\n           mt_rand(0, 65535), mt_rand(0, 65535),\n           mt_rand(0, 65535),\n           mt_rand(0, 4095),\n           bindec(substr_replace(sprintf('%016b', mt_rand(0, 65535)), '01', 6, 2)),\n           mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(0, 65535)\n  );\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`SOAP Example Function`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function generate_wsse_header_soap($username, $secret)\n{\n  $nonce = UUIDv4();\n  $created = gmdate('c');\n \n  $digest = base64_encode(sha1($nonce.$created.$secret,true));\n  $b64nonce = base64_encode($nonce);\n \n  return sprintf('\n      <wsse:Security wsse:mustUnderstand=\\\\\"1\\\\\" xmlns:wsse=\\\\\"http://www.omniture.com\\\\\">\n          <wsse:UsernameToken wsse:Id=\\\\\"User\\\\\">\n              <wsse:Username>%s</wsse:Username>\n              <wsse:Password Type=\\\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\\\\\">%s</wsse:Password>\n              <wsse:Nonce>%s</wsse:Nonce>\n              <wsse:Created>%s</wsse:Created>\n          </wsse:UsernameToken>\n       </wsse:Security>',\n    $username,\n    $digest,\n    $b64nonce,\n    $created\n  );\n}\n \nfunction UUIDv4()\n{\n  return sprintf('%04x%04x-%04x-%03x4-%04x-%04x%04x%04x',\n           mt_rand(0, 65535), mt_rand(0, 65535),\n           mt_rand(0, 65535),\n           mt_rand(0, 4095),\n           bindec(substr_replace(sprintf('%016b', mt_rand(0, 65535)), '01', 6, 2)),\n           mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(0, 65535)\n  );\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`JAVA Example Function:`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n  \nimport sun.misc.BASE64Encoder;\n  \npublic class GatewayUtils {\n  private static SecureRandom rand = new SecureRandom();\n   \n  private static byte[] toSHA1(byte[] data) throws NoSuchAlgorithmException {\n    MessageDigest md = null;\n    md = MessageDigest.getInstance(\"SHA-1\");\n    return md.digest(data);\n  }\n   \n  public static String generateWSSEHeader(String clientId, String clientSecret) throws IOException, NoSuchAlgorithmException {\n    BASE64Encoder b64 = new BASE64Encoder();\n    SimpleDateFormat dateFormatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss z\");\n    StringBuffer wsseHeader = new StringBuffer();\n    String created = dateFormatter.format(new Date());\n    ByteArrayOutputStream digest = new ByteArrayOutputStream(40);   \n    byte[] nonce = new byte[20];\n     \n    rand.nextBytes(nonce);\n     \n    digest.write(nonce);\n    digest.write(created.getBytes());\n    digest.write(clientSecret.getBytes());\n  \n    wsseHeader.append(\"UsernameToken Username=\\\\\"\");\n    wsseHeader.append(clientId);\n    wsseHeader.append(\"\\\\\", PasswordDigest=\\\\\"\");\n    wsseHeader.append(b64.encode(toSHA1(digest.toByteArray())));\n    wsseHeader.append(\"\\\\\", Nonce=\\\\\"\");\n    wsseHeader.append(b64.encode(nonce));\n    wsseHeader.append(\"\\\\\", Created=\\\\\"\");\n    wsseHeader.append(created);\n    wsseHeader.append(\"\\\\\"\");\n     \n    return wsseHeader.toString();\n  }\n  \n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"use-the-wsse-header-in-your-application\"\n    }}>{`Use the WSSE Header in your Application`}</h2>\n    <p>{`This section shows how to implement the header in an application.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ch = curl_init();\n \n// set url\ncurl_setopt($ch, CURLOPT_URL, \"https://api.omniture.com/admin/1.4/rest/?method=Company.GetReportSuites\");\n \n// return the transfer as a string\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n \n// set WSSE header\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array(generate_wsse_header('YOUR-USERNAME', 'YOUR-API-KEY')));\n \n// $output contains the output string\n$output = curl_exec($ch);\n \n// close curl resource to free up system resources\ncurl_close($ch);\n`}</code></pre>\n    <p>{`The variable $output will contain the json-encoded string of the response, granted the username and API key are valid.`}</p>\n    <p>{`This can also be used via cURL on the command line. Create an executable file called wsse.php which outputs a valid header like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#!/usr/local/bin/php\n<?php\ninclude_once ('wsse_functions.php');\necho generate_wsse_header('YOUR-USERNAME', 'YOUR-API-KEY');\n`}</code></pre>\n    <p>{`Then call this executable in your curl function:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ curl --get --header \"$(/path/to/wsse.php)\" https://api.omniture.com/admin/1.4/rest/?method=Company.GetReportSuites\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"wsse_authentication.md\"\n      }}>{`WSSE Authentication`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}