{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_Data_Sources_Methods.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,+BADR,gCAGA,gGACA,eACE,GAAM,uCADR,wCAGA,8BAAe,uBAAYC,WAAW,KAAvB,wBAAf,QAAuF,uBAAYA,WAAW,KAAvB,2BAAvF,qEACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,4XAmBL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,wdAQL,eACE,GAAM,mDADR,oDAGA,yGAA0F,uBAAYA,WAAW,KAAvB,uBAA1F,kNACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,2YAkBL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,0ZAOL,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,8BAD6C,+BAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-data-sources-methods-md-2fcb1458e93a6089d522.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"common-data-sources-methods\"\n    }}>{`Common Data Sources Methods`}</h1>\n    <p>{`In this section, you will learn of a few useful Data Sources API methods.`}</p>\n    <h2 {...{\n      \"id\": \"restart-and-deactivate-data-sources\"\n    }}>{`Restart and Deactivate Data Sources`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`DataSource.Restart()`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`DataSource.Deactivate()`}</inlineCode>{` methods to restart or deactivate the data source, respectively.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.Restart */ \n$params = array( \n'dataSourceID'=>$dsId, \n'reportSuiteID'=>$rsId \n); \n\n$status = sendRequest('DataSource.Restart', $params ); \nvar_dump($status); \n\n/* DataSource.Deactivate */ \n$params = array( \n'dataSourceID'=>$dsId, \n'reportSuiteID'=>$rsId \n); \n\n$status = sendRequest('DataSource.Deactivate', $params ); \nvar_dump($status); \n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* Restart a Data Source */ \nStatus responsedataSourceRestart = port.dataSourceRestart(dataSourceID, reportSuiteID); \nSystem.out.println(\"Status of responsedataSourceRestart is: \"+responsedataSourceRestart.getMessage()); \n\n/* Deactivate a Data Source */ \nStatus responsedataSourceDeactivate = port.dataSourceDeactivate(dataSourceID, reportSuiteID); \nSystem.out.println(\"Status of responsedataSourceDeactivate is: \"+responsedataSourceDeactivate.getMessage());\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"retrieve-the-data-source-ids-for-a-report-suite\"\n    }}>{`Retrieve the Data Source IDs for a Report Suite`}</h2>\n    <p>{`If you want to use an existing data source to upload batched data, you can use the `}<inlineCode parentName=\"p\">{`DataSource.GetIDs()`}</inlineCode>{` method to get the Data Source ID of the data sources associated with the specified report suite. The method returns an array of all the Data Source IDs for the specified report suite in the SOAP response.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`try { \n$rsId = ''; \n/* DataSource.GetIDs - gets a list of all DataSources that exist on the report suite */ \n$result = sendRequest('DataSource.GetIDs', array('reportSuiteID'=>$rsId) ); \n\nvar_dump($result); \nsleep(2); \n\nforeach($result as $ds){ \nif($ds['dataSourceName'] == $dsName) { \n$dsId = $ds['dataSourceId']; \n} \n} \n} catch(Exception $e) { \necho $e . \"\\\\n\"; \n} \n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.GetIDs - gets a list of all Data Sources that exist on the report suite */ \nString reportSuiteID = \"\"; \nSimpleDataSource[] responsedataSourceGetIDs = port.dataSourceGetIDs(reportSuiteID); \nfor (int i=0; i{ \nSystem.out.println(\"The data source id is: \"+responsedataSourceGetIDs[i].getDataSourceId()+\" and the data source name is: \"+responsedataSourceGetIDs[i].getDataSourceName()); \n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_Data_Sources_Overview.md\"\n      }}>{`Data Sources API Tutorial`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}