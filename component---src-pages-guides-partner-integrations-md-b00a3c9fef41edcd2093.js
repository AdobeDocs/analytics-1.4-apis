(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[53933],{77331:function(e,t,a){"use strict";a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return p}});var n=a(22122),i=a(19756),o=(a(15007),a(64983)),d=a(99536),r=["components"],l={},s={_frontmatter:l},m=d.Z;function p(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.mdx)(m,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"using-web-grant-oauth-with-the-14-api"},"Using Web Grant OAuth With the 1.4 API"),(0,o.mdx)("p",null,"Web grant is an OAuth flow that allows an application to integrate with Adobe Analytics and use a user's credentials to authenticate. This is very useful for 3rd parties building client applications, or for organizations interested in building something like an internal dashboard that reflects a user's permissions."),(0,o.mdx)("p",null,"These integrations are created within ",(0,o.mdx)("a",{parentName:"p",href:"console.adobe.io"},"console.adobe.io"),"."),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Log in to ",(0,o.mdx)("a",{parentName:"li",href:"console.adobe.io"},"console.adobe.io"),", select the relevant org from the dropdown menu at the top right, and click 'Create new project'"),(0,o.mdx)("li",{parentName:"ol"},"Click 'Add an API'"),(0,o.mdx)("li",{parentName:"ol"},"Choose 'Experience Cloud'"),(0,o.mdx)("li",{parentName:"ol"},"Choose 'Adobe Analytics' and click 'Next'"),(0,o.mdx)("li",{parentName:"ol"},"Choose 'OAuth' and click 'Next'"),(0,o.mdx)("li",{parentName:"ol"},"Choose 'Web' and provide a redirect URI and redirect URI pattern. In the pattern field, be sure to escape '.' characters with a backslash."),(0,o.mdx)("li",{parentName:"ol"},"Click 'Save configured API'")),(0,o.mdx)("p",null,"A ",(0,o.mdx)("inlineCode",{parentName:"p"},"client_id")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"client_secret")," will be generated that can be used to request and access token."),(0,o.mdx)("p",null,"To request an authorization code, build the following URL and present it to the user inside of a browser:"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"https://ims-na1.adobelogin.com/ims/authorize/v2?client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}&scope=openid,AdobeID,read_organizations,additional_info.projectedProductContext,additional_info.job_function&state={OPTIONAL_STATE_PARAMETER}")),(0,o.mdx)("p",null,"The user will login using their Adobe credentials and will have the opportunity to authorize the client. Once complete, the browser will be redirected to the provided ",(0,o.mdx)("inlineCode",{parentName:"p"},"{REDIRECT_URI}")," with a ",(0,o.mdx)("inlineCode",{parentName:"p"},"code")," GET string parameter. This ",(0,o.mdx)("inlineCode",{parentName:"p"},"code")," parameter will be used in the next request and is called an ",(0,o.mdx)("em",{parentName:"p"},"authorization code"),"."),(0,o.mdx)("p",null,"The ",(0,o.mdx)("em",{parentName:"p"},"authorization code")," can be exchanged for an access and refresh token by making a server-side request:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sh"},"curl -u '{CLIENT_ID}:{CLIENT_SECRET}' -X POST \\\n     https://ims-na1.adobelogin.com/ims/token/v3 \\\n     -H 'Content-Type: application/x-www-form-urlencoded' \\\n     -d 'code={AUTHORIZATION_CODE}&grant_type=authorization_code'\n")),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"CLIENT_ID")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"CLIENT_SECRET")," are the credentials provided in the adobe.io console for your application. The ",(0,o.mdx)("inlineCode",{parentName:"p"},"{AUTHORIZATION_CODE}")," parameter is the value of the ",(0,o.mdx)("inlineCode",{parentName:"p"},"code")," parameter in the previous response."),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"-u '{CLIENT_ID}:{CLIENT_SECRET}'")," parameter instructs curl to send an ",(0,o.mdx)("inlineCode",{parentName:"p"},"Authorization: Basic")," header. For example, if your ",(0,o.mdx)("inlineCode",{parentName:"p"},"client_id")," was ",(0,o.mdx)("inlineCode",{parentName:"p"},"test_client_id")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"client_secret")," was ",(0,o.mdx)("inlineCode",{parentName:"p"},"test_client_secret")," the authorization header would look like this:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"Authorization: Basic dGVzdF9jbGllbnRfaWQ6dGVzdF9jbGllbnRfc2VjcmV0\n")),(0,o.mdx)("p",null,"Where the value is ",(0,o.mdx)("inlineCode",{parentName:"p"},"test_client_id:test_client_secret")," after it has been base64 encoded."),(0,o.mdx)("p",null,"The response from this request will contain an access and refresh token that can be used to make requests against the 1.4 API."),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"Note: When making requests, an X-ADOBE-DMA-COMPANY header ",(0,o.mdx)("em",{parentName:"p"},"must be sent in")," to indicate login company that the API call is intended for. More information is available ",(0,o.mdx)("a",{parentName:"p",href:"authentication/auth_company.md"},"here"),". The ",(0,o.mdx)("inlineCode",{parentName:"p"},"discovery/me")," endpoint can be used to get a list of login companies associated with a user. More information is available ",(0,o.mdx)("a",{parentName:"p",href:"https://www.adobe.io/apis/experiencecloud/analytics/docs.html#!AdobeDocs/analytics-2.0-apis/master/discovery.md"},"here"),".")),(0,o.mdx)("p",null,"More information about Adobe OAuth is available ",(0,o.mdx)("a",{parentName:"p",href:"https://www.adobe.io/authentication/auth-methods.html#!AdobeDocs/adobeio-auth/master/OAuth/OAuth.md"},"here"),". More information about available Adobe scopes is available ",(0,o.mdx)("a",{parentName:"p",href:"https://www.adobe.io/authentication/auth-methods.html#!AdobeDocs/adobeio-auth/master/OAuth/Scopes.md"},"here"),"."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-partner-integrations-md-b00a3c9fef41edcd2093.js.map