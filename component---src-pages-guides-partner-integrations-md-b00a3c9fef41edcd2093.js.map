{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/partner_integrations.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,yCADR,2CAGA,mVACA,4DAA6C,cAAGC,WAAW,IACvD,KAAQ,oBADiC,oBAA7C,MAGA,oBACE,eAAIA,WAAW,MAAf,cAAkC,cAAGA,WAAW,KAC5C,KAAQ,oBADsB,oBAAlC,sGAGA,eAAIA,WAAW,MAAf,uBACA,eAAIA,WAAW,MAAf,8BACA,eAAIA,WAAW,MAAf,8CACA,eAAIA,WAAW,MAAf,oCACA,eAAIA,WAAW,MAAf,+IACA,eAAIA,WAAW,MAAf,iCAEF,wBAAS,uBAAYA,WAAW,KAAvB,aAAT,SAAuE,uBAAYA,WAAW,KAAvB,iBAAvE,qEACA,gIACA,mBAAG,uBAAYA,WAAW,KAAvB,qPACH,6LAA8K,uBAAYA,WAAW,KAAvB,kBAA9K,YAAoP,uBAAYA,WAAW,KAAvB,QAApP,gCAAoU,uBAAYA,WAAW,KAAvB,QAApU,iEAAqb,eAAIA,WAAW,KAAf,sBAArb,MACA,0BAAW,eAAIA,WAAW,KAAf,sBAAX,uFACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,8OAOL,mBAAG,uBAAYA,WAAW,KAAvB,aAAH,SAAiE,uBAAYA,WAAW,KAAvB,iBAAjE,oFAA8M,uBAAYA,WAAW,KAAvB,wBAA9M,mCAAiT,uBAAYA,WAAW,KAAvB,QAAjT,yCACA,0BAAW,uBAAYA,WAAW,KAAvB,oCAAX,yCAAgI,uBAAYA,WAAW,KAAvB,wBAAhI,kCAAkO,uBAAYA,WAAW,KAAvB,aAAlO,SAAgS,uBAAYA,WAAW,KAAvB,kBAAhS,SAAmW,uBAAYA,WAAW,KAAvB,iBAAnW,SAAqa,uBAAYA,WAAW,KAAvB,sBAAra,oDACA,qBAAK,iBAAMA,WAAW,OAAjB,yEAEL,yCAA0B,uBAAYA,WAAW,KAAvB,qCAA1B,uCACA,qJACA,4BACE,cAAGA,WAAW,cAAd,8DAAyF,eAAIA,WAAW,KAAf,mBAAzF,gGAAoO,cAAGA,WAAW,IAC9O,KAAQ,kCADwN,QAApO,UAE2B,uBAAYA,WAAW,KAAvB,gBAF3B,iHAEoM,cAAGA,WAAW,IAC9M,KAAQ,mHADwL,QAFpM,OAMF,sEAAuD,cAAGA,WAAW,IACjE,KAAQ,uGAD2C,QAAvD,iEAEkF,cAAGA,WAAW,IAC5F,KAAQ,wGADsE,QAFlF,MASJJ,EAAWK,gBAAiB","file":"component---src-pages-guides-partner-integrations-md-b00a3c9fef41edcd2093.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-web-grant-oauth-with-the-14-api\"\n    }}>{`Using Web Grant OAuth With the 1.4 API`}</h1>\n    <p>{`Web grant is an OAuth flow that allows an application to integrate with Adobe Analytics and use a user's credentials to authenticate. This is very useful for 3rd parties building client applications, or for organizations interested in building something like an internal dashboard that reflects a user's permissions.`}</p>\n    <p>{`These integrations are created within `}<a parentName=\"p\" {...{\n        \"href\": \"console.adobe.io\"\n      }}>{`console.adobe.io`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Log in to `}<a parentName=\"li\" {...{\n          \"href\": \"console.adobe.io\"\n        }}>{`console.adobe.io`}</a>{`, select the relevant org from the dropdown menu at the top right, and click 'Create new project'`}</li>\n      <li parentName=\"ol\">{`Click 'Add an API'`}</li>\n      <li parentName=\"ol\">{`Choose 'Experience Cloud'`}</li>\n      <li parentName=\"ol\">{`Choose 'Adobe Analytics' and click 'Next'`}</li>\n      <li parentName=\"ol\">{`Choose 'OAuth' and click 'Next'`}</li>\n      <li parentName=\"ol\">{`Choose 'Web' and provide a redirect URI and redirect URI pattern. In the pattern field, be sure to escape '.' characters with a backslash.`}</li>\n      <li parentName=\"ol\">{`Click 'Save configured API'`}</li>\n    </ol>\n    <p>{`A `}<inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`client_secret`}</inlineCode>{` will be generated that can be used to request and access token.`}</p>\n    <p>{`To request an authorization code, build the following URL and present it to the user inside of a browser:`}</p>\n    <p><inlineCode parentName=\"p\">{`https://ims-na1.adobelogin.com/ims/authorize/v2?client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}&scope=openid,AdobeID,read_organizations,additional_info.projectedProductContext,additional_info.job_function&state={OPTIONAL_STATE_PARAMETER}`}</inlineCode></p>\n    <p>{`The user will login using their Adobe credentials and will have the opportunity to authorize the client. Once complete, the browser will be redirected to the provided `}<inlineCode parentName=\"p\">{`{REDIRECT_URI}`}</inlineCode>{` with a `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` GET string parameter. This `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` parameter will be used in the next request and is called an `}<em parentName=\"p\">{`authorization code`}</em>{`.`}</p>\n    <p>{`The `}<em parentName=\"p\">{`authorization code`}</em>{` can be exchanged for an access and refresh token by making a server-side request:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -u '{CLIENT_ID}:{CLIENT_SECRET}' -X POST \\\\\n     https://ims-na1.adobelogin.com/ims/token/v3 \\\\\n     -H 'Content-Type: application/x-www-form-urlencoded' \\\\\n     -d 'code={AUTHORIZATION_CODE}&grant_type=authorization_code'\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`CLIENT_ID`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CLIENT_SECRET`}</inlineCode>{` are the credentials provided in the adobe.io console for your application. The `}<inlineCode parentName=\"p\">{`{AUTHORIZATION_CODE}`}</inlineCode>{` parameter is the value of the `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` parameter in the previous response.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`-u '{CLIENT_ID}:{CLIENT_SECRET}'`}</inlineCode>{` parameter instructs curl to send an `}<inlineCode parentName=\"p\">{`Authorization: Basic`}</inlineCode>{` header. For example, if your `}<inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` was `}<inlineCode parentName=\"p\">{`test_client_id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`client_secret`}</inlineCode>{` was `}<inlineCode parentName=\"p\">{`test_client_secret`}</inlineCode>{` the authorization header would look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Authorization: Basic dGVzdF9jbGllbnRfaWQ6dGVzdF9jbGllbnRfc2VjcmV0\n`}</code></pre>\n    <p>{`Where the value is `}<inlineCode parentName=\"p\">{`test_client_id:test_client_secret`}</inlineCode>{` after it has been base64 encoded.`}</p>\n    <p>{`The response from this request will contain an access and refresh token that can be used to make requests against the 1.4 API.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: When making requests, an X-ADOBE-DMA-COMPANY header `}<em parentName=\"p\">{`must be sent in`}</em>{` to indicate login company that the API call is intended for. More information is available `}<a parentName=\"p\" {...{\n          \"href\": \"authentication/auth_company.md\"\n        }}>{`here`}</a>{`. The `}<inlineCode parentName=\"p\">{`discovery/me`}</inlineCode>{` endpoint can be used to get a list of login companies associated with a user. More information is available `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.adobe.io/apis/experiencecloud/analytics/docs.html#!AdobeDocs/analytics-2.0-apis/master/discovery.md\"\n        }}>{`here`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`More information about Adobe OAuth is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.io/authentication/auth-methods.html#!AdobeDocs/adobeio-auth/master/OAuth/OAuth.md\"\n      }}>{`here`}</a>{`. More information about available Adobe scopes is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.io/authentication/auth-methods.html#!AdobeDocs/adobeio-auth/master/OAuth/Scopes.md\"\n      }}>{`here`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}