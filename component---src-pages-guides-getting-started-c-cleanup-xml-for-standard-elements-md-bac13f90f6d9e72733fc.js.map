{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_Cleanup_XML_for_standard_elements.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,4CADR,8CAGA,oMAAqL,cAAGC,WAAW,IAC/L,KAAQ,wEADyK,iDAArL,wIAGA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,iFAEF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kBAAqC,mBAAQA,WAAW,KAAnB,kDAArC,4GAEF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,sEAA6F,mBAAQA,WAAW,KAAnB,QAA7F,uCAA4K,mBAAQA,WAAW,KAAnB,gBAA5K,WACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,OAAjB,64DAsEvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,mEAAsF,mBAAQA,WAAW,KAAnB,OAAtF,sBAAmJ,mBAAQA,WAAW,KAAnB,MAAnJ,mCAA4N,mBAAQA,WAAW,KAAnB,WAA5N,SAAgR,mBAAQA,WAAW,KAAnB,OAAhR,4IACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,OAAjB,mgCAyDvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,oBAAuC,mBAAQA,WAAW,KAAnB,QAAvC,+DACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,OAAjB,ouBAiDzB,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,+BAD6C,yCAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-cleanup-xml-for-standard-elements-md-bac13f90f6d9e72733fc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-5-cleanup-xml-for-standard-elements\"\n    }}>{`Step 5: Cleanup XML for Standard Elements`}</h1>\n    <p>{`The code you generated in the previous sections is syntactically valid, but needs to be modified for use in the Integration Wizard that you will create in the next tutorial, `}<a parentName=\"p\" {...{\n        \"href\": \"c_Partner_Application_Configuration_for_Data_Connectors_Tutorial.md#\"\n      }}>{`2. Partner Application Configuration Tutorial`}</a>{`. In this section, you will focus on converting the XML code and removing extraneous elements, including parameters with no values.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the code in API Explorer and paste it to a text file on your computer.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Name the file `}<strong parentName=\"p\">{`followers`}{`_`}{`per`}{`_`}{`twitter`}{`_`}{`handle`}</strong>{`. After you are done with the modifications, you will copy the final code into the Integration Wizard.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Delete everything outside of `}{`(`}{`and including`}{`)`}{` the soap `}<strong parentName=\"p\">{`Body`}</strong>{` element and surround the XML with `}<strong parentName=\"p\">{`<genesis`}{`>`}</strong>{` tags.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n...\n  <SOAP-ENV:Body>\n<genesis>\n \n<ns1:Report.QueueRanked>\n      <reportDescription href=\"#id1\"/>\n    </ns1:Report.QueueRanked>\n \n<types:ReportDescription id=\"id1\" xsi:type=\"types:ReportDescription\">\n      <reportSuiteID xsi:type=\"xsd:string\">\n            jjesquire4\n      </reportSuiteID>\n      <date xsi:nil=\"true\" />\n            <dateFrom xsi:type=\"xsd:string\">\n                  2011-01-23\n            </dateFrom>\n            <dateTo xsi:type=\"xsd:string\">\n                  2011-01-23\n            </dateTo>\n      <dateGranularity xsi:nil=\"true\" />\n      <metrics href=\"#id2\" />\n            <sortBy xsi:type=\"xsd:string\">\n                  event3\n            </sortBy>\n            <elements href=\"#id3\" />\n            <locale xsi:type=\"tns:reportDefinitionLocale\">\n                  en_US\n            </locale>\n            <Id xsi:type=\"xsd:string\">TCIBHYJISHBIZWVNYKSDD</Id>\n            <Type xsi:type=\"tns:reportType\">ranked</Type>\n</types:ReportDescription>\n \n<soapenc:Array id=\"id2\" soapenc:arrayType=\"tns:reportDefinitionMetric[1]\">\n<Item href=\"#id4\" />\n</soapenc:Array>\n \n<soapenc:Array id=\"id3\" soapenc:arrayType=\"tns:reportDefinitionElement[1]\">\n<Item href=\"#id5\" />\n</soapenc:Array>\n \n<tns:reportDefinitionMetric id=\"id4\" xsi:type=\"tns:reportDefinitionMetric\">\n<id xsi:type=\"xsd:string\">\n    event3\n</id>\n<segment xsi:nil=\"true\" />\n<segmentID xsi:nil=\"true\" />\n</tns:reportDefinitionMetric>\n \n<tns:reportDefinitionElement id=\"id5\" xsi:type=\"tns:reportDefinitionElement\">\n<id xsi:type=\"xsd:string\">\n   evar44\n</id>\n<classification xsi:type=\"xsd:string\" />\n<top xsi:type=\"xsd:int\">\n10\n</top>\n<startingWith xsi:type=\"xsd:int\">\n1\n</startingWith>\n<search xsi:nil=\"true\" />\n<selected xsi:nil=\"true\" />\n<expanded xsi:nil=\"true\" />\n</tns:reportDefinitionElement>\n \n</genesis>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Next, remove all type declarations from the call, instances of `}<strong parentName=\"p\">{`ns1`}</strong>{`, the locale, the `}<strong parentName=\"p\">{`Id`}</strong>{` in the ReportDescription, the `}<strong parentName=\"p\">{`soapenc`}</strong>{` and `}<strong parentName=\"p\">{`tns`}</strong>{` reference and any parameters with no value. The runtime only interprets methods and parameters without the declarative SOAP structure.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`<genesis>\n \n<Report.QueueRanked>\n      <reportDescription href=\"#id1\"/>\n </Report.QueueRanked>\n \n<ReportDescription id=\"id1\" >\n      <reportSuiteID>\n            jjesquire4\n      </reportSuiteID>\n      <date/>\n            <dateFrom>\n                  2011-01-23\n            </dateFrom>\n            <dateTo>\n                  2011-01-23\n            </dateTo>\n      <dateGranularity />\n      <metrics href=\"#id2\" />\n            <sortBy>\n                  event3\n            </sortBy>\n            <elements href=\"#id3\" />\n            <Type>ranked</Type>\n</ReportDescription>\n \n<soapenc:Array id=\"id2\" >\n<Item href=\"#id4\" />\n</soapenc:Array>\n \n<soapenc:Array id=\"id3\" >\n<Item href=\"#id5\" />\n</soapenc:Array>\n \n<tns:reportDefinitionMetric id=\"id4\" >\n<id>\n   event3\n</id>\n</tns:reportDefinitionMetric>\n \n<reportDefinitionElement id=\"id5\">\n<id>\nevar44\n      </id>\n<classification/>\n<top>\n10\n</top>\n<startingWith>\n1\n</startingWith>\n \n</reportDefinitionElement>\n \n</genesis>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Then remove all `}<strong parentName=\"p\">{`href`}</strong>{`'s and embed the referenced code directly in each element.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`<genesis>\n \n<Report.QueueRanked>\n      <ReportDescription>\n     \n      <reportSuiteID>\n          jjesquire4\n      </reportSuiteID>\n     \n      <dateFrom>\n          2010-12-20\n      </dateFrom>\n     \n      <dateTo>\n          2010-12-20\n      </dateTo>\n     \n     <metrics>\n         <Item/>\n \n    <reportDefinitionMetric>\n      <id>\n          event3\n      </id>\n    </reportDefinitionMetric>\n   \n    <sortBy>\n         event3\n    </sortBy>\n    <Type>\n         ranked\n    </Type>\n \n    <reportDefinitionElement>\n      <id>\n          evar44\n      </id>\n      <top>\n          10\n      </top>\n      <startingWith>\n          1\n      </startingWith>\n    </reportDefinitionElement>\n \n </genesis>\n`}</code></pre>\n      </li>\n    </ol>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_define_report_requests.md\"\n      }}>{`Script for Defining Report Requests`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}