{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/data-feeds-api/methods/r_getfeeds.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,YADR,aAGA,+GACA,eACE,GAAM,+BADR,iCAGA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,eACH,eAAIA,WAAW,KACb,MAAS,MADX,aAEgB,uBAAYA,WAAW,MAAvB,gBAChB,eAAIA,WAAW,KACb,MAAS,MADX,wEAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,gBACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,gBACH,eAAIA,WAAW,KACb,MAAS,MADX,iKAEuK,uBAAYA,WAAW,MAAvB,cAFvK,kDAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,cACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,gBACH,eAAIA,WAAW,KACb,MAAS,MADX,+JAEqK,uBAAYA,WAAW,MAAvB,YAFrK,kDAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,aAEgB,uBAAYA,WAAW,MAAvB,gBAChB,eAAIA,WAAW,KACb,MAAS,MADX,0CAE6C,uBAAYA,WAAW,MAAvB,cAF7C,0CAE8I,uBAAYA,WAAW,MAAvB,aAF9I,6EAEiR,uBAAYA,WAAW,MAAvB,gBAFjR,gSAE8mB,uBAAYA,WAAW,MAAvB,gBAF9mB,MAE6qB,uBAAYA,WAAW,MAAvB,WAF7qB,8CAMN,eACE,GAAM,6BADR,+BAGA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,aAEgB,cAAGA,WAAW,KAC1B,KAAQ,4BADI,eAGhB,eAAIA,WAAW,KACb,MAAS,MADX,2EAMN,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,yBAD6C,aAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-data-feeds-api-methods-r-getfeeds-md-4685606402bbb86f805b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getfeeds\"\n    }}>{`GetFeeds`}</h1>\n    <p>{`Returns a list of data feeds for the specified report suites, including delivery status.`}</p>\n    <h2 {...{\n      \"id\": \"datafeedgetfeeds-parameters\"\n    }}>{`DataFeed.GetFeeds Parameters`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`rsid_list`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Array of `}<inlineCode parentName=\"td\">{`xsd:string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`List of report suites for which you want to view feed information.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`start_time`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`xsd:string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(`}{`optional`}{`)`}{` UTC time. Specify the start time of the feed activity to include with each feed. A maximum of 48 hours may be requested. Default when no `}<inlineCode parentName=\"td\">{`start_time`}</inlineCode>{` is present will return only the latest job.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`end_time`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`xsd:string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(`}{`optional`}{`)`}{` UTC time. Specify the end time of the feed activity to include with each feed. A maximum of 48 hours may be requested. Default when no `}<inlineCode parentName=\"td\">{`end_time`}</inlineCode>{` is present will return only the latest job.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`status`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Array of `}<inlineCode parentName=\"td\">{`xsd:string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filter returned data feeds by status: `}<inlineCode parentName=\"td\">{`processing`}</inlineCode>{` - Feed is currently being generated. `}<inlineCode parentName=\"td\">{`delivered`}</inlineCode>{`- Feed and manifest are delivered successfully and the job is completed. `}<inlineCode parentName=\"td\">{`upload_error`}</inlineCode>{` - Feed was generated but the transfer failed. In the event of an FTP transfer failure `}{`(`}{`login denied, lost connection, out of quota, etc`}{`)`}{`, Adobe attempts to automatically connect and send the data up to three separate times. If the failures persist, the feed is marked as `}<inlineCode parentName=\"td\">{`upload_error`}</inlineCode>{`. `}<inlineCode parentName=\"td\">{`no_data`}</inlineCode>{` - No data was collected for delivery.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"datafeedgetfeeds-response\"\n    }}>{`DataFeed.GetFeeds Response`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Array of `}<a parentName=\"td\" {...{\n              \"href\": \"../data_types/r_feed.md#\"\n            }}>{`data_feed`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Status information for each feed that matches the request criteria.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"../methods/methods.md\"\n      }}>{`Methods`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}