{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/classifications/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-guides-classifications-index-md-23837a4a156ec12d28e1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"14-classifications-api\"\n    }}>{`1.4 Classifications API`}</h1>\n    <p>{`Analytics classifications lets you bulk-import additional data attributes, or dimensions, to Adobe Analytics. By augmenting the data elements collected by Analytics with these attributes, users can create deeper and more complex reports.`}</p>\n    <h2 {...{\n      \"id\": \"commitimport\"\n    }}>{`CommitImport`}</h2>\n    <p>{`Submits a classifications import file for processing.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.CommitImport`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`job_id`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The job ID to commit for processing.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` if the job processes successfully.`}</p>\n    <h2 {...{\n      \"id\": \"createexport\"\n    }}>{`CreateExport`}</h2>\n    <p>{`Creates a classifications export job.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.CreateExport`}</inlineCode></p>\n    <p>{`This file represents classifications for a given relation. Before calling this API, use `}<inlineCode parentName=\"p\">{`Classifications.GetFilters`}</inlineCode>{` to obtain valid column numbers, names, and filter dates.`}</p>\n    <p>{`After creating an export job, use `}<inlineCode parentName=\"p\">{`Classifications.GetStatus`}</inlineCode>{` to determine when the export data is ready for download. When ready, use `}<inlineCode parentName=\"p\">{`Classifications.GetExport`}</inlineCode>{` to retrieve the data.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`campaign_filter_start_date`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The campaign start date. Accepts any date string parseable by `}<inlineCode parentName=\"td\">{`php:date()`}</inlineCode>{`. Accepts the keywords `}<inlineCode parentName=\"td\">{`::all::`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`::active::`}</inlineCode>{` to filter by all campaigns, or by only active ones. This filter is off by default.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`campaign_filter_end_date`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The campaign end date. Accepts any date string parseable by `}<inlineCode parentName=\"td\">{`php:date()`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`date_filter_start_date`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Accepts any date string parseable by `}<inlineCode parentName=\"td\">{`php:date()`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`date_filter_end_date`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Accepts any date string parseable by `}<inlineCode parentName=\"td\">{`php:date()`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`email_address`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The email address to receive job notifications.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`encoding`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The language encoding to use with the export file. For example, UTF-8.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`element`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`You get this ID as a return value from `}<inlineCode parentName=\"td\">{`Classifications.GetCompatibilityElements`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rsid_list`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Optional) The list of report suites on which classifications exports data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`row_filter_column_name`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This field accepts the column name except when the `}<inlineCode parentName=\"td\">{`row_filter_column_value`}</inlineCode>{` is set to `}<inlineCode parentName=\"td\">{`::none::`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`row_filter_column_value`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This field is always required if `}<inlineCode parentName=\"td\">{`row_filter_column_name`}</inlineCode>{` is included.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`row_filter_empty_column`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Can be set to: `}<inlineCode parentName=\"td\">{`::all::`}</inlineCode>{` - Returns rows that have all columns empty. `}<inlineCode parentName=\"td\">{`::any::`}</inlineCode>{` - Returns rows that have 1 or more empty column. Any column name - Returns rows where the given column is empty.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`all_rows`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` to have all matching rows returned.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`row_count`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Optional) Limits the number of data rows in the export file to the specified value. The default is 1000.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`quote_output`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether to quote the output.  In some cases, turning this on helps with duplicate keys containing whitespace.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns the `}<inlineCode parentName=\"p\">{`int`}</inlineCode>{` Job ID associated with your export request.`}</p>\n    <h2 {...{\n      \"id\": \"createftp\"\n    }}>{`CreateFTP`}</h2>\n    <p>{`Creates a classifications Import FTP account.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.CreateFTP`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`element`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`relation_id`}</inlineCode>{` that you want to import or export (e.g. 101=evar1, 51=product, etc)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rsid_list`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`report suites to which data is imported.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`description`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`a textual description for the FTP account.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`email_address`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the email account to notify when imports are finished.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`overwrite`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`if `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, keys that already exists will always be overwritten by new keys.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`export`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`if `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, the import will be automatically exported after import.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_ftp_info`}</inlineCode>{`, which contains connection details for the created FTP account.`}</p>\n    <h2 {...{\n      \"id\": \"createimport\"\n    }}>{`CreateImport`}</h2>\n    <p>{`Creates a classifications import job.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.CreateImport`}</inlineCode></p>\n    <p>{`To successfully submit a classifications Import, call `}<inlineCode parentName=\"p\">{`Classifications.CreateImport`}</inlineCode>{` to specify the parameters for the Import job and the header columns to be classified.`}</p>\n    <p>{`After submitting the job, you can iteratively populate row data by calling `}<inlineCode parentName=\"p\">{`Classifications.PopulateImport`}</inlineCode>{`.`}</p>\n    <p>{`After sending all data, call `}<inlineCode parentName=\"p\">{`Classifications.CommitImport`}</inlineCode>{` to finalize the Import job and submit it to the processing queue.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rsid_list`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The list of report suites to receive the import job.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`element`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The report for which you want to perform a classifications import.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`check_divisions`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specifies whether to check report suites for compatible divisions. Supported values include: `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{`: Do not check report suite compatibility. `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`: (Default) Check report suite compatibility.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`description`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A description of the import job.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`email_address`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The email address to receive job notifications.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`export_results`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specifies whether to automatically perform an export when the import job finishes processing. Supported values include: `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{`: (Default) Do not export. `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`: Export when the job completes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`header`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of column values for classification. First column is required to be the `}<inlineCode parentName=\"td\">{`key`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`overwrite_conflicts`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specifies whether to overwrite data when conflicts occur. Supported values include: `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{`: (Default) Do not overwrite data on a conflict. `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`: Overwrite data on a conflict.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_create_job_response`}</inlineCode>{`, a unique `}<inlineCode parentName=\"p\">{`int`}</inlineCode>{` job ID that identifies this classifications import job. If the job import is unsuccessful, an error code is returned instead of a job ID.`}</p>\n    <h2 {...{\n      \"id\": \"getcompatibilityelements\"\n    }}>{`GetCompatibilityElements`}</h2>\n    <p>{`Returns the available `}<inlineCode parentName=\"p\">{`elements`}</inlineCode>{` for a given report suite, and compatibility across report suites.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.GetCompatibilityElements`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rsid_list`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A list of report suites where you want to get valid element values.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_report_suite_compatibility_elements[]`}</inlineCode>{`, a list of compatible elements.`}</p>\n    <h2 {...{\n      \"id\": \"getexport\"\n    }}>{`GetExport`}</h2>\n    <p>{`Retrieves a page of data, known as a file segment, from a completed classifications job.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.GetExport`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`file_id`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The ID of the export file you want to view. You can get this value from `}<inlineCode parentName=\"td\">{`Classifications.GetStatus`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`page`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of the data page you want to view from the export job. Default is 1. The `}<inlineCode parentName=\"td\">{`viewable_pages`}</inlineCode>{` value in `}<inlineCode parentName=\"td\">{`Classifications.GetStatus`}</inlineCode>{` indicates the number of data pages in the job. Valid values for `}<inlineCode parentName=\"td\">{`page`}</inlineCode>{` are between 1 and the value of `}<inlineCode parentName=\"td\">{`viewable_pages`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`pagedetails`}</inlineCode>{`, information and data for the specified data segment.`}</p>\n    <h2 {...{\n      \"id\": \"getfilters\"\n    }}>{`GetFilters`}</h2>\n    <p>{`Gets classification export filters.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.GetFilters`}</inlineCode></p>\n    <p>{`The returned data consists of values that can be passed in as parameters of `}<inlineCode parentName=\"p\">{`Classifications.CreateExport`}</inlineCode>{`, including column numbers and names, and valid dates for filtering data rows in a classifications export.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rsid_list`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A list of report suites that contains the specified data source.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`element`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The element for which you want to get file information.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_filters`}</inlineCode>{`, information about valid filters for the specified data segment.`}</p>\n    <h2 {...{\n      \"id\": \"getftp\"\n    }}>{`GetFTP`}</h2>\n    <p>{`Returns a list of the classifications FTP accounts that are configured for a company. Does not require a JSON request body.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.GetFTP`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`rsid_list`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`report suites for which you want to retrieve FTP information.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_report_suite_ftp[]`}</inlineCode>{`, struct containing details with the FTP accounts for a report suite.`}</p>\n    <h2 {...{\n      \"id\": \"getstatus\"\n    }}>{`GetStatus`}</h2>\n    <p>{`Returns the status of the specified classification request.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.GetStatus`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`job_id`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The classifications job ID.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_job_status[]`}</inlineCode>{`, the status of the specified classifications job. Possible values include `}<inlineCode parentName=\"p\">{`Waiting for user data`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`In progress`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`In progress - % Complete`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Completed`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Completed - With Errors : <message>`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"gettemplate\"\n    }}>{`GetTemplate`}</h2>\n    <p>{`Similar to the Template tab in the Classifications tool in the Admin Console UI, this retrieves a template to use for importing classifications data.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.GetTemplate`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rsid_list`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The report suite where you want to import data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`element`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`relation_id`}</inlineCode>{` for which you want to get a template (e.g. 101=evar1, 51=product, etc)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`classification_names`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(Optional) an array of text classification names to include as columns in the template.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`encoding`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The encoding to use for the template`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`classifications_report_suite_template[]`}</inlineCode>{`, the template, or headers in the classifications export file.`}</p>\n    <h2 {...{\n      \"id\": \"populateimport\"\n    }}>{`PopulateImport`}</h2>\n    <p>{`Appends row data to a previously created classifications import job. You can separate data into pages, but the pages must be sent sequentially (either ascending or descending) to avoid errors when the job processes. Individual classifications jobs cannot exceed 25,000 rows.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://api.omniture.com/admin/1.4/rest/?method=Classifications.PopulateImport`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`job_id`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The import job ID where you want to append the row data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`page`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A page number that identifies the page's sequential position in the import job. For example, if you submit a spreadsheet with 1000 values, divided into 4 pages, page 1 includes values 1 - 250, page 2 includes values 251 - 500, and so on.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><inlineCode parentName=\"strong\">{`rows`}</inlineCode></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`rows`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of row data that matches the column heading order of the specified import job.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Returns `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` if the job processed successfully.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}