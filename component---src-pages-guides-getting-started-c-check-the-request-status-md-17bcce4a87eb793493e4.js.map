{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_check_the_request_status.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,mCADR,qCAGA,iFAAkE,uBAAYC,WAAW,KAAvB,gCAAlE,0GACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,0SAWL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,sJAKL,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,2JAML,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,oCAD6C,iCAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-check-the-request-status-md-17bcce4a87eb793493e4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-2-check-the-request-status\"\n    }}>{`Step 2: Check the Request Status`}</h1>\n    <p>{`You can check the status of the request you sent using the `}<inlineCode parentName=\"p\">{`DataWarehouse.CheckRequest()`}</inlineCode>{` method. This method accepts the report ID as a parameter and returns the status in a request object.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Status codes returned by the CheckRequest function\n$REPORT_STATUS_COMPLETED = 'Completed';\n\necho \"sleeping 5 seconds...\\\\n\";\nsleep(5);\n\n/* Check on the DW request */\n$result = sendRequest('DataWarehouse.CheckRequest', array('Request_Id'=>$request_id) );\nvar_dump($result);   \n\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Thread.sleep(5000);\n/* Store the status in the request object */\nData_warehouse_request request= port.dataWarehouseCheckRequest(reportID);\n\n`}</code></pre>\n    <p><strong parentName=\"p\">{`C`}{`#`}{` Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Thread.Sleep(5000);\n/* Store the status in the request object */\ndata_warehouse_request request = \nclient.DataWarehouseCheckRequest(reportID);\n\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_data_warehouse_API_tutorial.md\"\n      }}>{`Data Warehouse API Tutorial`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}