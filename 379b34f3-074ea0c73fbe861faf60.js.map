{"version":3,"file":"379b34f3-074ea0c73fbe861faf60.js","mappings":"yWA8BA,IAAMA,EAAqB,QACrBC,EAAmB,eACnBC,EAAkB,WAMlBC,EAAa,SAACC,GAAI,OACtBA,EACGC,QAAQ,wBAAwB,SAACC,GAAC,MAAK,KAAOA,EAAEC,WAAW,GAAK,GAAG,IACnEF,QAAQ,kBAAmB,UAC3BA,QAAQ,gBAAiB,QACzBA,QAAQ,oBAAqB,WAC7BA,QAAQ,kBAAmB,QAAS,EAGnCG,EAA0B,SAACC,EAAMC,GACrC,IAAMC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QACnDJ,EAAOK,IAAIP,EAAMC,GACjBG,OAAOI,QAAQC,aAAa,CAAC,EAAG,GAAOL,OAAOC,SAASK,SAAQ,IAAIR,EACrE,EAEMS,EAA6B,WACjCP,OAAOI,QAAQC,aAAa,CAAC,EAAG,GAAG,GAAIL,OAAOC,SAASK,SACzD,EAEME,EAAiB,mCAAG,WAAOC,EAASC,EAAOC,EAAaC,EAAaC,EAAUC,EAAiBC,GAAkB,qFACnG,GAAbC,EAAU,GAEXF,EAAgBG,OAAO,CAAD,gCACIR,EAAQS,cAAc,KAAD,EAA5CC,EAAc,OACdC,EAAoBC,OAAOC,OAAOH,EAAeI,OAAOC,KAAI,YAAO,SAAJ5B,IAAe,IAE9E6B,EAAiBZ,EAASW,KAAI,SAACE,GAAI,OAAKA,EAAKC,cAAc,IAAEC,OAAOJ,KAAI,YAAoB,IAAjBK,EAAS,EAATA,UAAkB,OAAOlB,EAAiBA,EAAW,IAAIkB,EAAcA,CAAU,IAC5JC,EAAkBL,EAAeM,QAAO,SAAAC,GAAU,OAAIZ,EAAkBa,SAASD,EAAW,IAClGjB,EAAmBe,GACnBI,EAAUJ,EAAgB,wBAE1BI,EAAUpB,EAAgB,QAuBzB,OAnBCF,EAAY,KAAOxB,EACrBwB,EAAcsB,GAIRC,EAAqBvB,EAAYmB,QAAO,SAACK,GAAO,OAAKA,IAAYhD,CAAgB,IACjFiD,GAAsBC,EAAAA,EAAAA,uBAAsBH,EAAmB,IACrEvB,EAAc,kBAAIyB,IAAmB,OAAKH,EAAQH,QAAO,SAACQ,GAAK,OAAMJ,EAAmBF,SAASM,EAAM,MAAGR,QAAO,SAAAQ,GAAK,OAAIL,EAAQD,SAASM,EAAM,KAGnJ3B,EAAY4B,SAAQ,SAACX,GACnBb,EAAQyB,KAAK,CACXZ,UAAAA,EACAnB,MAAAA,EACAZ,OAAQ,CACN4C,YAAaC,KAAKC,KAvDK,GAuDyBhC,EAAYK,QAC5D4B,qBAAsB,CAAC,WAAY,MAAO,QAAS,iBAGzD,IAAG,UAEUpC,EAAQqC,gBAAgB9B,GAAS,KAAD,gFAC9C,gBAtCsB,kDAwCjB+B,EAAa,mCAAG,WAAOtC,EAASC,EAAOC,EAAaqC,EAAenC,EAAUC,EAAiBC,EAAoBkC,GAAQ,oFAGzHnC,EAAgBG,OAAO,CAAD,gCACIR,EAAQS,cAAc,KAAD,EAA5CC,EAAc,OACdC,EAAoBC,OAAOC,OAAOH,EAAeI,OAAOC,KAAI,YAAO,SAAJ5B,IAAe,IAE9E6B,EAAiBZ,EAASW,KAAI,SAACE,GAAI,OAAKA,EAAKC,cAAc,IAAEC,OAAOJ,KAAI,YAAoB,IAAjBK,EAAS,EAATA,UAAkB,OAAOlB,EAAiBA,EAAW,IAAIkB,EAAcA,CAAU,IAC5JC,EAAkBL,EAAeM,QAAO,SAAAC,GAAU,OAAIZ,EAAkBa,SAASD,EAAW,IAClGjB,EAAmBe,GACnBI,EAAUJ,EAAgB,wBAE1BI,EAAUpB,EAAgB,QAsBzB,OAlBDkC,EADEA,EAAcf,SAAS,OACTC,EAEAc,EAAcjB,QAAO,SAAAmB,GAAQ,OAAIhB,EAAQD,SAASiB,EAAS,IAGvElC,EAAU,GAEhBgC,EAAcR,SAAQ,SAACX,GACrBb,EAAQyB,KAAK,CACXZ,UAAAA,EACAnB,MAAAA,EACAZ,OAAQ,CACNqD,OAAQ,CAAC9D,GACTwD,qBAAsB,CAAC,WAAY,MAAO,WAC1CH,YAAaC,KAAKC,KA7FC,IA6FyBI,EAAc/B,QAC1DmC,QAASH,EAASzB,KAAI,SAAC6B,GAAO,OAAQhE,EAAe,KAAKgE,EAAO,OAAKC,KAAK,WAGjF,IAAG,UAEU7C,EAAQqC,gBAAgB9B,GAAS,KAAD,gFAC9C,gBArCkB,oDAuCbuC,EAAmB,SAACC,EAAMC,GAC9BD,EAAKhB,SAAQ,YAAgD,IAA7CkB,EAAQ,EAARA,SAAUC,EAAG,EAAHA,IAAKC,EAAI,EAAJA,KAAMC,EAAgB,EAAhBA,iBAC/BC,EAAU,GAGZA,EAFEF,IAKED,EAAI1B,SAAS,+BACL0B,EAAInE,QAAQ,8BAA+B,IAE3CmE,IAKTI,EAAAA,EAAAA,IAAeD,IAEbL,EAAQO,MAAK,SAACC,GAAM,OAAKA,EAAON,MAAQG,CAAO,KAClDL,EAAQhB,KAAK,CACXiB,SAAAA,EACAC,IAAKG,EACLD,iBAAAA,GAIR,GACF,EAEMK,EAAoB,SAACf,EAAQM,GAC7BN,EAAO9D,IACTgC,OAAO8C,KAAKhB,EAAO9D,IAAkBmD,SAAQ,SAACa,GAC5C,IAIO,EAJDe,EAAQX,EAAQO,MAAK,SAACC,GAAM,OAAK5C,OAAO8C,KAAKF,GAAQ,KAAOZ,CAAO,IACrEe,EAEFA,EAAMf,IAAYF,EAAO9D,GAAiBgE,GAE1CI,EAAQhB,OAAI,MAAIY,GAAUF,EAAO9D,GAAiBgE,GAAQ,GAE9D,GAEJ,EAUE,kuDAEIgB,EAAS,SAAH,GAAkG,IAA5F5D,EAAO,EAAPA,QAASI,EAAQ,EAARA,SAAUF,EAAW,EAAXA,YAAa2D,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cAAeC,EAAc,EAAdA,eAAgBC,EAAS,EAATA,UAC3F,GAAkCC,EAAAA,EAAAA,WAAS,GAApCC,EAAS,KAAEC,EAAY,KAC9B,GAAsCF,EAAAA,EAAAA,UAAS,IAAxCG,GAAW,KAAEC,GAAc,KAClC,IAA4CJ,EAAAA,EAAAA,UAAS,IAA9CK,GAAc,MAAEC,GAAiB,MACxC,IAA0CN,EAAAA,EAAAA,UAAS,CAAC,QAA7C1B,GAAa,MAAEiC,GAAgB,MACtC,IAAsCP,EAAAA,EAAAA,UAAS,CAACtF,IAAzCwB,GAAW,MAAEsE,GAAc,MAClC,IAA8CR,EAAAA,EAAAA,UAAS,IAAhD5D,GAAe,MAAEC,GAAkB,MAC1C,IAAgD2D,EAAAA,EAAAA,UAAS,IAAlDS,GAAgB,MAAEC,GAAmB,MAC5C,IAAkDV,EAAAA,EAAAA,WAAS,GAApDW,GAAiB,MAAEC,GAAoB,MAC9C,IAAkCZ,EAAAA,EAAAA,WAAS,GAApCa,GAAS,MAAEC,GAAY,MAC9B,IAAkCd,EAAAA,EAAAA,WAAS,GAApCe,GAAS,MAAEC,GAAY,MACxBC,IAAYC,EAAAA,EAAAA,QAAO,MACnBC,IAAiBD,EAAAA,EAAAA,QAAO,MACxBE,IAAWF,EAAAA,EAAAA,QAAO,MAClBG,IAAmBH,EAAAA,EAAAA,QAAO,MAChC,IAA8DlB,EAAAA,EAAAA,UAAS,IAAhEsB,GAAuB,MAAEC,GAA0B,MAC1D,IAA0CvB,EAAAA,EAAAA,UAAS,IAA5CwB,GAAa,MAAEC,GAAgB,MACtC,IAA4CzB,EAAAA,EAAAA,UAAS,IAA9C0B,GAAc,MAAEC,GAAiB,MACxC,IAA4C3B,EAAAA,EAAAA,UAAS,IAA9C4B,GAAc,MAAEC,GAAiB,MACxC,IAAkD7B,EAAAA,EAAAA,WAAS,GAApD8B,GAAiB,MAAEC,GAAoB,MAC9C,IAA0C/B,EAAAA,EAAAA,WAAS,GAA5CgC,GAAa,MAAEC,GAAgB,MACtC,IAAoDjC,EAAAA,EAAAA,UAAS,GAAtDkC,GAAkB,MAAEC,GAAqB,MAE1C3G,GAAM,mCAAG,wGACT2E,GAAY5D,OAAO,CAAD,gBAeO,GAb3BwF,IAAqB,GACrB9G,EAAwBmH,EAAAA,GAAAA,MAAqBjC,IAC7ClF,EAAwBmH,EAAAA,GAAAA,SAAwB3B,IAChDxF,EAAwBmH,EAAAA,GAAAA,MAAqB9D,IAEzCyB,IACIsC,EAAUC,KAAKC,UAAU,CAAE,MAASpC,GAAa,SAAYM,GAAkB,MAASnC,KAzC9FkE,WAAYC,SAASC,UA0CfC,GAxCRH,EAAUI,QAAQ,cAAgB,GAAKJ,EAAUI,QAAQ,0BAA4B,GAAKJ,EAAUI,QAAQ,aAAe,GAAKJ,EAAUI,QAAQ,aAAe,GAAKJ,EAAUI,QAAQ,oBAAsB,IACzMJ,IAyCDK,OAAOC,YAAYT,EAASM,IAIhC/B,IAAqB,GAEjBT,KAAgBE,GAAc,iBACb,OAAnBH,GAAa,GAAM,UACJ7B,EAActC,EAASoE,GAAalE,EAAa,CAAC,OAAQE,EAAUC,GAAiBC,GAAoBoE,IAAkB,KAAD,GAAzIjF,EAAM,gDAES6C,EAActC,EAASoE,GAAalE,EAAaqC,GAAenC,EAAUC,GAAiBC,GAAoBoE,IAAkB,KAAD,GAA/IjF,EAAM,eAGFuH,EAAe7G,GAAYmB,QAAO,SAACK,GAAO,OAAKA,IAAYhD,CAAgB,IAAE,GAE7EsI,EAAuB,CAACtI,GACxBuI,EAAsB,GACtBC,EAAuB,GAEnB,QAAV,EAAI1H,SAAM,OAAS,QAAT,EAAN,EAAQuD,eAAO,OAAf,EAAiBxC,QACnBf,EAAOuD,QAAQjB,SAAQ,YAAuB,IAApBgB,EAAI,EAAJA,KAAML,EAAM,EAANA,OAC9B,QAAe0E,IAAX1E,EAAJ,CACA,GAAIK,EAAKvC,OAAS,EAAG,CACnB,IAAMmB,EAAUoB,EAAK,GAAGpB,QAEpBA,IACGsF,EAAqBzF,SAASG,KAC7BA,IAAYqF,EACdC,EAAqBjF,KAAKL,GAE1BsF,EAAqBI,OAAO,EAAG,EAAGL,IAI1C,CAKA,OAHAlE,EAAiBC,EAAMmE,GACvBzD,EAAkBf,EAAQyE,IAEnB,CAlByB,CAmBlC,IAEE/C,KAAgBE,IAClBsB,GAAkBqB,GAClB1C,GAAkBH,IACd4C,GAAgBC,EAAqBzF,SAASwF,IAChDxC,IAAiB3C,EAAAA,EAAAA,uBAAsBmF,IACvCd,IAAiB,KAEjBR,GAAiBwB,GACjBpB,GAAkBqB,GAClBhD,GAAa,MAGfuB,GAAiBwB,GACjBpB,GAAkBqB,GAClBhD,GAAa,IACd,kCAtGiB,IAChBsC,CAqGD,UAEJ,kBAvEW,mCA2PZ,OAlLAa,EAAAA,EAAAA,YAAS,iBAAC,0FA0BR,OAzBItD,GAEFzE,OAAOgI,iBAAiB,WAAW,SAACC,GAClC,IAAMlB,EAAUC,KAAKkB,MAAMD,EAAEE,MAC7B,GAAIpB,EAAQqB,cAAe,CACzB,IAAIA,EAAgBrB,EAAQqB,cAC5B,GAAsB,MAAlBA,EAAuB,CAEpBA,EAAcC,WAAW,OAAQD,EAAa,IAAOA,GACrDA,EAAcE,SAAS,OAAQF,GAAgC,KACpE,IAAMX,EAAe5G,EAASmD,MAAK,SAAA5B,GAAO,OAAIA,EAAQT,eAAe4G,MAAK,SAAAC,GACxE,OAAOJ,EAAcC,WAAWG,EAAIC,gBACtC,GAAE,IAEEhB,SAAAA,EAAciB,aAChBxD,GAAe,CAACuC,EAAaiB,aAAW,eAAK9H,KAEjD,CAEA,IAAM+H,EAAQ3B,KAAKC,UAAU,CAAE2B,SAAU7B,EAAQqB,gBACjDb,OAAOC,YAAYmB,EAAO,IAC5B,CACF,IAGiE,EAAnE,OAE6BlI,EAAQS,cAAc,KAAD,EAA5CC,EAAc,OACdC,EAAoBC,OAAOC,OAAOH,EAAeI,OAAOC,KAAI,YAAO,SAAJ5B,IAAe,IAE9E6B,EAAiBZ,EAASW,KAAI,SAACE,GAAI,OAAKA,EAAKC,cAAc,IAAEC,OAAOJ,KAAI,YAAoB,IAAjBK,EAAS,EAATA,UAC/E,OAAOlB,EAAiBA,EAAW,IAAIkB,EAAcA,CACvD,IAEMC,EAAkBL,EAAeM,QAAO,SAAAC,GAAU,OAAIZ,EAAkBa,SAASD,EAAW,IAClGjB,GAAmBe,GAAiB,2CAEnC,KAEHiG,EAAAA,EAAAA,YAAU,WACR,GAAIzD,EAAY,CAEd,IAAMuE,EAAe,IAAIC,IAAI9I,OAAOC,UAAU4I,aACxCnI,EAAQmI,EAAaE,IAAIjC,EAAAA,GAAAA,OACzB7D,EAAW4F,EAAaE,IAAIjC,EAAAA,GAAAA,UAC5BvE,EAAQsG,EAAaE,IAAIjC,EAAAA,GAAAA,OAE3BvE,GACF0C,GAAiB1C,EAAMyG,MAAM,MAG3B/F,GACFmC,GAAoBnC,EAAS+F,MAAM,MAGjCtI,SAAAA,EAAOO,SACT6D,GAAepE,GACfgF,IAAa,GAEbiB,IAAiB,IAIfb,UAAAA,GAAUmD,SACZnD,GAASmD,QAAQC,OAErB,MACE3I,GAEJ,GAAG,CAAC+D,KAEJyD,EAAAA,EAAAA,YAAU,WACJrB,KACFC,IAAiB,GACjBzG,KAEJ,GAAG,CAACwG,MAEJqB,EAAAA,EAAAA,YAAU,WACJhC,UAAAA,GAAkBkD,UACpBlD,GAAiBkD,QAAQE,UAAY,EAEzC,GAAG,CAACjD,MAEJ6B,EAAAA,EAAAA,YAAU,WACR,IAAMqB,EAAU,SAAH,GAAoB,IAAdC,EAAM,EAANA,OACjB5C,IAAqB,GAEjBd,GAAUsD,UAAYtD,GAAUsD,QAAQK,SAASD,IAAWA,EAAOE,KAAO/E,GAC5ED,GAAc,EAElB,EAGA,OADA4C,SAASa,iBAAiB,QAASoB,GAAS,GACrC,WACLjC,SAASqC,oBAAoB,QAASJ,GAAS,EACjD,CACF,GAAG,CAAC3C,GAAsBpB,GAAmBd,EAAeoB,MAE5DoC,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAW,SAAH,GACZ,GAAY,WADS,EAAHC,IACI,CACpBnF,GAAc,GACdhE,IACA,IAAMoJ,EAAcxC,SAASyC,eAAe,oBAC5CD,GAAcA,EAAYT,OAC5B,CACF,EAGA,OADA/B,SAASa,iBAAiB,UAAWyB,GAC9B,WACLtC,SAASqC,oBAAoB,UAAWC,EAC1C,CACF,GAAG,CAAClF,KAEJwD,EAAAA,EAAAA,YAAU,WAER,IAAM8B,EAAYC,YAAW,kBAAMC,GAAkB,GAAE,KACjDA,EAAgB,mCAAG,4FACnBlF,GAAY5D,QAAWiF,GAAcjF,OAAM,iBAC1B,OAAnByE,IAAa,GAAM,SAEOlF,EAAkBC,EAASoE,GAAalE,EAAaC,GAAaC,EAAUC,GAAiBC,IAAoB,KAAD,EAApIiJ,EAAW,OACjBnD,GAAsBD,GAAqB,GAC3CqD,QAAQC,IAAI,mCAAoCtD,IAE5CoD,SAAoB,QAAT,EAAXA,EAAavG,eAAO,OAApB,EAAsBxC,QAClBwC,EAAU,GAChBuG,EAAYvG,QAAQjB,SAAQ,YAAe,IAAZgB,EAAI,EAAJA,KAC7BD,EAAiBC,EAAMC,EACzB,IACAwC,GAA2BxC,GAEtByC,GAAcjF,QACjBqE,IAAqB,IAGvBW,GAA2B,IAG7BQ,IAAqB,GAAM,wBAE3Bf,IAAa,GACbe,IAAqB,GAAO,4CAE/B,kBA3BqB,mCA6BtB,OAAO,kBAAM0D,aAAaN,EAAW,CAEvC,GAAG,CAAChF,KAEAJ,IACFsD,EAAAA,EAAAA,YAAU,WACR,GAAIlC,IACEG,GAAwB/E,OAAS,EAAG,CACtC,IAAMmJ,EAAWvE,GAAeoD,QAAQoB,iBAAiB,KACrDD,EAASnJ,OAAS,GACpBmJ,EAAS5H,SAAQ,SAAA8H,GACfA,EAAKjB,OAAS,MAChB,GAEJ,CAGF,GAAItD,IACEG,GAAcjF,OAAS,EAAG,CAC5B,IAAMmJ,EAAWrE,GAAiBkD,QAAQoB,iBAAiB,KACvDD,EAASnJ,OAAS,GACpBmJ,EAAS5H,SAAQ,SAAA8H,GACfA,EAAKjB,OAAS,MAChB,GAEJ,CAEJ,GAAG,CAACrD,GAAyBE,MAI7B,iCACE,eACEqE,IAAK5E,GACL6E,KAAKA,EAAAA,EAAAA,IAAG,sBAEC/F,EAAY,IAAM,4CAA2C,mBAGlEY,IAAqB,aAAY,wGAIHoF,EAAAA,GAAmB,2DAIrD,eACED,KAAKA,EAAAA,EAAAA,IAAG,qFAGOrL,EAAkB,kCAECsL,EAAAA,GAAmB,8EAIrD,gBACED,IAAG,EAGHE,UAAU,kBACVC,SAAQ,mCAAE,WAAOC,GAAK,iEACpBA,EAAMC,iBACNzF,GAAoB,IACpBM,IAAa,GACbiB,IAAiB,GAAM,2CACxB,mDALO,KAMR,eACE+D,UAAWI,IAAW,qBAAsB,CAAE,aAAcvF,KAC5DiF,IAAG,IAIH,QAAC,EAAAO,QAAO,CAACL,UAAU,6BACnB,iBACEH,IAAKzE,GACLjG,MAAOgF,GACPmG,QAAS,WACPxF,IAAa,EACf,EACAyF,OAAQ,WACNzF,IAAa,EACf,EACA0F,UAAW,YAAc,IAAXxB,EAAG,EAAHA,IACR7D,UAAAA,GAAgBoD,UACN,cAARS,EACF7D,GAAeoD,QAAQkC,cAAc,kBAAkBjC,QACtC,YAARQ,GACT7D,GAAeoD,QAAQkC,cAAc,+BAA+BjC,QAG1E,EACAkC,SAAQ,mCAAE,WAAOnD,GAAC,uEACVvH,EAAQuH,EAAEoB,OAAOxJ,MACvBiF,GAAepE,GAAO,2CACvB,mDAHO,GAIR,aAAW,SACX2K,KAAK,SACLC,YAAY,SACZZ,UAAU,iDACVa,aAAa,SAGhB9F,KACC,QAAC,IAAY,CACX+E,KAAKA,EAAAA,EAAAA,IAAG,iKAM0BC,EAAAA,GAAmB,iGAQrDe,SAAS,IACTC,SAAO,EACP,aAAW,eACXJ,KAAK,QACLX,UAAU,mDACVtB,QAAS,WACPtE,GAAe,IACfqB,GAAiB,IACjBb,IAAqB,GACrB/E,IACAuF,GAASmD,QAAQC,OACnB,IACA,QAAC,EAAAwC,MAAK,SAKZ,QAAC,IAAO,CACNC,OAAQnF,GACRgE,KAAKA,EAAAA,EAAAA,IAAG,yEAGGrL,EAAkB,kCAEKsL,EAAAA,GAAmB,6EAIpDzE,GAAwB/E,OAAS,GAChC,QAAC,KAAI,CACHsJ,IAAK1E,GACLqF,UAAW,YAAc,IAAXxB,EAAG,EAAHA,IACZ,GAAI7D,UAAAA,GAAgBoD,SAAWpD,GAAeoD,QAAQK,SAASnC,SAASyE,eACtE,GAAY,cAARlC,EAAqB,CACvB,IAAMmC,EAAc1E,SAASyE,cAAcE,mBACvCD,EACFA,EAAY3C,QAEZrD,GAAeoD,QAAQkC,cAAc,kBAAkBjC,OAE3D,MAAO,GAAY,YAARQ,EAAmB,CAC5B,IAAMqC,EAAkB5E,SAASyE,cAAcI,uBAC3CD,EACFA,EAAgB7C,QAEhBrD,GAAeoD,QAAQkC,cAAc,+BAA+BjC,OAExE,CAEJ,GACClD,GAAwBxE,KAAI,SAACyK,GAAsB,IAAD,EAOpB,YAKtB,IAXDC,EAAE,GAAMjM,SAASkM,OAASF,EAAiBtI,IAC3CyI,EAA+C,QAAvC,EAAAH,EAAiBpI,iBAAiBuI,aAAK,OAAvC,EAAyCvM,MAAQoM,EAAiBpI,iBAAiBuI,MAAMvM,MAAQ,GACzGwM,EAAehL,OAAOiL,QAAQL,EAAiBpI,kBAAkB9B,QAAO,SAAAwK,GAC5E,OAAOA,EAAK,GAAGC,aAAavL,OAAS,CACvC,IACIwL,EAAU,GACVJ,EAAapL,OAAS,GACxBoL,EAAaK,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAE,GAAG9M,MAAMoB,OAAS2L,EAAE,GAAG/M,MAAMoB,QAAU,EAAI,CACtD,IACAwL,GAA4B,QAAlB,EAAAJ,EAAa,GAAG,UAAE,OAAO,QAAP,EAAlB,EAAoBxM,aAAK,WAAP,EAAlB,EAA2BoB,SAA2B,QAArB,EAAGoL,EAAa,GAAG,UAAE,OAAO,QAAP,EAAlB,EAAoBxM,aAAK,WAAP,EAAlB,EAA2BoB,QAA2B,QAArB,EAAGoL,EAAa,GAAG,UAAE,aAAlB,EAAoBxM,MAA0B,QAArB,EAAGwM,EAAa,GAAG,UAAE,aAAlB,EAAoBxM,OAElI4M,EAA4B,QAAlB,EAAAJ,EAAa,GAAG,UAAE,OAAlB,EAAoBxM,MAA0B,QAArB,EAAGwM,EAAa,GAAG,UAAE,aAAlB,EAAoBxM,MAAQ,GAKpE,OAFA4M,EAAUA,EAAQI,UAAU,EAAG,MAG7B,QAAC,KAAQ,CAACnD,IAAKuC,EAAiBvI,SAAUoJ,KAAMZ,IAC9C,eACE1B,IAAG,IAUH,kBACEuC,wBAAyB,CACvBC,OAAQ1N,EAAW8M,OAIvB,eACE5B,IAAG,GAIF0B,IAGH,eACEa,wBAAyB,CACvBC,OAAQ1N,EAAWmN,OAM/B,MAGF,eACEjC,IAAG,IAIH,eACEA,IAAG,IAMH,cACEE,UAAU,2CACVF,IAAG,GAEA,qBAGL,kBAAI,+BAOb7F,IAAc,eACb6F,IAAG,IAMH,QAAC,IAAc,CAACyC,KAAK,OAGtB5H,KAAsBV,IACrB,eACE6F,KAAKA,EAAAA,EAAAA,IAAG,0BAEO0C,EAAAA,GAAoB,0DAIDzC,EAAAA,GAAmB,yCAKrD,eACED,KAAKA,EAAAA,EAAAA,IAAG,2IAMG2C,EAAAA,GAAa,UAExB,cACEzC,UAAU,4CACVF,IAAG,GAEA,uBAGL,eACEA,KAAKA,EAAAA,EAAAA,IAAG,6FAMK2C,EAAAA,GAAa,kCACU1C,EAAAA,GAAmB,2BAItDrE,GAAe5E,KAAI,SAACkH,EAAajJ,GAChC,OACE,QAAC,IAAQ,CACPiK,IAAKjK,EACL2N,WAAY1E,IAAgBtJ,EAC1B4D,GAAcf,SAAS,OACvBe,GAAcuF,MAAK,SAAAhG,GACjB,OAAOD,EAAAA,EAAAA,uBAAsBoG,GAAazG,SAASM,EACrD,IAEF1C,MAAO6I,EACP0C,SAAU,SAACiC,GASLpI,GARCoI,EAOiB,iBAAhB3E,EACe,CAAC,OAED,GAAD,eAAK1F,GAAcjB,QAAO,SAAAQ,GAAK,MAAc,QAAVA,CAAe,MAAC,QAAKD,EAAAA,EAAAA,uBAAsBoG,KAT5E,iBAAhBA,EACe1F,GAAcjB,QAAO,SAAAQ,GAAK,MAAc,QAAVA,CAAe,IAE7CS,GAAcjB,QAAO,SAAAQ,GAAK,QAAKD,EAAAA,EAAAA,uBAAsBoG,GAAazG,SAASM,EAAM,KAStG6C,GAAoB,IACpBuB,IAAiB,EACnB,IACA,oBAAO+B,GAGb,MAEF,cACEgC,UAAU,4CACVF,IAAG,GAGA,uBAGL,eACEA,KAAKA,EAAAA,EAAAA,IAAG,qJAOK2C,EAAAA,GAAa,kCACU1C,EAAAA,GAAmB,2BAItDnE,GAAerF,OAAS,EACtBqF,GAAe9E,KAAI,SAAC8L,EAAe7N,GAClC,IAAM4D,EAAUhC,OAAO8C,KAAKmJ,GAAe,GAE3C,OACE,QAAC,IAAQ,CACP5D,IAAKjK,EACL2N,WAAYjI,GAAiBlD,SAASoB,GACtCxD,MAAOwD,EACP+H,SAAU,SAACiC,GAEPjI,GADEiI,EACkB,SAAClI,GAAgB,wBAASA,GAAgB,CAAE9B,GAAU,EAGxE8B,GAAiBpD,QAAO,SAACwL,GAAe,OAAKA,IAAoBlK,CAAO,KAG5EsD,IAAiB,EACnB,IACA,gBACE6D,IAAG,GAGDnH,GAKV,KAEC,eAAKqH,UAAU,sCAAqC,kCAG3D,eACEF,IAAG,GAGFtE,GAAcjF,OAAS,GACtB,eACEsJ,IAAKxE,GACLyE,KAAKA,EAAAA,EAAAA,IAAG,4QAO0BC,EAAAA,GAAmB,wCAKpDvE,GAAc1E,KAAI,SAACgM,GAAkB,IAAD,EAKN,YAKtB,IATDtB,EAAE,GAAMjM,SAASkM,OAASqB,EAAa7J,IACvCyI,EAA2C,QAAnC,EAAAoB,EAAa3J,iBAAiBuI,aAAK,OAAnC,EAAqCvM,MAAQ2N,EAAa3J,iBAAiBuI,MAAMvM,MAAQ,GACjGwM,EAAehL,OAAOiL,QAAQkB,EAAa3J,kBAAkB9B,QAAO,SAAAwK,GAAI,OAAIA,EAAK,GAAGC,aAAavL,OAAS,CAAC,IAC7GwL,EAAU,GACVJ,EAAapL,OAAS,GACxBoL,EAAaK,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAE,GAAG9M,MAAMoB,OAAS2L,EAAE,GAAG/M,MAAMoB,QAAU,EAAI,CACtD,IACAwL,GAA4B,QAAlB,EAAAJ,EAAa,GAAG,UAAE,OAAO,QAAP,EAAlB,EAAoBxM,aAAK,WAAP,EAAlB,EAA2BoB,SAA2B,QAArB,EAAGoL,EAAa,GAAG,UAAE,OAAO,QAAP,EAAlB,EAAoBxM,aAAK,WAAP,EAAlB,EAA2BoB,QAA2B,QAArB,EAAGoL,EAAa,GAAG,UAAE,aAAlB,EAAoBxM,MAA0B,QAArB,EAAGwM,EAAa,GAAG,UAAE,aAAlB,EAAoBxM,OAElI4M,EAA4B,QAAlB,EAAAJ,EAAa,GAAG,UAAE,OAAlB,EAAoBxM,MAA0B,QAArB,EAAGwM,EAAa,GAAG,UAAE,aAAlB,EAAoBxM,MAAQ,GAKpE,OAFA4M,EAAUA,EAAQI,UAAU,EAAG,MAG7B,eACErC,IAAG,IAWH,eACEE,UAAU,qCACVF,IAAG,IAGH,QAAC,IAAU,CAAC0B,GAAIA,IACd,gBACEa,wBAAyB,CACvBC,OAAQ1N,EAAW8M,SAK3B,eACE5B,IAAG,IAGH,QAAC,IAAU,CAACiD,QAAQ,YAAYvB,GAAIA,GACjCA,KAGL,eACExB,UAAU,qCACVF,IAAG,EAGHuC,wBAAyB,CAAEC,OAAQ1N,EAAWmN,MAItD,MAGF,eACEjC,KAAKA,EAAAA,EAAAA,IAAG,oTAU0BC,EAAAA,GAAmB,2FAMrD,eACEiD,MAAM,6BACNC,QAAQ,aACRnD,IAAG,IAMH,kBACE,kBACE,gBAAMoD,EAAE,4RACR,gBAAMA,EAAE,qSACR,gBAAMA,EAAE,6MACR,gBAAMA,EAAE,kQAId,cAAIlD,UAAU,oEAAmE,4CACvC,sBAAS7F,MAEnD,aACE6F,UAAU,iCACVF,IAAG,GAEA,sFAWdnF,KACC,eACEmF,KAAKA,EAAAA,EAAAA,IAAG,gCAGD/F,EAAY,4CAA8C,+FAA8F,0FAY3K,C","sources":["webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst searchSuggestions = async (algolia, query, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, path, _highlightResult }) => {\n    let urlPath = ''\n    if (path) {\n      // console.log(path);\n      urlPath = path;\n    } else {\n      // console.log(url);\n      if (url.includes('https://developer.adobe.com')) {\n        urlPath = url.replace('https://developer.adobe.com', '');\n      } else {\n        urlPath = url;\n      }\n    }\n\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({ algolia, indexAll, indexPrefix, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      } else {\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      }\n\n      const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (isIFramed) {\n\n      window.addEventListener(\"message\", (e) => {\n        const message = JSON.parse(e.data);\n        if (message.localPathName) {\n          let localPathName = message.localPathName;\n          if (localPathName !== \"/\") {\n            // make sure path name has a slash at start/end to match path-prefix format \n            if (!localPathName.startsWith('/')) { localPathName = `/${localPathName}` }\n            if (!localPathName.endsWith('/')) { localPathName = `${localPathName}/` }\n            const localProduct = indexAll.find(product => product.productIndices.some(idx => {\n              return localPathName.startsWith(idx.indexPathPrefix);\n            }));\n\n            if (localProduct?.productName) {\n              setSearchIndex([localProduct.productName, ...searchIndex]);\n            }\n          }\n\n          const reply = JSON.stringify({ received: message.localPathName });\n          parent.postMessage(reply, \"*\");\n        }\n      });\n    };\n\n    /* Prepare list of existing indices by cross referencing Algolia */\n\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => {\n      return indexPrefix ? `${indexPrefix}-${indexName}` : indexName\n    });\n\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n\n  }, [])\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n        const searchClose = document.getElementById(\"aio-Search-close\");\n        searchClose ? searchClose.focus() : \"\";\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  useEffect(() => {\n    // simple debouncing strategy for search queries while user is typing\n    const timeOutId = setTimeout(() => debounceCallback(), 500);\n    const debounceCallback = async () => {\n      if (searchQuery.length && !searchResults.length) {\n        setShowClear(true);\n\n        const suggestions = await searchSuggestions(algolia, searchQuery, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices);\n        setSearchQueryCounter(searchQueryCounter + 1);\n        console.log('Total search queries counted is:', searchQueryCounter);\n\n        if (suggestions?.results?.length) {\n          const results = [];\n          suggestions.results.forEach(({ hits }) => {\n            mapSearchResults(hits, results);\n          });\n          setSearchSuggestionResults(results);\n\n          if (!searchResults.length) {\n            setShowSearchResults(false);\n          }\n        } else {\n          setSearchSuggestionResults([]);\n        }\n\n        setIsSuggestionsOpen(true);\n      } else {\n        setShowClear(false);\n        setIsSuggestionsOpen(false);\n      }\n    }\n\n    return () => clearTimeout(timeOutId);\n\n  }, [searchQuery])\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          const allLinks = suggestionsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          const allLinks = searchResultsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n    }, [searchSuggestionResults, searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-40);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                  &:focus{\n                    border: 2px solid #007aff !important;\n                    border-radius: 15% !important;\n                  }\n                `}\n                tabIndex=\"0\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const descriptions = Object.entries(searchSuggestion._highlightResult).filter(optn => {\n                    return optn[1].matchedWords.length > 0\n                  });\n                  let content = \"\";\n                  if (descriptions.length > 1) {\n                    descriptions.sort((a, b) => {\n                      return a[1].value.length > b[1].value.length ? -1 : 1;\n                    });\n                    content = descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length ? descriptions[0][1]?.value : descriptions[1][1]?.value;\n                  } else {\n                    content = descriptions[0][1]?.value ? descriptions[0][1]?.value : \"\";\n                  }\n\n                  content = content.substring(0, 250);\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 30%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 50%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        `}>{keyword}</span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const descriptions = Object.entries(searchResult._highlightResult).filter(optn => optn[1].matchedWords.length > 0);\n                    let content = \"\";\n                    if (descriptions.length > 1) {\n                      descriptions.sort((a, b) => {\n                        return a[1].value.length > b[1].value.length ? -1 : 1;\n                      });\n                      content = descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length ? descriptions[0][1]?.value : descriptions[1][1]?.value;\n                    } else {\n                      content = descriptions[0][1]?.value ? descriptions[0][1]?.value : \"\";\n                    }\n\n                    content = content.substring(0, 250);\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","searchSuggestions","algolia","query","indexPrefix","searchIndex","indexAll","existingIndices","setExistingIndices","queries","length","listIndices","algoliaIndices","algoliaIndexNames","Object","values","items","map","localIndexList","prod","productIndices","flat","indexName","filteredIndexes","filter","localIndex","includes","indexes","searchProductNames","product","localProductIndexes","getIndexesFromProduct","index","forEach","push","hitsPerPage","Math","ceil","attributesToRetrieve","multipleQueries","searchIndexes","selectedIndex","keywords","selected","facets","filters","keyword","join","mapSearchResults","hits","results","objectID","url","path","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","found","Search","showSearch","setShowSearch","searchButtonId","isIFramed","useState","isLoading","setIsLoading","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","setSearchIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","searchQueryCounter","setSearchQueryCounter","SEARCH_PARAMS","message","JSON","stringify","parentURL","document","referrer","targetOrigin","indexOf","parent","postMessage","localProduct","mappedProductResults","mappedSearchResults","mappedKeywordResults","undefined","splice","useEffect","addEventListener","e","parse","data","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","productName","reply","received","searchParams","URL","get","split","current","focus","scrollTop","onClick","target","contains","id","removeEventListener","onEscape","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","suggestions","console","log","clearTimeout","allLinks","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","type","placeholder","autoComplete","tabIndex","isQuiet","Close","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","to","origin","title","descriptions","entries","optn","matchedWords","content","sort","a","b","substring","href","dangerouslySetInnerHTML","__html","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","isSelected","checked","keywordResult","selectedKeyword","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}