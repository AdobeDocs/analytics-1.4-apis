{"version":3,"file":"379b34f3-074ea0c73fbe861faf60.js","mappings":"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","sources":["webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst searchSuggestions = async (algolia, query, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, path, _highlightResult }) => {\n    let urlPath = ''\n    if (path) {\n      // console.log(path);\n      urlPath = path;\n    } else {\n      // console.log(url);\n      if (url.includes('https://developer.adobe.com')) {\n        urlPath = url.replace('https://developer.adobe.com', '');\n      } else {\n        urlPath = url;\n      }\n    }\n\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({ algolia, indexAll, indexPrefix, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      } else {\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      }\n\n      const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (isIFramed) {\n\n      window.addEventListener(\"message\", (e) => {\n        const message = JSON.parse(e.data);\n        if (message.localPathName) {\n          let localPathName = message.localPathName;\n          if (localPathName !== \"/\") {\n            // make sure path name has a slash at start/end to match path-prefix format \n            if (!localPathName.startsWith('/')) { localPathName = `/${localPathName}` }\n            if (!localPathName.endsWith('/')) { localPathName = `${localPathName}/` }\n            const localProduct = indexAll.find(product => product.productIndices.some(idx => {\n              return localPathName.startsWith(idx.indexPathPrefix);\n            }));\n\n            if (localProduct?.productName) {\n              setSearchIndex([localProduct.productName, ...searchIndex]);\n            }\n          }\n\n          const reply = JSON.stringify({ received: message.localPathName });\n          parent.postMessage(reply, \"*\");\n        }\n      });\n    };\n\n    /* Prepare list of existing indices by cross referencing Algolia */\n\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => {\n      return indexPrefix ? `${indexPrefix}-${indexName}` : indexName\n    });\n\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n\n  }, [])\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n        const searchClose = document.getElementById(\"aio-Search-close\");\n        searchClose ? searchClose.focus() : \"\";\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  useEffect(() => {\n    // simple debouncing strategy for search queries while user is typing\n    const timeOutId = setTimeout(() => debounceCallback(), 500);\n    const debounceCallback = async () => {\n      if (searchQuery.length && !searchResults.length) {\n        setShowClear(true);\n\n        const suggestions = await searchSuggestions(algolia, searchQuery, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices);\n        setSearchQueryCounter(searchQueryCounter + 1);\n        console.log('Total search queries counted is:', searchQueryCounter);\n\n        if (suggestions?.results?.length) {\n          const results = [];\n          suggestions.results.forEach(({ hits }) => {\n            mapSearchResults(hits, results);\n          });\n          setSearchSuggestionResults(results);\n\n          if (!searchResults.length) {\n            setShowSearchResults(false);\n          }\n        } else {\n          setSearchSuggestionResults([]);\n        }\n\n        setIsSuggestionsOpen(true);\n      } else {\n        setShowClear(false);\n        setIsSuggestionsOpen(false);\n      }\n    }\n\n    return () => clearTimeout(timeOutId);\n\n  }, [searchQuery])\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          const allLinks = suggestionsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          const allLinks = searchResultsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n    }, [searchSuggestionResults, searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-40);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                  &:focus{\n                    border: 2px solid #007aff !important;\n                    border-radius: 15% !important;\n                  }\n                `}\n                tabIndex=\"0\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const descriptions = Object.entries(searchSuggestion._highlightResult).filter(optn => {\n                    return optn[1].matchedWords.length > 0\n                  });\n                  let content = \"\";\n                  if (descriptions.length > 1) {\n                    descriptions.sort((a, b) => {\n                      return a[1].value.length > b[1].value.length ? -1 : 1;\n                    });\n                    content = descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length ? descriptions[0][1]?.value : descriptions[1][1]?.value;\n                  } else {\n                    content = descriptions[0][1]?.value ? descriptions[0][1]?.value : \"\";\n                  }\n\n                  content = content.substring(0, 250);\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 30%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 50%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        `}>{keyword}</span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const descriptions = Object.entries(searchResult._highlightResult).filter(optn => optn[1].matchedWords.length > 0);\n                    let content = \"\";\n                    if (descriptions.length > 1) {\n                      descriptions.sort((a, b) => {\n                        return a[1].value.length > b[1].value.length ? -1 : 1;\n                      });\n                      content = descriptions[0][1]?.value?.length > descriptions[1][1]?.value?.length ? descriptions[0][1]?.value : descriptions[1][1]?.value;\n                    } else {\n                      content = descriptions[0][1]?.value ? descriptions[0][1]?.value : \"\";\n                    }\n\n                    content = content.substring(0, 250);\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","searchSuggestions","_ref19","_asyncToGenerator","_regeneratorRuntime","_callee","algolia","query","indexPrefix","searchIndex","indexAll","existingIndices","setExistingIndices","queries","indexes","algoliaIndices","algoliaIndexNames","localIndexList","filteredIndexes","searchProductNames","localProductIndexes","_context","prev","next","length","listIndices","sent","Object","values","items","map","_ref20","prod","productIndices","flat","_ref21","indexName","filter","localIndex","includes","product","getIndexesFromProduct","concat","_toConsumableArray","index","forEach","push","hitsPerPage","Math","ceil","attributesToRetrieve","multipleQueries","abrupt","stop","_x","_x2","_x3","_x4","_x5","_x6","_x7","apply","arguments","searchIndexes","_ref22","_callee2","selectedIndex","keywords","_context2","_ref23","_ref24","selected","facets","filters","keyword","join","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","mapSearchResults","hits","results","_ref25","objectID","url","path","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","_results$push","found","_ref","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","Search","_ref26","showSearch","setShowSearch","searchButtonId","isIFramed","_useState","useState","isLoading","setIsLoading","_useState2","searchQuery","setSearchQuery","_useState3","oldSearchQuery","setOldSearchQuery","_useState4","setSelectedIndex","_useState5","setSearchIndex","_useState6","_useState7","selectedKeywords","setSelectedKeywords","_useState8","showSearchResults","setShowSearchResults","_useState9","isFocused","setIsFocused","_useState10","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","_useState11","searchSuggestionResults","setSearchSuggestionResults","_useState12","searchResults","setSearchResults","_useState13","productResults","setProductResults","_useState14","keywordResults","setKeywordResults","_useState15","isSuggestionsOpen","setIsSuggestionsOpen","_useState16","triggerSearch","setTriggerSearch","_useState17","searchQueryCounter","setSearchQueryCounter","_ref27","_callee3","_search2","_search2$results","_search","message","targetOrigin","localProduct","mappedProductResults","mappedSearchResults","mappedKeywordResults","_context3","SEARCH_PARAMS","JSON","stringify","parentURL","document","referrer","indexOf","parent","postMessage","_ref28","undefined","splice","useEffect","_callee4","_context4","addEventListener","e","parse","data","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","productName","reply","received","_ref30","_ref31","searchParams","URL","get","split","current","focus","scrollTop","onClick","_ref32","target","contains","id","removeEventListener","onEscape","_ref33","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","_ref34","_callee5","_suggestions$results","suggestions","_context5","console","log","_ref35","clearTimeout","allLinks","querySelectorAll","link","___EmotionJSX","React","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","_ref36","_callee6","event","_context6","preventDefault","_x16","classNames","Magnify","onFocus","onBlur","onKeyDown","_ref37","querySelector","onChange","_ref38","_callee7","_context7","_x17","type","placeholder","autoComplete","ActionButton","tabIndex","isQuiet","Close","Popover","isOpen","Menu","_ref39","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","_searchSuggestion$_hi","_descriptions$0$","_descriptions$0$$valu","_descriptions$1$","_descriptions$1$$valu","_descriptions$0$2","_descriptions$1$2","_descriptions$0$3","_descriptions$0$4","to","origin","title","descriptions","entries","optn","matchedWords","content","sort","a","b","substring","MenuItem","href","dangerouslySetInnerHTML","__html","ProgressCircle","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","Checkbox","isSelected","checked","keywordResult","selectedKeyword","searchResult","_searchResult$_highli","_descriptions$0$5","_descriptions$0$5$val","_descriptions$1$3","_descriptions$1$3$val","_descriptions$0$6","_descriptions$1$4","_descriptions$0$7","_descriptions$0$8","AnchorLink","variant","xmlns","viewBox","d"],"sourceRoot":""}