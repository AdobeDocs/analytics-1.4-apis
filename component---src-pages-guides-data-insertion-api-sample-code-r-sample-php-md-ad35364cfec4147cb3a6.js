(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[81117],{32072:function(e,n,t){"use strict";t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return l}});var r=t(22122),o=t(19756),a=(t(15007),t(64983)),s=t(99536),i=["components"],p={},m={_frontmatter:p},d=s.Z;function l(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.mdx)(d,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"data-insertion-sample-php"},"Data Insertion Sample ","(","PHP",")"),(0,a.mdx)("p",null,"This PHP sample illustrates how to connect to Adobe data collection servers and record a page view."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'<?/\n **\n * @file\n * Example code to send one pageview to Omniture via the Data Insertion API\n *   and check for a valid response.\n * \n * @author Omniture, an Adobe Company <clientcare@omniture.com>\n * @copyright 2007-2010 Adobe Systems, Inc. All Rights Reserved.\n */ \n// NOTE: Contact an ClientCare to identify the correct namespace and domain for your company.\n\n$namespace = "namespace";\n$domain    = "sc.omtrdc.net";\n$host      = $namespace.".".$domain;\n$rsid      = "rsid";\n$vid       = "";\n$ip        = "10.0.0.1";\n$page_url  = "";\n$pageName  = "Test Page"; \n$timestamp = "2008-10-21T17:33:22-07";\n\n// create opening XML tags\n$xml  = "<?xml version=1.0 encoding=UTF-8?>\\n";\n$xml .= "<request>\\n";\n$xml .= " <scXmlVer>1.0</scXmlVer>\\n"; \n\n// add tags for required elements\n$xml .= $rsid ? " <reportSuiteID>$rsid</reportSuiteID>\\n":""; \n\n//The timestamp line of code can only be used when an Omniture representitive has enabled timestamp support for your organization.\n$xml .= $timestamp ? " <timestamp>$timestamp</timestamp>\\n":"";\n\n$xml .= $vid ? " <visitorID>$vid</visitorID>\\n":"";\n$xml .= $ip ? " <ipAddress>$ip</ipAddress>\\n":""; \n\n$xml .= $page_url ? " <pageURL>$page_url</pageURL>\\n":"";\n$xml .= $pageName ? " <pageName>$pageName</pageName>\\n":""; \n\n// close the XML request\n$xml .= "</request>\\n"; \n\n// Create POST, Host and Content-Length headers\n$head = "POST /b/ss//6 HTTP/1.0\\n";\n$head .= "Host: $host\\n";\n$head .= "Content-Length: ".(string)strlen($xml)."\\n\\n"; \n\n// combine the head and XML\n$request = $head.$xml; \n\n$fp=fsockopen($host,80,$errno,$errstr,30); \n// Use this function in place of the call above if you have PHP 4.3.0 or\n//   higher and have compiled OpenSSL into the build.\n//\n// $fp = pfsockopen("ssl://".$host, 443, $errno, $errstr);\n// \nif( $fp ) { \n\n// send data\nfwrite($fp,$request); \n\n// get response\n$response="";\nwhile( !feof($fp) ){\n    $response .= fgets($fp,1028);\n}\nfclose($fp); \n\n// display results\necho "RESULTS:\\n";\nprint_r($response);\necho "\\n"; \n\n// check for errors\nif( preg_match("/status\\>FAILURE\\<\\/status/im",$response) ){\n    /*\n    * TODO:\n    * write $request and $response to log file for investigation\n    * and retries\n    */\n    echo "<h1>Failure</h1>\\n";\n    echo "<p>Note the reason tag in the response, fix and try again.</h1>\\n";\n}\n} else {\necho "<H1>Couldn\'t open port to Analytics servers</H1>\\n"; \nif(!$rsid){\n    echo "<H4>No report suite specified</H4>\\n";\n} else {\n    echo "<p>$errstr ($errno)</p>\\n";\n    /*\n    * TODO:\n    * write $request and $errstr to log file for investigation\n    * and retries\n    */\n}\n}\n?>\n')),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"Parent topic:")," ",(0,a.mdx)("a",{parentName:"p",href:"../sample_code/c_sample_code.md"},"Sample Code")))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-data-insertion-api-sample-code-r-sample-php-md-ad35364cfec4147cb3a6.js.map