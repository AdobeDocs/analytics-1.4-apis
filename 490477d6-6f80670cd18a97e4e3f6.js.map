{"version":3,"file":"490477d6-6f80670cd18a97e4e3f6.js","mappings":"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","sources":["webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/OldProductCardGrid/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// This is the old version of ProductCardGrid before DC merge.\n\nimport React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport { Checkbox } from '../Checkbox';\nimport { Picker } from '../Picker';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/card';\nimport { Image } from '../Image';\nimport { DESKTOP_SCREEN_WIDTH } from '../../utils';\nimport PropTypes from 'prop-types';\n\nconst filterByClouds = (products, cloudFilter, additionalFilter, setFilteredProducts) => {\n  const filteredProducts = products.filter(({ cloud }) => cloudFilter.some((selectedCloud) => cloud === selectedCloud));\n  const selectedFilter = additionalFilters.find(({ value }) => value === additionalFilter);\n\n  setFilteredProducts(selectedFilter.filter(filteredProducts, selectedFilter.ids));\n};\n\nconst filterByName = (products) => products.sort(({ name: nameA }, { name: nameB }) => nameA.localeCompare(nameB));\n\nconst filterByLastUpdated = (products) =>\n  products.sort(({ lastUpdated: lastUpdatedA }, { lastUpdated: lastUpdatedB }) => {\n    if (new Date(lastUpdatedB) > new Date(lastUpdatedA)) {\n      return 1;\n    } else if (new Date(lastUpdatedB) < new Date(lastUpdatedA)) {\n      return -1;\n    }\n    return 0;\n  });\n\nconst filterById = (products, ids = []) => {\n  const filteredProducts = [];\n  ids.forEach((productId) => {\n    const product = products.find(({ id }) => id === productId);\n    if (product) {\n      filteredProducts.push(product);\n    }\n  });\n  return filteredProducts;\n};\n\nconst additionalFilters = [\n  {\n    title: 'Last updated',\n    value: 'last_updated',\n    filter: filterByLastUpdated\n  },\n  {\n    title: 'Name',\n    value: 'name',\n    filter: filterByName\n  },\n  {\n    title: 'Custom',\n    value: 'id',\n    filter: filterById\n  }\n];\n\nconst OldProductCardGrid = ({\n                           clouds = [],\n                           products = [],\n                           interaction = false,\n                           orderBy = 'last_updated',\n                           filterByCloud = [],\n                           filterByIds = []\n                         }) => {\n  if (filterByIds.length) {\n    orderBy = 'id';\n  }\n\n  const defaultFilter = additionalFilters.find(({ value }) => value === orderBy);\n  defaultFilter.ids = filterByIds;\n\n  const [additionalFilter, setAdditionalFilter] = useState(defaultFilter.value);\n  const [filteredProducts, setFilteredProducts] = useState(defaultFilter.filter(products, defaultFilter.ids));\n  const [cloudFilter, setCloudFilter] = useState(filterByCloud);\n\n  useEffect(() => {\n    filterByClouds(products, cloudFilter.length ? cloudFilter : clouds, additionalFilter, setFilteredProducts);\n  }, [cloudFilter, additionalFilter]);\n\n  const height = 'calc(var(--spectrum-global-dimension-size-4600) - var(--spectrum-global-dimension-size-500))';\n  const width = 'calc(var(--spectrum-global-dimension-size-4600) - var(--spectrum-global-dimension-size-800))';\n\n  return (\n    <section\n      className={`spectrum--light`}\n      css={css`\n        max-width: ${DESKTOP_SCREEN_WIDTH};\n        margin: var(--spectrum-global-dimension-size-400) auto;\n      `}>\n      {interaction && (\n        <div\n          css={css`\n            display: flex;\n            align-items: center;\n            height: var(--spectrum-global-dimension-size-800);\n            justify-content: flex-end;\n            margin-right: var(--spectrum-global-dimension-size-400);\n          `}>\n          <Picker\n            isQuiet\n            items={additionalFilters.slice(0, 2).map((filter) => {\n              return filter.value === orderBy\n                ? {\n                  selected: true,\n                  ...filter\n                }\n                : filter;\n            })}\n            aria-label=\"Filter by name or last updated product\"\n            onChange={(index) => {\n              setAdditionalFilter(additionalFilters[index].value);\n            }}\n          />\n        </div>\n      )}\n      <div\n        css={css`\n          display: flex;\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            align-items: flex-start;\n            flex-wrap: wrap;\n          }\n        `}>\n        {interaction && (\n          <div\n            css={css`\n              display: flex;\n              align-items: flex-end;\n              width: var(--spectrum-global-dimension-size-3000);\n              flex-direction: column;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by\n              </h4>\n\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  display: flex;\n                  flex-direction: column;\n                `}>\n                {clouds.map((cloud, i) => (\n                  <Checkbox\n                    key={i}\n                    value={cloud}\n                    onChange={(checked) => {\n                      if (checked) {\n                        setCloudFilter([...cloudFilter, cloud]);\n                      } else {\n                        setCloudFilter(cloudFilter.filter((filter) => filter !== cloud));\n                      }\n                    }}\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    {cloud}\n                  </Checkbox>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n        <div\n          css={css`\n            flex: 1;\n          `}>\n          <div\n            css={css`\n              display: grid;\n              grid-template-columns: repeat(auto-fit, ${width});\n              grid-auto-rows: ${height};\n              justify-content: center;\n              gap: var(--spectrum-global-dimension-size-400);\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                margin-top: var(--spectrum-global-dimension-size-400);\n                display: flex;\n                flex-wrap: wrap;\n              }\n            `}>\n            {filteredProducts.map((product) => (\n              <div\n                key={product.id}\n                role=\"figure\"\n                tabIndex=\"0\"\n                className=\"spectrum-Card spectrum-Card--sizeM\"\n                css={css`\n                  width: ${width};\n                  height: ${height};\n\n                  &:hover {\n                    border-color: var(--spectrum-global-color-gray-200);\n                  }\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    width: 0;\n                  }\n                `}>\n                <div\n                  className=\"spectrum-Card-body\"\n                  css={css`\n                    height: var(--spectrum-global-dimension-size-3000);\n                    overflow: auto;\n                    text-align: left;\n                  `}>\n                  <div>\n                    {product.icon && (\n                      <div\n                        css={css`\n                          height: var(--spectrum-global-dimension-size-600);\n                          width: var(--spectrum-global-dimension-size-600);\n                          margin-bottom: var(--spectrum-global-dimension-size-200);\n                        `}>\n                        <Image src={product.icon} aria-hidden=\"true\" alt=\"\" />\n                      </div>\n                    )}\n                  </div>\n                  <div\n                    className=\"spectrum-Card-header spectrum-Heading spectrum-Heading--sizeXXS\"\n                    css={css`\n                      margin-top: 0 !important;\n                      margin-bottom: var(--spectrum-global-dimension-size-100) !important;\n                    `}>\n                    <div\n                      className=\"spectrum-Card-title\"\n                      css={css`\n                        font-size: var(--spectrum-global-dimension-size-200);\n                      `}>\n                      <strong>{product.name}</strong>\n                    </div>\n                  </div>\n                  <div\n                    className=\"spectrum-Card-content spectrum-Body spectrum-Body--sizeS\"\n                    css={css`\n                      height: auto;\n                      margin-bottom: 0 !important;\n                    `}>\n                    {product.description}\n                  </div>\n                </div>\n                <div className=\"spectrum-Card-footer\">\n                  <div\n                    css={css`\n                      display: flex;\n                      justify-content: flex-end;\n                      flex-wrap: wrap;\n                      --gap: var(--spectrum-global-dimension-size-200);\n                      margin: calc(-1 * var(--gap)) 0 0 calc(-1 * var(--gap));\n                      width: calc(100% + var(--gap));\n\n                      @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                        justify-content: center;\n                      }\n                    `}>\n                    {product.discover && (\n                      <div\n                        css={css`\n                          margin: var(--gap) 0 0 var(--gap);\n                        `}>\n                        <AnchorButton href={product.discover} variant=\"secondary\" style=\"outline\">\n                          <span class=\"spectrum-Button-label\">Learn more</span>\n                        </AnchorButton>\n                      </div>\n                    )}\n\n                    {product.docs && (\n                      <div\n                        css={css`\n                          margin: var(--gap) 0 0 var(--gap);\n                        `}>\n                        <AnchorButton href={product.docs} variant=\"accent\" style=\"outline\">\n                          <span class=\"spectrum-Button-label\">View docs</span>\n                        </AnchorButton>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nOldProductCardGrid.propTypes = {\n  clouds: PropTypes.array,\n  products: PropTypes.array,\n  orderBy: PropTypes.string,\n  filterBy: PropTypes.array,\n  interaction: PropTypes.bool\n};\n\nexport { OldProductCardGrid };"],"names":["additionalFilters","title","value","filter","products","sort","lastUpdatedA","lastUpdated","lastUpdatedB","Date","nameA","name","nameB","localeCompare","ids","filteredProducts","forEach","productId","product","find","id","push","OldProductCardGrid","clouds","interaction","orderBy","filterByCloud","filterByIds","length","defaultFilter","useState","additionalFilter","setAdditionalFilter","setFilteredProducts","cloudFilter","setCloudFilter","useEffect","cloud","some","selectedCloud","selectedFilter","filterByClouds","height","width","className","css","DESKTOP_SCREEN_WIDTH","isQuiet","items","slice","map","selected","onChange","index","i","key","checked","role","tabIndex","icon","src","alt","description","discover","A","href","variant","style","class","docs"],"sourceRoot":""}