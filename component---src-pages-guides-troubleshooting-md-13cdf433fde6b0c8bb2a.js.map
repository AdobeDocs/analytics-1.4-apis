{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/troubleshooting.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,6CADR,+CAGA,mBAAG,eAAIC,WAAW,KAAf,qHACH,6IACA,oBACE,eAAIA,WAAW,MAAf,8CACA,eAAIA,WAAW,MAAf,8CACA,eAAIA,WAAW,MAAf,gCACA,eAAIA,WAAW,MAAf,YAAgC,mBAAQA,WAAW,MAAnB,YAAhC,cAEF,eACE,GAAM,wCADR,0CAGA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,iBAAoC,cAAGA,WAAW,IAC9C,KAAQ,aADwB,sBAApC,sEAIF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kFAAqG,eAAIA,WAAW,KAAf,YAArG,QAAiJ,eAAIA,WAAW,KAAf,YAAjJ,+CAAoO,cAAGA,WAAW,IAC9O,KAAQ,kCADwN,kBAApO,QAKJ,eACE,GAAM,4CADR,6CAGA,mMACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,mMAIL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,kIAQL,4CAA6B,cAAGA,WAAW,IACvC,KAAQ,2BADiB,gCAA7B,oDAGA,eACE,GAAM,8BADR,+BAGA,8CAA+B,eAAIA,WAAW,KAAf,YAA/B,QAA2E,eAAIA,WAAW,KAAf,YAA3E,sJAAqQ,uBAAYA,WAAW,KAAvB,qBAArQ,+PACA,eACE,GAAM,2BADR,4BAGA,mCAAoB,mBAAQA,WAAW,KAAnB,YAApB,gSAAgW,cAAGA,WAAW,IAC1W,KAAQ,wCADoV,iCAAhW,2BAOJJ,EAAWK,gBAAiB","file":"component---src-pages-guides-troubleshooting-md-13cdf433fde6b0c8bb2a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tips-for-using-14-api-required-parameters\"\n    }}>{`Tips for using 1.4 API Required Parameters`}</h1>\n    <p><em parentName=\"p\">{`Note: It is strongly recommended to use Adobe Analytics 2.0 APIs whenever possible to simplify parameter usage.`}</em></p>\n    <p>{`When making calls to endpoints of 1.4 Analytics APIs, consider the following tips for determining required parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Refer to 1.4 API parameter documentation.`}</li>\n      <li parentName=\"ul\">{`Refer to error descriptions in responses.`}</li>\n      <li parentName=\"ul\">{`Review your data structure.`}</li>\n      <li parentName=\"ul\">{`Use the `}<strong parentName=\"li\">{`Validate`}</strong>{` method.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"refer-to-14-parameters-documentation\"\n    }}>{`Refer to 1.4 parameters documentation`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Refer to the `}<a parentName=\"p\" {...{\n            \"href\": \"../api.md\"\n          }}>{`1.4 API Swagger UI`}</a>{` for indications of required parameters with methods and models.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The conventional 1.4 API documentation also often indicates if a parameter is `}<em parentName=\"p\">{`required`}</em>{` or `}<em parentName=\"p\">{`optional`}</em>{` in its description, as in the case of the `}<a parentName=\"p\" {...{\n            \"href\": \"admin-api/data_types/r_prop.md\"\n          }}>{`prop data type`}</a>{`.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"refer-to-error-descriptions-in-responses\"\n    }}>{`Refer to error descriptions in responses`}</h2>\n    <p>{`If a required parameter is missing, an error message appears in the response. For example, the following request results in an error message indicating a missing parameter:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -X POST \"https://api.omniture.com/admin/1.4/rest/?method=Company.GetTrackingServer\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{ \\\\\"rsid\\\\\": \\\\\"string\\\\\"}\"\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"error\": \"Bad Request\",\n    \"error_description\": \"Report suite is a required parameter\",\n    \"error_uri\": null\n}\n`}</code></pre>\n    <p>{`You can also refer to `}<a parentName=\"p\" {...{\n        \"href\": \"reporting-api/errors.md\"\n      }}>{`Analytics Report Error Codes`}</a>{` to help troubleshoot parameter error messages.`}</p>\n    <h2 {...{\n      \"id\": \"review-your-data-structure\"\n    }}>{`Review your data structure`}</h2>\n    <p>{` Whether a parameter is `}<em parentName=\"p\">{`required`}</em>{` or `}<em parentName=\"p\">{`optional`}</em>{` often depends on your data structure. Different data structures require different parameters when making calls. For example, if you consider the `}<inlineCode parentName=\"p\">{`reportDescription`}</inlineCode>{` type, some data structure parameters are optional, but may be required if certain other optional parameters are used. Because you understand your data structure best, you can often determine if a parameter is required by reviewing its chain of data.`}</p>\n    <h2 {...{\n      \"id\": \"use-the-validate-method\"\n    }}>{`Use the Validate method`}</h2>\n    <p>{`Although the `}<strong parentName=\"p\">{`Validate`}</strong>{` method does not specifically identify parameter errors, it can help determine if a request is valid before generating an entire report. If your request is determined invalid by this method, one of the possible causes may be a missing or incorrectly specified parameter. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"reporting-api/methods/r_Validiate.md\"\n      }}>{`Validate method documentation`}</a>{` for more information.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}