{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_Create_the_Data_Source.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iCADR,mCAGA,2PACA,mEAAoD,uBAAYC,WAAW,KAAvB,6BAApD,oJACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,iBAGA,eAAIA,WAAW,KACb,MAAS,MADX,8CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,mBAGA,eAAIA,WAAW,KACb,MAAS,MADX,oEAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,uBAGA,eAAIA,WAAW,KACb,MAAS,MADX,uCAE0C,uBAAYA,WAAW,MAAvB,kBAF1C,gDAEyJ,uBAAYA,WAAW,MAAvB,mBAFzJ,uEAEgS,uBAAYA,WAAW,MAAvB,eAFhS,uFAEyb,uBAAYA,WAAW,MAAvB,gBAFzb,0FAEslB,uBAAYA,WAAW,MAAvB,kBAFtlB,6EAEouB,uBAAYA,WAAW,MAAvB,sBAFpuB,6HAMN,uIACA,kMACA,mBAAG,mBAAQA,WAAW,KAAnB,SAAH,yaACA,wGACA,qSACA,8UACA,mBAAG,mBAAQA,WAAW,KAAnB,SAAH,+ZACA,kEAAmD,uBAAYA,WAAW,KAAvB,iBAAnD,+BAA2I,uBAAYA,WAAW,KAAvB,sBAA3I,uBACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,yuBAqBL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,y6CAqCL,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,8BAD6C,+BAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-create-the-data-source-md-c8a5da3e460145dfe0f6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-1-create-the-data-source\"\n    }}>{`Step 1: Create the Data Source`}</h1>\n    <p>{`The Adobe Experience Cloud has many data source types. In this demo application, you create a generic data source because the offline sales revenue data for the Purchase by Phone event does not fit a standard system data source.`}</p>\n    <p>{`The code at the end of this section uses the `}<inlineCode parentName=\"p\">{`DataSource.SetupGeneric()`}</inlineCode>{` method to create the generic data source for transaction IDs. This method requires you to specify the parameters shown in the following table.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`dataSourceID`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set the value to 0 for a new data source`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`dataSourceType`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set the value to 32 for a generic data source - Transaction ID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`dataSourceSettings`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Includes the key/value pairs for:  `}<inlineCode parentName=\"td\">{`dataSourceName`}</inlineCode>{` `}{`(`}{`string`}{`)`}{`: Name of data source  `}<inlineCode parentName=\"td\">{`dataSourceEmail`}</inlineCode>{` `}{`(`}{`string`}{`)`}{`: Email address for notifications and alerts  `}<inlineCode parentName=\"td\">{`metricNames`}</inlineCode>{` `}{`(`}{`string`}{`_`}{`array`}{`)`}{`: Metric`}{`(`}{`s`}{`)`}{` to include in data source `}<inlineCode parentName=\"td\">{`metricEvents`}</inlineCode>{` `}{`(`}{`string`}{`_`}{`array`}{`)`}{`: Event`}{`(`}{`s`}{`)`}{` to associate with each metric `}<inlineCode parentName=\"td\">{`dimensionNames`}</inlineCode>{` `}{`(`}{`string`}{`_`}{`array`}{`)`}{`: Dimensions to include in data source  `}<inlineCode parentName=\"td\">{`dimensionVariables`}</inlineCode>{` `}{`(`}{`string`}{`_`}{`array`}{`)`}{`: Dimension variables such as eVars and campaigns, to associated with each dimension`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Dimensions and metrics are related values that define the actual data that you will import into the data source.`}</p>\n    <p>{`You can think of a dimension as one of the breakdown reports that Analytics tracks in the online analytics data. Refer to the note that follows to find the dimension name.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` The name of the dimension must exactly match what is stored in the report suite. The easiest way to get this information is by downloading the optional data template using the Data Source Activation Wizard. All of the headers in the report suite are part of the tab-delimited template file. For your convenience, the template is available in the solution files in the Downloads section at the beginning of this article.`}</p>\n    <p>{`The dimension in this JJ. Esquire demo application that we are using is Products.`}</p>\n    <p>{`A metric is simply the data points that you are tracking in the dimension. In the JJ. Esquire demo application, you could say that you are tracking the page views metric of each product. For this article, you will batch upload the offline revenue metric of each product.`}</p>\n    <p>{`Every metric is associated with an event. For instance, a product view on a page is associated with a product view event. In this JJ. Esquire demo application, the offline revenue metric is associated with an event. You will see this event referenced in the code as “event 2”, which is a Analytics custom event.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` If you want a friendly name to represent your custom events, you can create the friendly name and type in the Admin Console within Analytics UI. A friendly name is easier to read in reports. Navigate to Admin Console `}{`>`}{` Report Suite `}{`>`}{` Edit Settings `}{`>`}{` Conversion `}{`>`}{` Success Events. Select event2 and give it a name of Offline Revenue. Change the type to Currency and save the information.`}</p>\n    <p>{`In the following code, you can see that the `}<inlineCode parentName=\"p\">{`dimensionName`}</inlineCode>{` value is Products and the `}<inlineCode parentName=\"p\">{`dimensionVariables`}</inlineCode>{` value is Product.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.SetupGeneric - creates a new DataSource (type Generic) */ \n$rsId = 'â \n$dsId = ''; // DataSource Id \n$email = 'â \n$dsName = 'â \n$dsType = '32'; // Identifier for Generic Summary type of DataSources with Transaction ID\n$dsSettings = array( \n  'dataSourceName'=>$dsName, \n  'dataSourceEmail'=>$email, \n  'metricNames'=>array('Offline Revenue'), \n  'metricEvents'=>array('event 2'), \n  'dimensionNames'=>array('Products'), \n  'dimensionVariables'=>array('Product') \n); \n\n$result = sendRequest('DataSource.SetupGeneric', array('reportSuiteID'=>$rsId, 'dataSourceID'=>$dsId,  'dataSourceType'=>$dsType, 'dataSourceSettings'=>$dsSettings ) );\n$dsId = $result['dataSourceID']; \nvar_dump($result); \nsleep(4); \n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* 0 created a new data source */ \nint dataSourceID = 0; \nString dataSourceName = \"\"; \nint dataSourceType = 32; // Identifier for Generic Summary type of DataSources with Transaction ID \n\nDs_generic_settings dataSourceSettings = new Ds_generic_settings(); \ndataSourceSettings.setDataSourceName(dataSourceName); \ndataSourceSettings.setDataSourceEmail(\"\"); \n\n/* Define the metric name */ \nString[] metricNames = new String[1]; \nmetricNames[0] = \"Offline Revenue\"; \ndataSourceSettings.setMetricNames(metricNames); \n\n/* Define the metric event */ \nString[] metricEvents = new String[1]; \nmetricEvents[0] = \"event 2\"; \ndataSourceSettings.setMetricEvents(metricEvents); \n\n/* Define the dimentsion name */ \nString[] dimensionNames = new String[1]; \ndimensionNames[0] = \"Products\"; \ndataSourceSettings.setDimensionNames(dimensionNames); \n\n/* Define the dimension variable */ \nString[] dimensionVariables = new String[1]; \ndimensionVariables[0] = \"Product\"; \ndataSourceSettings.setDimensionVariables(dimensionVariables); \n\n/* DataSource.SetupGeneric - creates a new DataSource (type Generic) */ \nDs_setup_result responsedataSourceSetupGeneric = \nport.dataSourceSetupGeneric(dataSourceID, dataSourceSettings, dataSourceType, reportSuiteID); \n\nSystem.out.println(\"The ID of the new Data Source is: \n\"+responsedataSourceSetupGeneric.getDataSourceID()); \ndataSourceID = responsedataSourceSetupGeneric.getDataSourceID();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_Data_Sources_Overview.md\"\n      }}>{`Data Sources API Tutorial`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}