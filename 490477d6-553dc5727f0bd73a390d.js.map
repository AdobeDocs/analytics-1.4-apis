{"version":3,"file":"490477d6-553dc5727f0bd73a390d.js","mappings":"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","sources":["webpack://analytics-1.4-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/OldProductCardGrid/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// This is the old version of ProductCardGrid before DC merge.\n\nimport React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport { Checkbox } from '../Checkbox';\nimport { Picker } from '../Picker';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/card';\nimport { Image } from '../Image';\nimport { DESKTOP_SCREEN_WIDTH } from '../../utils';\nimport PropTypes from 'prop-types';\n\nconst filterByClouds = (products, cloudFilter, additionalFilter, setFilteredProducts) => {\n  const filteredProducts = products.filter(({ cloud }) => cloudFilter.some((selectedCloud) => cloud === selectedCloud));\n  const selectedFilter = additionalFilters.find(({ value }) => value === additionalFilter);\n\n  setFilteredProducts(selectedFilter.filter(filteredProducts, selectedFilter.ids));\n};\n\nconst filterByName = (products) => products.sort(({ name: nameA }, { name: nameB }) => nameA.localeCompare(nameB));\n\nconst filterByLastUpdated = (products) =>\n  products.sort(({ lastUpdated: lastUpdatedA }, { lastUpdated: lastUpdatedB }) => {\n    if (new Date(lastUpdatedB) > new Date(lastUpdatedA)) {\n      return 1;\n    } else if (new Date(lastUpdatedB) < new Date(lastUpdatedA)) {\n      return -1;\n    }\n    return 0;\n  });\n\nconst filterById = (products, ids = []) => {\n  const filteredProducts = [];\n  ids.forEach((productId) => {\n    const product = products.find(({ id }) => id === productId);\n    if (product) {\n      filteredProducts.push(product);\n    }\n  });\n  return filteredProducts;\n};\n\nconst additionalFilters = [\n  {\n    title: 'Last updated',\n    value: 'last_updated',\n    filter: filterByLastUpdated\n  },\n  {\n    title: 'Name',\n    value: 'name',\n    filter: filterByName\n  },\n  {\n    title: 'Custom',\n    value: 'id',\n    filter: filterById\n  }\n];\n\nconst OldProductCardGrid = ({\n                           clouds = [],\n                           products = [],\n                           interaction = false,\n                           orderBy = 'last_updated',\n                           filterByCloud = [],\n                           filterByIds = []\n                         }) => {\n  if (filterByIds.length) {\n    orderBy = 'id';\n  }\n\n  const defaultFilter = additionalFilters.find(({ value }) => value === orderBy);\n  defaultFilter.ids = filterByIds;\n\n  const [additionalFilter, setAdditionalFilter] = useState(defaultFilter.value);\n  const [filteredProducts, setFilteredProducts] = useState(defaultFilter.filter(products, defaultFilter.ids));\n  const [cloudFilter, setCloudFilter] = useState(filterByCloud);\n\n  useEffect(() => {\n    filterByClouds(products, cloudFilter.length ? cloudFilter : clouds, additionalFilter, setFilteredProducts);\n  }, [cloudFilter, additionalFilter]);\n\n  const height = 'calc(var(--spectrum-global-dimension-size-4600) - var(--spectrum-global-dimension-size-500))';\n  const width = 'calc(var(--spectrum-global-dimension-size-4600) - var(--spectrum-global-dimension-size-800))';\n\n  return (\n    <section\n      className={`spectrum--light`}\n      css={css`\n        max-width: ${DESKTOP_SCREEN_WIDTH};\n        margin: var(--spectrum-global-dimension-size-400) auto;\n      `}>\n      {interaction && (\n        <div\n          css={css`\n            display: flex;\n            align-items: center;\n            height: var(--spectrum-global-dimension-size-800);\n            justify-content: flex-end;\n            margin-right: var(--spectrum-global-dimension-size-400);\n          `}>\n          <Picker\n            isQuiet\n            items={additionalFilters.slice(0, 2).map((filter) => {\n              return filter.value === orderBy\n                ? {\n                  selected: true,\n                  ...filter\n                }\n                : filter;\n            })}\n            aria-label=\"Filter by name or last updated product\"\n            onChange={(index) => {\n              setAdditionalFilter(additionalFilters[index].value);\n            }}\n          />\n        </div>\n      )}\n      <div\n        css={css`\n          display: flex;\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            align-items: flex-start;\n            flex-wrap: wrap;\n          }\n        `}>\n        {interaction && (\n          <div\n            css={css`\n              display: flex;\n              align-items: flex-end;\n              width: var(--spectrum-global-dimension-size-3000);\n              flex-direction: column;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by\n              </h4>\n\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  display: flex;\n                  flex-direction: column;\n                `}>\n                {clouds.map((cloud, i) => (\n                  <Checkbox\n                    key={i}\n                    value={cloud}\n                    onChange={(checked) => {\n                      if (checked) {\n                        setCloudFilter([...cloudFilter, cloud]);\n                      } else {\n                        setCloudFilter(cloudFilter.filter((filter) => filter !== cloud));\n                      }\n                    }}\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    {cloud}\n                  </Checkbox>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n        <div\n          css={css`\n            flex: 1;\n          `}>\n          <div\n            css={css`\n              display: grid;\n              grid-template-columns: repeat(auto-fit, ${width});\n              grid-auto-rows: ${height};\n              justify-content: center;\n              gap: var(--spectrum-global-dimension-size-400);\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                margin-top: var(--spectrum-global-dimension-size-400);\n                display: flex;\n                flex-wrap: wrap;\n              }\n            `}>\n            {filteredProducts.map((product) => (\n              <div\n                key={product.id}\n                role=\"figure\"\n                tabIndex=\"0\"\n                className=\"spectrum-Card spectrum-Card--sizeM\"\n                css={css`\n                  width: ${width};\n                  height: ${height};\n\n                  &:hover {\n                    border-color: var(--spectrum-global-color-gray-200);\n                  }\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    width: 0;\n                  }\n                `}>\n                <div\n                  className=\"spectrum-Card-body\"\n                  css={css`\n                    height: var(--spectrum-global-dimension-size-3000);\n                    overflow: auto;\n                    text-align: left;\n                  `}>\n                  <div>\n                    {product.icon && (\n                      <div\n                        css={css`\n                          height: var(--spectrum-global-dimension-size-600);\n                          width: var(--spectrum-global-dimension-size-600);\n                          margin-bottom: var(--spectrum-global-dimension-size-200);\n                        `}>\n                        <Image src={product.icon} aria-hidden=\"true\" alt=\"\" />\n                      </div>\n                    )}\n                  </div>\n                  <div\n                    className=\"spectrum-Card-header spectrum-Heading spectrum-Heading--sizeXXS\"\n                    css={css`\n                      margin-top: 0 !important;\n                      margin-bottom: var(--spectrum-global-dimension-size-100) !important;\n                    `}>\n                    <div\n                      className=\"spectrum-Card-title\"\n                      css={css`\n                        font-size: var(--spectrum-global-dimension-size-200);\n                      `}>\n                      <strong>{product.name}</strong>\n                    </div>\n                  </div>\n                  <div\n                    className=\"spectrum-Card-content spectrum-Body spectrum-Body--sizeS\"\n                    css={css`\n                      height: auto;\n                      margin-bottom: 0 !important;\n                    `}>\n                    {product.description}\n                  </div>\n                </div>\n                <div className=\"spectrum-Card-footer\">\n                  <div\n                    css={css`\n                      display: flex;\n                      justify-content: flex-end;\n                      flex-wrap: wrap;\n                      --gap: var(--spectrum-global-dimension-size-200);\n                      margin: calc(-1 * var(--gap)) 0 0 calc(-1 * var(--gap));\n                      width: calc(100% + var(--gap));\n\n                      @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                        justify-content: center;\n                      }\n                    `}>\n                    {product.discover && (\n                      <div\n                        css={css`\n                          margin: var(--gap) 0 0 var(--gap);\n                        `}>\n                        <AnchorButton href={product.discover} variant=\"secondary\" style=\"outline\">\n                          <span class=\"spectrum-Button-label\">Learn more</span>\n                        </AnchorButton>\n                      </div>\n                    )}\n\n                    {product.docs && (\n                      <div\n                        css={css`\n                          margin: var(--gap) 0 0 var(--gap);\n                        `}>\n                        <AnchorButton href={product.docs} variant=\"accent\" style=\"outline\">\n                          <span class=\"spectrum-Button-label\">View docs</span>\n                        </AnchorButton>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nOldProductCardGrid.propTypes = {\n  clouds: PropTypes.array,\n  products: PropTypes.array,\n  orderBy: PropTypes.string,\n  filterBy: PropTypes.array,\n  interaction: PropTypes.bool\n};\n\nexport { OldProductCardGrid };"],"names":["additionalFilters","title","value","filter","products","sort","_ref19","_ref20","lastUpdatedA","lastUpdated","lastUpdatedB","Date","_ref17","_ref18","nameA","name","nameB","localeCompare","ids","filteredProducts","forEach","productId","product","find","_ref21","id","push","_ref","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","OldProductCardGrid","_ref22","_ref22$clouds","clouds","_ref22$products","_ref22$interaction","interaction","_ref22$orderBy","orderBy","_ref22$filterByCloud","filterByCloud","_ref22$filterByIds","filterByIds","length","defaultFilter","_ref23","_useState","useState","additionalFilter","setAdditionalFilter","_useState2","setFilteredProducts","_useState3","cloudFilter","setCloudFilter","useEffect","_ref15","cloud","some","selectedCloud","selectedFilter","_ref16","filterByClouds","height","width","___EmotionJSX","className","css","DESKTOP_SCREEN_WIDTH","Picker","isQuiet","items","slice","map","_objectSpread","selected","onChange","index","i","Checkbox","key","checked","concat","_toConsumableArray","role","tabIndex","icon","Image","src","alt","description","discover","AnchorButton","href","variant","style","class","docs"],"sourceRoot":""}