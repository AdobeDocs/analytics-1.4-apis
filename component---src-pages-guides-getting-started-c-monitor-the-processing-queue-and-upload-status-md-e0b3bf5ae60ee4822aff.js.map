{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/c_Monitor_the_Processing_Queue_and_Upload_Status.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,yDADR,2DAGA,kFACA,oBACE,eAAIC,WAAW,MAAf,0DACA,eAAIA,WAAW,MAAf,sDAEF,gHACA,eACE,GAAM,oDADR,qDAGA,sCAAuB,uBAAYA,WAAW,KAAvB,2BAAvB,YAAsG,uBAAYA,WAAW,KAAvB,4BAAtG,kJACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,kRAWL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,6UAIL,eACE,GAAM,kCADR,mCAGA,8BAAe,uBAAYA,WAAW,KAAvB,8BAAf,mSACA,mBAAG,mBAAQA,WAAW,KAAnB,YAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,yQAUL,mBAAG,mBAAQA,WAAW,KAAnB,aAAH,MACA,qBAAK,iBAAMA,WAAW,OAAjB,2YAML,mBAAG,mBAAQA,WAAW,KAAnB,iBAAH,KAAyD,cAAGA,WAAW,IACnE,KAAQ,8BAD6C,+BAO7DJ,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-c-monitor-the-processing-queue-and-upload-status-md-e0b3bf5ae60ee4822aff.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-1.4-apis/analytics-1.4-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-3-monitor-the-processing-queue-and-upload-status\"\n    }}>{`Step 3: Monitor the Processing Queue and Upload Status`}</h1>\n    <p>{`You can monitor the status of the data upload in two steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Get the unique identifier for the data being uploaded`}</li>\n      <li parentName=\"ul\">{`Retrieve the upload status using that identifier`}</li>\n    </ul>\n    <p>{`The data upload is actually an FTP file transfer so the unique identifier is the File ID.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-the-file-id-for-the-current-data-upload\"\n    }}>{`Retrieve the File ID for the current data upload`}</h2>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`DataSource.GetFileIDs()`}</inlineCode>{` or the `}<inlineCode parentName=\"p\">{`DataSource.GetFileInfo()`}</inlineCode>{` to get the File ID of the file in the processing queue. The methods require the Data Source ID and the Report Suite ID to identify the file.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.GetFileIDs - Get File IDs for a Data Source in a Report Suite */ \n$params = array( \n'dataSourceID'=>$dsId, \n'filter'=>'', \n'reportSuiteID'=>$rsId \n); \n$result = sendRequest('DataSource.GetFileIDs', $params ); \nvar_dump($result); \nsleep(2); \n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.GetFileIDs - Get File IDs for a Data Source in a Report Suite */ \nFileIDResult responsedataSourceGetFileIDs = port.dataSourceGetFileIDs(Integer.toString(dataSourceID), \"\", reportSuiteID); \nSystem.out.println(\"Status of responsedataSourceGetFileIDs is: \"+responsedataSourceGetFileIDs.getStatus().getMessage());\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"monitor-the-file-upload-status\"\n    }}>{`Monitor the File Upload Status`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`DataSource.GetFileStatus()`}</inlineCode>{`, with the File ID and the Report Suite ID, to monitor the status of the file upload. The status information tells you if the file is queued for processing, processing, or processed. When data source processing completes, the data sent through the data source is available in Analytics.`}</p>\n    <p><strong parentName=\"p\">{`PHP Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.GetFileStatus - Get the File Status for a Data Source in a Report Suite */ \n$params = array( \n'dataSourceFileID'=>$dsId, \n'reportSuiteID'=>$rsId \n); \n\n$result = sendRequest('DataSource.GetFileStatus', $params ); \nvar_dump($result); \n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java Code`}</strong>{` `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* DataSource.GetFileStatus - Get the File Status for a Data Source in a Report Suite */ \nFileStatusResult responsedataSourceGetFileStatus = port.dataSourceGetFileStatus(Integer.toString(responsedataSourceSetupGeneric.getDataSourceID()), reportSuiteID); \n\nSystem.out.println(\"Status of responsedataSourceGetFileStatus is: \n\"+responsedataSourceGetFileStatus.getStatus().getMessage());\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Parent topic:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"c_Data_Sources_Overview.md\"\n      }}>{`Data Sources API Tutorial`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}