(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[54155],{69450:function(e,t,a){"use strict";a.r(t),a.d(t,{_frontmatter:function(){return m},default:function(){return s}});var r=a(22122),n=a(19756),o=(a(15007),a(64983)),i=a(99536),d=["components"],m={},l={_frontmatter:m},p=i.Z;function s(e){var t=e.components,a=(0,n.Z)(e,d);return(0,o.mdx)(p,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"step-4-create-an-import-job"},"Step 4: Create an Import Job"),(0,o.mdx)("p",null,"The code in this section shows you how to create the import job using the Saint.ImportCreateJob","(",")"," method with the parameters specified in Table 1."),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"check","_","divisions"),(0,o.mdx)("td",{parentName:"tr",align:null},"Boolean value that specifies whether to check report suites for compatible divisions. Supported values are: ",(0,o.mdx)("inlineCode",{parentName:"td"},"0"),": Do not check report suite compatibility ",(0,o.mdx)("inlineCode",{parentName:"td"},"1"),": Check report suite compatibility ","(","default",")")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"description"),(0,o.mdx)("td",{parentName:"tr",align:null},"A description of the import job.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"email","_","address"),(0,o.mdx)("td",{parentName:"tr",align:null},"The email address to receive the report.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"export","_","results"),(0,o.mdx)("td",{parentName:"tr",align:null},"Boolean value that specifies whether to automatically perform an export when the import job finishes processing. Supported values include: ",(0,o.mdx)("inlineCode",{parentName:"td"},"0"),": Do not export ","(","default",")"," ",(0,o.mdx)("inlineCode",{parentName:"td"},"1"),": Export when the import job completes.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"header"),(0,o.mdx)("td",{parentName:"tr",align:null},"An array of column values for classification.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"overwrite","_","conflicts"),(0,o.mdx)("td",{parentName:"tr",align:null},"Boolean value that specifies whether to overwrite data when conflicts occur. Supported values include: ",(0,o.mdx)("inlineCode",{parentName:"td"},"0"),": Do not rewrite data on conflicts ","(","default",")"," ",(0,o.mdx)("inlineCode",{parentName:"td"},"1"),": Overwrite data on conflicts")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"relation","_","id"),(0,o.mdx)("td",{parentName:"tr",align:null},"The relation ID. You got this ID as a return value from ",(0,o.mdx)("a",{parentName:"td",href:"../saint-api/methods/r_GetCompatibilityMetrics.md"},"Saint.GetCompatibilityMetrics","(",")")," method.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"report","_","suite","_","array"),(0,o.mdx)("td",{parentName:"tr",align:null},"The list of report suites to receive the import job.")))),(0,o.mdx)("p",null,"The first header column in the header parameter is always named ",(0,o.mdx)("inlineCode",{parentName:"p"},"Key"),", is mandatory, and must be unique across the entire system. For this articleâ€™s JJ. Esquire demo application, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Key")," value in each data record is the product SKU collected during Analytics JavaScript tagging."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"PHP Code")," "),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"/* Saint.ImportCreateJob */ \n$relation_id = ''; \n$header = array( \n'Key', // This is mandatory \n'Category', \n'Brand' \n); \n$importParams = array( \n'check_divistions'=>0, \n'description'=>'Classifying data for JJEsquire', \n'email_address'=>$notification_email, \n'export_results'=>0, // export_results = 0, meaning do not export following the import\n'header'=>$header, \n'overwrite_conflicts'=>0, \n'relation_id'=>$relation_id, \n'report_suite_array'=>$report_suite_array \n); \n$response = sendRequest('Saint.ImportCreateJob', $importParams ); \n\nvar_dump($response); \n$job_id = (int) $response; \n?>\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Java Code")," "),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},'/* Use Saint.ImportCreateJob to specify the parameters for the Import job and the header columns to be classified */ \nString emailAddress = ""; \nint relationId = ""; \nString[] header = new String[3]; \n/* Refer to the note of the Key column*/ \nheader[0] = "Key"; // This is mandatory \nheader[1] = "Category"; \nheader[2] = "Brand"; \n\nint importJobID = port.saintImportCreateJob(0, "Classifying data for JJEsquire", emailAddress, 0, header, 0, relationId, report_suite_array); \nSystem.out.println("Value of reportID from saintImportCreateJob is: "+importJobID);\n')),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"Saint.ImportCreateJob()")," method returns the ID of the newly created import job. You will use this ID to populate the import job in the next step."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Parent topic:")," ",(0,o.mdx)("a",{parentName:"p",href:"c_SAINT_API_Overview.md"},"SAINT API Tutorial")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-getting-started-c-create-an-import-job-md-12cb4e834145331e1cec.js.map