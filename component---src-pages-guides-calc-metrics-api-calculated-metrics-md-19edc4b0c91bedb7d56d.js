(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[51061],{60638:function(n,e,t){"use strict";t.r(e),t.d(e,{_frontmatter:function(){return m},default:function(){return d}});var r=t(22122),i=t(19756),a=(t(15007),t(64983)),l=t(99536),o=["components"],m={},s={_frontmatter:m},p=l.Z;function d(n){var e=n.components,t=(0,i.Z)(n,o);return(0,a.mdx)(p,(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"calculated-metrics"},"Calculated Metrics"),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"CalculatedMetrics.Get")," "),(0,a.mdx)("p",null,"Request:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'{\n    "accessLevel":"(string)",\n    "fields":[\n        "(string)"\n    ],\n    "filters":{\n        "name":"(string)",\n        "tags":"(string)",\n        "owner":"(string)",\n        "reportSuiteID":"(string)",\n        "approved":"(boolean)",\n        "favorite":"(boolean)"\n    },\n    "selected":[\n        "(string)"\n    ],\n    "sort":"(string)"\n}\n')),(0,a.mdx)("p",null,"Response:"),(0,a.mdx)("p",null,"An array of calculated metrics that may look something like this:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'...\n    {\n        "id":"sample_string_id",\n        "name":"12432",\n        "description":"",\n        "reportSuiteID":"sample_rs_1",\n        "owner":"sample_owner",\n        "polarity":"positive",\n        "precision":4,\n        "type":"decimal",\n        "definition":{\n            "metric":"visits"\n        },\n        "tags":[\n            \n        ],\n        "shares":[\n            {\n                "type":"organization",\n                "name":"all"\n            }\n        ],\n        "modified":"2015-06-12 09:13:04"\n    },\n...\n\n')),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"CalculatedMetrics.Delete")," "),(0,a.mdx)("p",null,"Request:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'{\n    "calculatedMetricID":"(string)"\n}\n')),(0,a.mdx)("p",null,"Response:"),(0,a.mdx)("p",null,"true, if no error"),(0,a.mdx)("p",null," ",(0,a.mdx)("strong",{parentName:"p"},"CalculatedMetrics.GetFunctions")," "),(0,a.mdx)("p",null,"Request: empty"),(0,a.mdx)("p",null,"Response: An array of calc metric functions that look like this:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'{\n        "id":"pow",\n        "name":"Power operator",\n        "description":"Returns x raised to the y power",\n        "required":[\n            "column1",\n            "column2"\n        ],\n        "optional":[\n            \n        ]\n    },\n...\n    {\n        "id":"ls-intercept-quadratic",\n        "name":"Quadratic regression: Intercept",\n        "description":"Quadratic regression: Y = ( a + b X ) ^ 2, Returns a.",\n        "required":[\n            "x",\n            "y"\n        ],\n        "optional":[\n            "include-zeros"\n        ]\n    },\n...\n')),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},'required": the parameters that are required to use the function in a calc metric definition and the order they must be in'),(0,a.mdx)("li",{parentName:"ul"},'"optional": additional parameters that may be left out, but must still be included in the order shown')),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"CalculatedMetrics.Save")," "),(0,a.mdx)("p",null,"Request:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'{\n    "definition":{\n        (see below)\n    },\n    "description":"(string)",\n    "favorite":"(boolean)",\n    "id":"(string)",\n    "name":"(string)",\n    "owner":"(string)",\n    "polarity":"(string)",\n    "precision":"(int)",\n    "reportSuiteID":"(string)",\n    "shares":[\n        {\n            "type":"(string)",\n            "name":"(string)"\n        }\n    ],\n    "tags":[\n        "(string)"\n    ],\n    "type":"(string)"\n}\n')),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},'"id": required for update, must be left out to create a new calc metric'),(0,a.mdx)("li",{parentName:"ul"},'"definition": required for creating, also required when updating the reportSuiteID'),(0,a.mdx)("li",{parentName:"ul"},'"reportSuiteID": required for creating, also required when updating the definition'),(0,a.mdx)("li",{parentName:"ul"},'"name": required for creating'),(0,a.mdx)("li",{parentName:"ul"},'"polarity": optional, one of "positive", "negative", defaults to "positive"'),(0,a.mdx)("li",{parentName:"ul"},'"type": optional, one of "number", "date", "currency", "percent", defaults to "number"'),(0,a.mdx)("li",{parentName:"ul"},'"precision": optional, an integer between 0 and 10, defaults to 0')),(0,a.mdx)("p",null,"Response:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'{\n    "calculatedMetricID":"(string)"\n}\n')),(0,a.mdx)("p",null,"Definition:"),(0,a.mdx)("p",null,"May be any nested combination of the following. To see all the possible functions, call CalculatedMetrics.GetFunctions"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},'"calculatedMetric": this is a wrapper around any piece of the calculated metric definition. The only reason to use this wrapper is to apply "segments" to all pieces inside the wrapper.'),(0,a.mdx)("li",{parentName:"ul"},'"function": specify a function to process. must be used with "parameters" which is a list of calculated metric pieces to use as parameters to the function'),(0,a.mdx)("li",{parentName:"ul"},'"metric": specify a metric to be used in a calculation. may be used with "allocation" and "segments"'),(0,a.mdx)("li",{parentName:"ul"},'"number": specify a value to be used in a calculation'),(0,a.mdx)("li",{parentName:"ul"},'"boolean": specify true or false, only used by a select few functions that have the parameter "ascending-sort" or "include-zeros"')),(0,a.mdx)("p",null,"Basic Examples:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n    "number": 100\n}\n')),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n    "metric": "pageviews"\n}\n')),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n    "metric": "revenue",\n    "allocation": "linear"\n}\n')),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n    "metric": "revenue",\n    "allocation": "linear",\n    "segments": [\n        "[segment ID]"\n    ]\n}\n')),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n    "function": "divide",\n    "parameters": [\n        {\n            "metric": "revenue",\n            "allocation": "linear"\n        },\n        {\n            "number": 100\n        }\n    ]\n}\n')),(0,a.mdx)("p",null,"Complex Examples:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n        "function": "if",\n        "parameters": [\n            {\n                "function": "gt",\n                "parameters": [\n                    {\n                        "metric": "pageviews"\n                    },\n                    {\n                        "number": 1000\n                    }\n                ]\n            },\n            {\n                "metric": "pageviews"\n            },\n            {\n                "number": 1000\n            }\n        ]\n    }\n')),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n        "function": "negate",\n        "parameters": [\n            {\n                "function": "modulo",\n                "parameters": [\n                    {\n                        "metric": "pageviews"\n                    },\n                    {\n                        "function": "abs",\n                        "parameters": [\n                            {\n                                "function": "ceil",\n                                "parameters": [\n                                    {\n                                        "function": "tan",\n                                        "parameters": [\n                                            {\n                                                "function": "lt",\n                                                "parameters": [\n                                                    {\n                                                        "metric": "pageviews"\n                                                    },\n                                                    {\n                                                        "number": 1000\n                                                    }\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n')),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'"definition": {\n        "function": "row-max",\n        "parameters": [\n            {\n                "columns": [\n                    {\n                        "function": "row-sum",\n                        "parameters": [\n                            {\n                                "columns": [\n                                    {\n                                        "metric": "pageviews"\n                                    },\n                                    {\n                                        "number": 1000\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        "metric": "pageviews"\n                    },\n                    {\n                        "number": 1000\n                    }\n                ]\n            },\n            {\n                "boolean": true\n            }\n        ]\n    }\n')))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-calc-metrics-api-calculated-metrics-md-19edc4b0c91bedb7d56d.js.map